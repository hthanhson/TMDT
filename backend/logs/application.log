2025-05-12 09:22:22,154 INFO org.springframework.boot.StartupInfoLogger [main] Starting TmdtApplication using Java 17.0.15 on abc-VMware-Virtual-Platform with PID 6152 (/home/abc/Downloads/TMDT/backend/target/classes started by abc in /home/abc/Downloads/TMDT/backend)
2025-05-12 09:22:22,157 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2025-05-12 09:22:22,872 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-12 09:22:22,946 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 68 ms. Found 20 JPA repository interfaces.
2025-05-12 09:22:23,863 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http) 8089 (http)
2025-05-12 09:22:23,870 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2025-05-12 09:22:23,871 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8089"]
2025-05-12 09:22:23,885 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2025-05-12 09:22:23,885 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-05-12 09:22:23,966 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2025-05-12 09:22:23,966 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1774 ms
2025-05-12 09:22:24,166 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader TomcatEmbeddedWebappClassLoader
  context: ROOT
  delegate: true
----------> Parent Classloader:
jdk.internal.loader.ClassLoaders$AppClassLoader@30946e09

2025-05-12 09:22:24,255 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2025-05-12 09:22:24,258 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2025-05-12 09:22:24,259 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2025-05-12 09:22:24,259 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2025-05-12 09:22:24,260 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2025-05-12 09:22:24,260 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................"SELECT 1"
2025-05-12 09:22:24,260 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................10000
2025-05-12 09:22:24,261 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2025-05-12 09:22:24,261 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2025-05-12 09:22:24,261 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2025-05-12 09:22:24,262 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2025-05-12 09:22:24,262 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"com.mysql.cj.jdbc.Driver"
2025-05-12 09:22:24,263 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2025-05-12 09:22:24,263 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2025-05-12 09:22:24,263 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2025-05-12 09:22:24,263 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................300000
2025-05-12 09:22:24,264 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2025-05-12 09:22:24,264 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2025-05-12 09:22:24,264 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:mysql://192.168.146.1:3306/tmdt?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&connectTimeout=30000&socketTimeout=60000&autoReconnect=true
2025-05-12 09:22:24,265 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2025-05-12 09:22:24,265 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2025-05-12 09:22:24,266 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................600000
2025-05-12 09:22:24,266 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................5
2025-05-12 09:22:24,266 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2025-05-12 09:22:24,266 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2025-05-12 09:22:24,267 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................2
2025-05-12 09:22:24,267 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2025-05-12 09:22:24,267 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2025-05-12 09:22:24,268 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2025-05-12 09:22:24,268 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2025-05-12 09:22:24,268 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2025-05-12 09:22:24,268 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2025-05-12 09:22:24,269 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2025-05-12 09:22:24,269 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2025-05-12 09:22:24,269 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"webuser"
2025-05-12 09:22:24,270 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2025-05-12 09:22:24,270 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2025-05-12 09:22:33,373 DEBUG com.zaxxer.hikari.pool.PoolBase [main] HikariPool-1 - Failed to create/setup connection: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
2025-05-12 09:22:33,375 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Cannot acquire connection from data source
java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:111)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:98)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:90)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:64)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:74)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:895)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:820)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:160)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:118)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:332)
	at org.springframework.boot.jdbc.EmbeddedDatabaseConnection.isEmbedded(EmbeddedDatabaseConnection.java:164)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.isEmbeddedDatabase(DataSourceScriptDatabaseInitializer.java:70)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.isEnabled(AbstractScriptDatabaseInitializer.java:83)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:106)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:101)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:65)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:693)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:510)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:374)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:134)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:642)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:642)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:410)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4936)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1328)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1318)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:795)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1328)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1318)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:249)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:428)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:922)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:577)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.example.tmdt.TmdtApplication.main(TmdtApplication.java:14)
Caused by: com.mysql.cj.exceptions.CJException: Access denied for user 'webuser'@'MyPC' (using password: NO)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:150)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:128)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:849)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:771)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:739)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:156)
	at com.mysql.cj.protocol.a.NativeAuthenticationProvider.proceedHandshakeWithPluggableAuthentication(NativeAuthenticationProvider.java:468)
	at com.mysql.cj.protocol.a.NativeAuthenticationProvider.connect(NativeAuthenticationProvider.java:213)
	at com.mysql.cj.protocol.a.NativeProtocol.connect(NativeProtocol.java:1430)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:134)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:839)
	... 132 common frames omitted
2025-05-12 09:22:34,377 ERROR com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:111)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:98)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:90)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:64)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:74)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:895)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:820)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:160)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:118)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:332)
	at org.springframework.boot.jdbc.EmbeddedDatabaseConnection.isEmbedded(EmbeddedDatabaseConnection.java:164)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.isEmbeddedDatabase(DataSourceScriptDatabaseInitializer.java:70)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.isEnabled(AbstractScriptDatabaseInitializer.java:83)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:106)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:101)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:65)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:693)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:510)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:374)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:134)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:642)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:642)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:410)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4936)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1328)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1318)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:795)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1328)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1318)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:249)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:428)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:922)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:577)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.example.tmdt.TmdtApplication.main(TmdtApplication.java:14)
Caused by: com.mysql.cj.exceptions.CJException: Access denied for user 'webuser'@'MyPC' (using password: NO)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:150)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:128)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:849)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:771)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:739)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:156)
	at com.mysql.cj.protocol.a.NativeAuthenticationProvider.proceedHandshakeWithPluggableAuthentication(NativeAuthenticationProvider.java:468)
	at com.mysql.cj.protocol.a.NativeAuthenticationProvider.connect(NativeAuthenticationProvider.java:213)
	at com.mysql.cj.protocol.a.NativeProtocol.connect(NativeProtocol.java:1430)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:134)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:839)
	... 132 common frames omitted
2025-05-12 09:22:34,851 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2025-05-12 09:22:34,852 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2025-05-12 09:22:34,853 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2025-05-12 09:22:34,853 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2025-05-12 09:22:34,853 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2025-05-12 09:22:34,854 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................"SELECT 1"
2025-05-12 09:22:34,854 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................10000
2025-05-12 09:22:34,854 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2025-05-12 09:22:34,855 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2025-05-12 09:22:34,855 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2025-05-12 09:22:34,855 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2025-05-12 09:22:34,856 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"com.mysql.cj.jdbc.Driver"
2025-05-12 09:22:34,856 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2025-05-12 09:22:34,856 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2025-05-12 09:22:34,857 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2025-05-12 09:22:34,857 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................300000
2025-05-12 09:22:34,858 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2025-05-12 09:22:34,858 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2025-05-12 09:22:34,858 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:mysql://192.168.146.1:3306/tmdt?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&connectTimeout=30000&socketTimeout=60000&autoReconnect=true
2025-05-12 09:22:34,859 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2025-05-12 09:22:34,859 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2025-05-12 09:22:34,859 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................600000
2025-05-12 09:22:34,860 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................5
2025-05-12 09:22:34,860 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2025-05-12 09:22:34,860 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2025-05-12 09:22:34,860 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................2
2025-05-12 09:22:34,861 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2025-05-12 09:22:34,861 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2025-05-12 09:22:34,861 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2025-05-12 09:22:34,861 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2025-05-12 09:22:34,862 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2025-05-12 09:22:34,862 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2025-05-12 09:22:34,862 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2025-05-12 09:22:34,863 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2025-05-12 09:22:34,863 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"webuser"
2025-05-12 09:22:34,863 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2025-05-12 09:22:34,863 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2025-05-12 09:22:38,873 DEBUG com.zaxxer.hikari.pool.PoolBase [main] HikariPool-1 - Failed to create/setup connection: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
2025-05-12 09:22:38,874 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Cannot acquire connection from data source
java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:111)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:98)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:90)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:64)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:74)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:895)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:820)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:272)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:246)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:223)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:295)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:252)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:223)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:693)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:510)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:374)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:134)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:642)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:642)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:410)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4936)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1328)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1318)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:795)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1328)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1318)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:249)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:428)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:922)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:577)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.example.tmdt.TmdtApplication.main(TmdtApplication.java:14)
Caused by: com.mysql.cj.exceptions.CJException: Access denied for user 'webuser'@'MyPC' (using password: NO)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:150)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:128)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:849)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:771)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:739)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:156)
	at com.mysql.cj.protocol.a.NativeAuthenticationProvider.proceedHandshakeWithPluggableAuthentication(NativeAuthenticationProvider.java:468)
	at com.mysql.cj.protocol.a.NativeAuthenticationProvider.connect(NativeAuthenticationProvider.java:213)
	at com.mysql.cj.protocol.a.NativeProtocol.connect(NativeProtocol.java:1430)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:134)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:839)
	... 140 common frames omitted
2025-05-12 09:22:39,876 ERROR com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:111)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:98)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:90)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:64)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:74)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:895)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:820)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:272)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:246)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:223)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:295)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:252)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:223)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:693)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:510)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:374)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:134)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:642)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:642)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:410)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4936)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1328)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1318)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:795)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1328)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1318)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:249)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:428)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:922)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:577)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.example.tmdt.TmdtApplication.main(TmdtApplication.java:14)
Caused by: com.mysql.cj.exceptions.CJException: Access denied for user 'webuser'@'MyPC' (using password: NO)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:150)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:128)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:849)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:771)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:739)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:156)
	at com.mysql.cj.protocol.a.NativeAuthenticationProvider.proceedHandshakeWithPluggableAuthentication(NativeAuthenticationProvider.java:468)
	at com.mysql.cj.protocol.a.NativeAuthenticationProvider.connect(NativeAuthenticationProvider.java:213)
	at com.mysql.cj.protocol.a.NativeProtocol.connect(NativeProtocol.java:1430)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:134)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:839)
	... 140 common frames omitted
2025-05-12 09:22:40,750 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-12 09:22:41,286 DEBUG org.springframework.web.filter.GenericFilterBean [main] Filter 'authenticationJwtTokenFilter' configured for use
2025-05-12 09:22:42,144 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.tmdt.controller.AdminController
2025-05-12 09:22:42,165 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.AdminController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.AdminController.updateOrderStatus(java.lang.Long,com.example.tmdt.model.Order$OrderStatus)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,179 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.tmdt.controller.AdminController
2025-05-12 09:22:42,179 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.AdminController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.AdminController.getDashboardSummary()]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,180 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.tmdt.controller.AdminController
2025-05-12 09:22:42,180 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.AdminController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.AdminController.getAllUsers()]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,180 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.tmdt.controller.AdminController
2025-05-12 09:22:42,180 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.AdminController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.AdminController.getUserById(java.lang.Long)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,180 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.tmdt.controller.AdminController
2025-05-12 09:22:42,180 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.AdminController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.AdminController.deleteUser(java.lang.Long)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,181 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.tmdt.controller.AdminController
2025-05-12 09:22:42,181 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.AdminController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.AdminController.getAllOrders()]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,181 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.tmdt.controller.AdminController
2025-05-12 09:22:42,181 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.AdminController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.AdminController.getAllProducts()]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,181 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.tmdt.controller.AdminController
2025-05-12 09:22:42,182 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.AdminController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.AdminController.deleteProduct(java.lang.Long)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,182 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.tmdt.controller.AdminController
2025-05-12 09:22:42,182 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.AdminController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.AdminController.assignCouponToUser(java.lang.Long,java.util.Map)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,302 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.CategoryController.createCategory(com.example.tmdt.model.Category)
2025-05-12 09:22:42,302 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.CategoryController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.CategoryController.createCategory(com.example.tmdt.model.Category)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,303 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.CategoryController.updateCategory(java.lang.Long,com.example.tmdt.model.Category)
2025-05-12 09:22:42,303 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.CategoryController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.CategoryController.updateCategory(java.lang.Long,com.example.tmdt.model.Category)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,303 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.CategoryController.deleteCategory(java.lang.Long)
2025-05-12 09:22:42,304 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.CategoryController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.CategoryController.deleteCategory(java.lang.Long)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,313 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ChatController.getActiveChatSessions()
2025-05-12 09:22:42,313 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ChatController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ChatController.getActiveChatSessions()]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,314 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or #userId == authentication.principal.id") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ChatController.getUserChatHistory(java.lang.String)
2025-05-12 09:22:42,316 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ChatController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ChatController.getUserChatHistory(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN') or #userId == authentication.principal.id', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,317 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ChatController.endChatSession(java.lang.String)
2025-05-12 09:22:42,317 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ChatController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ChatController.endChatSession(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,318 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ChatController.getAllChatSessions()
2025-05-12 09:22:42,318 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ChatController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ChatController.getAllChatSessions()]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,324 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.assignCouponToUser(java.lang.Long,java.lang.Double,java.lang.Double,java.time.LocalDateTime,java.lang.String,java.lang.String)
2025-05-12 09:22:42,325 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.CouponController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.assignCouponToUser(java.lang.Long,java.lang.Double,java.lang.Double,java.time.LocalDateTime,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,326 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.getAllValidCoupons()
2025-05-12 09:22:42,326 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.CouponController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.getAllValidCoupons()]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,327 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.getActiveCoupons()
2025-05-12 09:22:42,327 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.CouponController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.getActiveCoupons()]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,327 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.getMyCoupons(com.example.tmdt.model.User)
2025-05-12 09:22:42,328 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.CouponController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.getMyCoupons(com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,328 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.deleteCoupon(java.lang.Long)
2025-05-12 09:22:42,328 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.CouponController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.deleteCoupon(java.lang.Long)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,328 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.deactivateExpiredCoupons()
2025-05-12 09:22:42,328 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.CouponController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.deactivateExpiredCoupons()]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,328 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.getAllCoupons()
2025-05-12 09:22:42,328 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.CouponController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.getAllCoupons()]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,329 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.createCoupon(com.example.tmdt.payload.request.CouponCreateRequest)
2025-05-12 09:22:42,329 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.CouponController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.createCoupon(com.example.tmdt.payload.request.CouponCreateRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,329 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.verifyCoupon(com.example.tmdt.model.User,com.example.tmdt.payload.request.CouponVerifyRequest)
2025-05-12 09:22:42,329 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.CouponController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.verifyCoupon(com.example.tmdt.model.User,com.example.tmdt.payload.request.CouponVerifyRequest)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,329 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.updateCoupon(java.lang.Long,com.example.tmdt.payload.request.CouponCreateRequest)
2025-05-12 09:22:42,330 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.CouponController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.updateCoupon(java.lang.Long,com.example.tmdt.payload.request.CouponCreateRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,342 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.FileController.deleteFile(java.lang.String)
2025-05-12 09:22:42,342 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.FileController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.FileController.deleteFile(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,343 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.FileController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String)
2025-05-12 09:22:42,343 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.FileController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.FileController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,344 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.FileController.uploadMultipleFiles(org.springframework.web.multipart.MultipartFile[],java.lang.String)
2025-05-12 09:22:42,344 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.FileController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.FileController.uploadMultipleFiles(org.springframework.web.multipart.MultipartFile[],java.lang.String)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,412 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.createOrderCancelledNotification(java.util.Map,com.example.tmdt.model.User)
2025-05-12 09:22:42,413 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.NotificationController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.createOrderCancelledNotification(java.util.Map,com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,415 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.createCouponReceivedNotification(java.util.Map)
2025-05-12 09:22:42,415 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.NotificationController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.createCouponReceivedNotification(java.util.Map)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,415 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.broadcastCouponNotification(java.util.Map)
2025-05-12 09:22:42,415 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.NotificationController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.broadcastCouponNotification(java.util.Map)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,416 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User)
2025-05-12 09:22:42,416 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.NotificationController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,416 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getRecentNotifications(com.example.tmdt.model.User,int)
2025-05-12 09:22:42,416 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.NotificationController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getRecentNotifications(com.example.tmdt.model.User,int)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,416 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadNotifications(com.example.tmdt.model.User)
2025-05-12 09:22:42,417 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.NotificationController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadNotifications(com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,417 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User)
2025-05-12 09:22:42,417 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.NotificationController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,417 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.deleteAllNotifications(com.example.tmdt.model.User)
2025-05-12 09:22:42,418 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.NotificationController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.deleteAllNotifications(com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,418 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.createOrderSuccessNotification(java.util.Map,com.example.tmdt.model.User)
2025-05-12 09:22:42,418 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.NotificationController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.createOrderSuccessNotification(java.util.Map,com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,418 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.markAsRead(com.example.tmdt.model.User,java.lang.Long)
2025-05-12 09:22:42,418 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.NotificationController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.markAsRead(com.example.tmdt.model.User,java.lang.Long)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,419 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.markAllAsRead(com.example.tmdt.model.User)
2025-05-12 09:22:42,419 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.NotificationController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.markAllAsRead(com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,419 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.deleteNotification(com.example.tmdt.model.User,java.lang.Long)
2025-05-12 09:22:42,419 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.NotificationController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.deleteNotification(com.example.tmdt.model.User,java.lang.Long)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,419 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.createSystemNotification(java.lang.String,java.lang.String)
2025-05-12 09:22:42,419 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.NotificationController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.createSystemNotification(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,482 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.refundOrder(java.lang.Long)
2025-05-12 09:22:42,482 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.OrderController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.refundOrder(java.lang.Long)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,483 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.updateOrderStatus(java.lang.Long,java.lang.String)
2025-05-12 09:22:42,483 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.OrderController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.updateOrderStatus(java.lang.Long,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,483 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getAllOrders()
2025-05-12 09:22:42,483 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.OrderController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getAllOrders()]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,484 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.createOrder(com.example.tmdt.payload.request.OrderRequest) throws java.io.UnsupportedEncodingException
2025-05-12 09:22:42,484 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.OrderController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.createOrder(com.example.tmdt.payload.request.OrderRequest) throws java.io.UnsupportedEncodingException]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,484 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getOrderById(java.lang.Long)
2025-05-12 09:22:42,484 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.OrderController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getOrderById(java.lang.Long)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,484 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.updatePaymentStatus(java.lang.Long,java.lang.String)
2025-05-12 09:22:42,484 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.OrderController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.updatePaymentStatus(java.lang.Long,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,485 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getOrdersByStatus(java.lang.String)
2025-05-12 09:22:42,485 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.OrderController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getOrdersByStatus(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,485 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getOrdersByDateRange(java.lang.String,java.lang.String)
2025-05-12 09:22:42,485 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.OrderController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getOrdersByDateRange(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,485 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getCurrentUserOrders()
2025-05-12 09:22:42,485 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.OrderController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getCurrentUserOrders()]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,486 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getOrderSummary()
2025-05-12 09:22:42,486 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.OrderController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getOrderSummary()]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,486 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.cancelOrder(java.lang.Long)
2025-05-12 09:22:42,486 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.OrderController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.cancelOrder(java.lang.Long)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,486 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.requestRefund(java.lang.Long,java.lang.String,java.lang.String,java.util.List)
2025-05-12 09:22:42,486 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.OrderController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.requestRefund(java.lang.Long,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasRole('USER')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,487 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getRefundStatus(java.lang.Long)
2025-05-12 09:22:42,487 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.OrderController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getRefundStatus(java.lang.Long)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,490 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.PaymentController.createPay(com.example.tmdt.payload.request.OrderRequest) throws java.io.UnsupportedEncodingException
2025-05-12 09:22:42,490 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.PaymentController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.PaymentController.createPay(com.example.tmdt.payload.request.OrderRequest) throws java.io.UnsupportedEncodingException]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,629 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ProductController.deleteProduct(java.lang.Long)
2025-05-12 09:22:42,629 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ProductController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ProductController.deleteProduct(java.lang.Long)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,631 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ProductController.createProduct(com.example.tmdt.model.Product)
2025-05-12 09:22:42,631 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ProductController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ProductController.createProduct(com.example.tmdt.model.Product)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,631 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ProductController.updateProduct(java.lang.Long,com.example.tmdt.model.Product)
2025-05-12 09:22:42,631 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ProductController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ProductController.updateProduct(java.lang.Long,com.example.tmdt.model.Product)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,631 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ProductController.addReview(java.lang.Long,com.example.tmdt.payload.request.ReviewRequest,boolean,boolean)
2025-05-12 09:22:42,631 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ProductController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ProductController.addReview(java.lang.Long,com.example.tmdt.payload.request.ReviewRequest,boolean,boolean)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,635 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.RefundController.getAllRefundRequests()
2025-05-12 09:22:42,635 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.RefundController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.RefundController.getAllRefundRequests()]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,636 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.RefundController.createRefundRequest(com.example.tmdt.payload.request.RefundRequestDto,java.util.List)
2025-05-12 09:22:42,636 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.RefundController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.RefundController.createRefundRequest(com.example.tmdt.payload.request.RefundRequestDto,java.util.List)]] with attributes [[authorize: 'hasRole('USER')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,636 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.RefundController.getRefundRequestByOrderId(java.lang.Long)
2025-05-12 09:22:42,636 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.RefundController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.RefundController.getRefundRequestByOrderId(java.lang.Long)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,636 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.RefundController.getRefundRequestsByStatus(java.lang.String)
2025-05-12 09:22:42,636 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.RefundController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.RefundController.getRefundRequestsByStatus(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,637 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.RefundController.updateRefundRequestStatus(java.lang.Long,java.lang.String,java.lang.String)
2025-05-12 09:22:42,637 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.RefundController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.RefundController.updateRefundRequestStatus(java.lang.Long,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,637 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.RefundController.getRefundRequestById(java.lang.Long)
2025-05-12 09:22:42,637 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.RefundController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.RefundController.getRefundRequestById(java.lang.Long)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,637 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.RefundController.getMyRefundRequests()
2025-05-12 09:22:42,637 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.RefundController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.RefundController.getMyRefundRequests()]] with attributes [[authorize: 'hasRole('USER')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,641 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ReviewController.createReview(java.lang.Long,com.example.tmdt.model.User,java.lang.String,java.lang.String,int)
2025-05-12 09:22:42,641 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ReviewController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ReviewController.createReview(java.lang.Long,com.example.tmdt.model.User,java.lang.String,java.lang.String,int)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,642 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ReviewController.getUserReviews(com.example.tmdt.model.User)
2025-05-12 09:22:42,642 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ReviewController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ReviewController.getUserReviews(com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,643 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ReviewController.updateReview(java.lang.Long,com.example.tmdt.model.User,java.lang.String,java.lang.String,int)
2025-05-12 09:22:42,643 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ReviewController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ReviewController.updateReview(java.lang.Long,com.example.tmdt.model.User,java.lang.String,java.lang.String,int)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,643 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ReviewController.deleteReview(java.lang.Long,com.example.tmdt.model.User)
2025-05-12 09:22:42,643 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ReviewController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ReviewController.deleteReview(java.lang.Long,com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,643 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ReviewController.markReviewHelpful(java.lang.Long,com.example.tmdt.model.User,boolean)
2025-05-12 09:22:42,643 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ReviewController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ReviewController.markReviewHelpful(java.lang.Long,com.example.tmdt.model.User,boolean)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,644 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ReviewController.checkUserReviewed(java.lang.Long,com.example.tmdt.model.User)
2025-05-12 09:22:42,644 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ReviewController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ReviewController.checkUserReviewed(java.lang.Long,com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,644 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ReviewController.createSimpleReview(java.lang.Long,com.example.tmdt.model.User,int,java.lang.String,boolean)
2025-05-12 09:22:42,644 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ReviewController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ReviewController.createSimpleReview(java.lang.Long,com.example.tmdt.model.User,int,java.lang.String,boolean)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,708 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'SHIPPER\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipmentController.updateOrderStatus(com.example.tmdt.model.User,java.lang.Long,com.example.tmdt.payload.request.StatusUpdateRequest)
2025-05-12 09:22:42,708 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ShipmentController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipmentController.updateOrderStatus(com.example.tmdt.model.User,java.lang.Long,com.example.tmdt.payload.request.StatusUpdateRequest)]] with attributes [[authorize: 'hasRole('SHIPPER')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,709 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'SHIPPER\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipmentController.getOrdersReadyForShipment()
2025-05-12 09:22:42,709 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ShipmentController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipmentController.getOrdersReadyForShipment()]] with attributes [[authorize: 'hasRole('SHIPPER')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,709 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'SHIPPER\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipmentController.getShipperOrders(com.example.tmdt.model.User)
2025-05-12 09:22:42,709 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ShipmentController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipmentController.getShipperOrders(com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('SHIPPER')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,710 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'SHIPPER\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipmentController.getShipperOrdersByStatus(com.example.tmdt.model.User,com.example.tmdt.model.Order$OrderStatus)
2025-05-12 09:22:42,710 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ShipmentController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipmentController.getShipperOrdersByStatus(com.example.tmdt.model.User,com.example.tmdt.model.Order$OrderStatus)]] with attributes [[authorize: 'hasRole('SHIPPER')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,710 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'SHIPPER\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipmentController.acceptOrder(com.example.tmdt.model.User,java.lang.Long)
2025-05-12 09:22:42,710 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ShipmentController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipmentController.acceptOrder(com.example.tmdt.model.User,java.lang.Long)]] with attributes [[authorize: 'hasRole('SHIPPER')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,710 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipmentController.updateShipmentStatus(java.lang.Long,com.example.tmdt.payload.request.StatusUpdateRequest)
2025-05-12 09:22:42,710 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ShipmentController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipmentController.updateShipmentStatus(java.lang.Long,com.example.tmdt.payload.request.StatusUpdateRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,721 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'SHIPPER\')") found on: com.example.tmdt.controller.ShipperController
2025-05-12 09:22:42,722 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ShipperController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipperController.updateOrderStatus(java.lang.Long,com.example.tmdt.payload.request.StatusUpdateRequest)]] with attributes [[authorize: 'hasRole('SHIPPER')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,723 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'SHIPPER\')") found on: com.example.tmdt.controller.ShipperController
2025-05-12 09:22:42,723 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ShipperController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipperController.getOrderTrackingHistory(java.lang.Long)]] with attributes [[authorize: 'hasRole('SHIPPER')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,723 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'SHIPPER\')") found on: com.example.tmdt.controller.ShipperController
2025-05-12 09:22:42,723 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ShipperController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipperController.getShipperOrders(int,int,java.lang.String)]] with attributes [[authorize: 'hasRole('SHIPPER')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,723 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'SHIPPER\')") found on: com.example.tmdt.controller.ShipperController
2025-05-12 09:22:42,723 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ShipperController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipperController.acceptOrder(java.lang.Long)]] with attributes [[authorize: 'hasRole('SHIPPER')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,723 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'SHIPPER\')") found on: com.example.tmdt.controller.ShipperController
2025-05-12 09:22:42,724 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ShipperController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipperController.getAvailableOrders(int,int)]] with attributes [[authorize: 'hasRole('SHIPPER')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,734 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserBalanceController.getUserBalance(com.example.tmdt.model.User)
2025-05-12 09:22:42,735 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.UserBalanceController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserBalanceController.getUserBalance(com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,735 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserBalanceController.deposit(com.example.tmdt.model.User,com.example.tmdt.payload.request.DepositRequest)
2025-05-12 09:22:42,735 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.UserBalanceController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserBalanceController.deposit(com.example.tmdt.model.User,com.example.tmdt.payload.request.DepositRequest)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,736 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserBalanceController.withdraw(com.example.tmdt.model.User,java.util.Map)
2025-05-12 09:22:42,736 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.UserBalanceController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserBalanceController.withdraw(com.example.tmdt.model.User,java.util.Map)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,736 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserBalanceController.getTransactionHistory(com.example.tmdt.model.User,int,int)
2025-05-12 09:22:42,736 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.UserBalanceController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserBalanceController.getTransactionHistory(com.example.tmdt.model.User,int,int)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,961 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserPointsController.getPointsHistory(com.example.tmdt.model.User)
2025-05-12 09:22:42,961 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.UserPointsController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserPointsController.getPointsHistory(com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,962 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserPointsController.getUserPoints(com.example.tmdt.model.User)
2025-05-12 09:22:42,962 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.UserPointsController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserPointsController.getUserPoints(com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,962 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserPointsController.getPointsSummary(com.example.tmdt.model.User)
2025-05-12 09:22:42,962 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.UserPointsController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserPointsController.getPointsSummary(com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:42,963 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserPointsController.redeemPoints(com.example.tmdt.model.User,int)
2025-05-12 09:22:42,963 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.UserPointsController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserPointsController.redeemPoints(com.example.tmdt.model.User,int)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:43,069 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.addToWishlist(com.example.tmdt.model.User,java.lang.Long)
2025-05-12 09:22:43,069 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.WishlistController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.addToWishlist(com.example.tmdt.model.User,java.lang.Long)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:43,070 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.removeFromWishlist(com.example.tmdt.model.User,java.lang.Long)
2025-05-12 09:22:43,072 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.WishlistController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.removeFromWishlist(com.example.tmdt.model.User,java.lang.Long)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:43,072 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.clearWishlist(com.example.tmdt.model.User)
2025-05-12 09:22:43,073 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.WishlistController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.clearWishlist(com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:43,074 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User)
2025-05-12 09:22:43,075 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.WishlistController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:43,076 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.checkInWishlist(com.example.tmdt.model.User,java.lang.Long)
2025-05-12 09:22:43,076 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.WishlistController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.checkInWishlist(com.example.tmdt.model.User,java.lang.Long)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:22:43,286 DEBUG org.springframework.security.web.access.expression.ExpressionBasedFilterInvocationSecurityMetadataSource [main] Adding web access control expression [permitAll] for Ant [pattern='/api/auth/**']
2025-05-12 09:22:43,286 DEBUG org.springframework.security.web.access.expression.ExpressionBasedFilterInvocationSecurityMetadataSource [main] Adding web access control expression [permitAll] for Ant [pattern='/auth/**']
2025-05-12 09:22:43,287 DEBUG org.springframework.security.web.access.expression.ExpressionBasedFilterInvocationSecurityMetadataSource [main] Adding web access control expression [permitAll] for Ant [pattern='/api/test/**']
2025-05-12 09:22:43,287 DEBUG org.springframework.security.web.access.expression.ExpressionBasedFilterInvocationSecurityMetadataSource [main] Adding web access control expression [permitAll] for Ant [pattern='/api/products/**']
2025-05-12 09:22:43,287 DEBUG org.springframework.security.web.access.expression.ExpressionBasedFilterInvocationSecurityMetadataSource [main] Adding web access control expression [permitAll] for Ant [pattern='/products/top']
2025-05-12 09:22:43,287 DEBUG org.springframework.security.web.access.expression.ExpressionBasedFilterInvocationSecurityMetadataSource [main] Adding web access control expression [permitAll] for Ant [pattern='/products/recommended']
2025-05-12 09:22:43,287 DEBUG org.springframework.security.web.access.expression.ExpressionBasedFilterInvocationSecurityMetadataSource [main] Adding web access control expression [permitAll] for Ant [pattern='/api/categories/**']
2025-05-12 09:22:43,287 DEBUG org.springframework.security.web.access.expression.ExpressionBasedFilterInvocationSecurityMetadataSource [main] Adding web access control expression [hasRole('ROLE_SHIPPER')] for Ant [pattern='/api/shipper/**']
2025-05-12 09:22:43,287 DEBUG org.springframework.security.web.access.expression.ExpressionBasedFilterInvocationSecurityMetadataSource [main] Adding web access control expression [hasRole('ROLE_ADMIN')] for Ant [pattern='/api/admin/**']
2025-05-12 09:22:43,287 DEBUG org.springframework.security.web.access.expression.ExpressionBasedFilterInvocationSecurityMetadataSource [main] Adding web access control expression [authenticated] for any request
2025-05-12 09:22:43,294 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6da76bb1, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2ceb722e, org.springframework.security.web.context.SecurityContextPersistenceFilter@630a647c, org.springframework.security.web.header.HeaderWriterFilter@7d90d4c6, org.springframework.web.filter.CorsFilter@d012e18, org.springframework.security.web.authentication.logout.LogoutFilter@17eb5661, com.example.tmdt.security.jwt.AuthTokenFilter@2a045e85, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6f2f4b9e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2f5378cd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7b13ae73, org.springframework.security.web.session.SessionManagementFilter@4cb641a5, org.springframework.security.web.access.ExceptionTranslationFilter@e36a4c1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@65448932]
2025-05-12 09:22:43,460 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-12 09:22:43,694 INFO com.example.tmdt.config.WebMvcConfig [main] Added CurrentUserArgumentResolver to Spring MVC
2025-05-12 09:22:44,105 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2025-05-12 09:22:44,120 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8089"]
2025-05-12 09:22:44,123 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) 8089 (http) with context path ''
2025-05-12 09:22:44,126 INFO org.springframework.core.log.CompositeLog [main] Starting...
2025-05-12 09:22:44,126 INFO org.springframework.core.log.CompositeLog [main] BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@2333333c]]
2025-05-12 09:22:44,127 INFO org.springframework.core.log.CompositeLog [main] Started.
2025-05-12 09:22:44,132 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] More than one TaskScheduler bean exists within the context, and none is named 'taskScheduler'. Mark one of them as primary or name it 'taskScheduler' (possibly as an alias); or implement the SchedulingConfigurer interface and call ScheduledTaskRegistrar#setScheduler explicitly within the configureTasks() callback: [messageBrokerTaskScheduler, defaultSockJsTaskScheduler]
2025-05-12 09:22:44,146 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2025-05-12 09:22:44,147 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2025-05-12 09:22:44,147 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2025-05-12 09:22:44,147 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2025-05-12 09:22:44,147 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2025-05-12 09:22:44,147 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................"SELECT 1"
2025-05-12 09:22:44,147 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................10000
2025-05-12 09:22:44,148 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2025-05-12 09:22:44,148 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2025-05-12 09:22:44,148 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2025-05-12 09:22:44,148 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2025-05-12 09:22:44,148 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"com.mysql.cj.jdbc.Driver"
2025-05-12 09:22:44,148 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2025-05-12 09:22:44,148 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2025-05-12 09:22:44,148 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2025-05-12 09:22:44,148 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................300000
2025-05-12 09:22:44,148 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2025-05-12 09:22:44,148 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2025-05-12 09:22:44,148 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:mysql://192.168.146.1:3306/tmdt?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&connectTimeout=30000&socketTimeout=60000&autoReconnect=true
2025-05-12 09:22:44,148 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2025-05-12 09:22:44,149 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2025-05-12 09:22:44,149 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................600000
2025-05-12 09:22:44,149 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................5
2025-05-12 09:22:44,149 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2025-05-12 09:22:44,149 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2025-05-12 09:22:44,149 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................2
2025-05-12 09:22:44,149 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2025-05-12 09:22:44,149 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2025-05-12 09:22:44,149 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2025-05-12 09:22:44,149 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2025-05-12 09:22:44,149 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2025-05-12 09:22:44,149 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2025-05-12 09:22:44,149 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2025-05-12 09:22:44,149 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2025-05-12 09:22:44,149 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"webuser"
2025-05-12 09:22:44,149 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2025-05-12 09:22:44,149 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2025-05-12 09:22:48,160 DEBUG com.zaxxer.hikari.pool.PoolBase [main] HikariPool-1 - Failed to create/setup connection: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
2025-05-12 09:22:48,161 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Cannot acquire connection from data source
java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:111)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:98)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:90)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:64)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:74)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:895)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:820)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.internal.NonContextualJdbcConnectionAccess.obtainConnection(NonContextualJdbcConnectionAccess.java:38)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:108)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getPhysicalConnection(LogicalConnectionManagedImpl.java:138)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getConnectionForTransactionManagement(LogicalConnectionManagedImpl.java:276)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.begin(LogicalConnectionManagedImpl.java:284)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.begin(JdbcResourceLocalTransactionCoordinatorImpl.java:246)
	at org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:83)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.beginTransaction(HibernateJpaDialect.java:164)
	at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:421)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.startTransaction(AbstractPlatformTransactionManager.java:400)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:373)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:595)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:382)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.example.tmdt.service.CouponService$$EnhancerBySpringCGLIB$$b8ac78d1.onApplicationStartup(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:344)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:229)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:166)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:176)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:169)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:143)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:421)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:378)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:586)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.example.tmdt.TmdtApplication.main(TmdtApplication.java:14)
Caused by: com.mysql.cj.exceptions.CJException: Access denied for user 'webuser'@'MyPC' (using password: NO)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:150)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:128)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:849)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:771)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:739)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:156)
	at com.mysql.cj.protocol.a.NativeAuthenticationProvider.proceedHandshakeWithPluggableAuthentication(NativeAuthenticationProvider.java:468)
	at com.mysql.cj.protocol.a.NativeAuthenticationProvider.connect(NativeAuthenticationProvider.java:213)
	at com.mysql.cj.protocol.a.NativeProtocol.connect(NativeProtocol.java:1430)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:134)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:839)
	... 54 common frames omitted
2025-05-12 09:22:49,162 ERROR com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:111)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:98)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:90)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:64)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:74)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:895)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:820)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.internal.NonContextualJdbcConnectionAccess.obtainConnection(NonContextualJdbcConnectionAccess.java:38)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:108)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getPhysicalConnection(LogicalConnectionManagedImpl.java:138)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getConnectionForTransactionManagement(LogicalConnectionManagedImpl.java:276)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.begin(LogicalConnectionManagedImpl.java:284)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.begin(JdbcResourceLocalTransactionCoordinatorImpl.java:246)
	at org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:83)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.beginTransaction(HibernateJpaDialect.java:164)
	at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:421)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.startTransaction(AbstractPlatformTransactionManager.java:400)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:373)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:595)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:382)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.example.tmdt.service.CouponService$$EnhancerBySpringCGLIB$$b8ac78d1.onApplicationStartup(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:344)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:229)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:166)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:176)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:169)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:143)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:421)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:378)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:586)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.example.tmdt.TmdtApplication.main(TmdtApplication.java:14)
Caused by: com.mysql.cj.exceptions.CJException: Access denied for user 'webuser'@'MyPC' (using password: NO)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:150)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:128)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:849)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:771)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:739)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:156)
	at com.mysql.cj.protocol.a.NativeAuthenticationProvider.proceedHandshakeWithPluggableAuthentication(NativeAuthenticationProvider.java:468)
	at com.mysql.cj.protocol.a.NativeAuthenticationProvider.connect(NativeAuthenticationProvider.java:213)
	at com.mysql.cj.protocol.a.NativeProtocol.connect(NativeProtocol.java:1430)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:134)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:839)
	... 54 common frames omitted
2025-05-12 09:22:49,166 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [main] Could not create connection to database server. Attempted reconnect 3 times. Giving up.
2025-05-12 09:22:49,175 INFO org.apache.juli.logging.DirectJDKLog [main] Pausing ProtocolHandler ["http-nio-8080"]
2025-05-12 09:22:49,175 INFO org.apache.juli.logging.DirectJDKLog [main] Pausing ProtocolHandler ["http-nio-8089"]
2025-05-12 09:22:49,176 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2025-05-12 09:22:49,181 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping ProtocolHandler ["http-nio-8080"]
2025-05-12 09:22:49,183 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping ProtocolHandler ["http-nio-8089"]
2025-05-12 09:22:49,186 INFO org.apache.juli.logging.DirectJDKLog [main] Destroying ProtocolHandler ["http-nio-8080"]
2025-05-12 09:22:49,186 INFO org.apache.juli.logging.DirectJDKLog [main] Destroying ProtocolHandler ["http-nio-8089"]
2025-05-12 09:22:49,188 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [main] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-05-12 09:22:49,207 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.transaction.CannotCreateTransactionException: Could not open JPA EntityManager for transaction; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection
	at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:467)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.startTransaction(AbstractPlatformTransactionManager.java:400)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:373)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:595)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:382)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.example.tmdt.service.CouponService$$EnhancerBySpringCGLIB$$b8ac78d1.onApplicationStartup(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:344)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:229)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:166)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:176)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:169)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:143)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:421)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:378)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:586)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.example.tmdt.TmdtApplication.main(TmdtApplication.java:14)
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:48)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:37)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:111)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getPhysicalConnection(LogicalConnectionManagedImpl.java:138)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getConnectionForTransactionManagement(LogicalConnectionManagedImpl.java:276)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.begin(LogicalConnectionManagedImpl.java:284)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.begin(JdbcResourceLocalTransactionCoordinatorImpl.java:246)
	at org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:83)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.beginTransaction(HibernateJpaDialect.java:164)
	at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:421)
	... 33 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:111)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:98)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:90)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:64)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:74)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:895)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:820)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.internal.NonContextualJdbcConnectionAccess.obtainConnection(NonContextualJdbcConnectionAccess.java:38)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:108)
	... 40 common frames omitted
Caused by: com.mysql.cj.exceptions.CJException: Access denied for user 'webuser'@'MyPC' (using password: NO)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:150)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:128)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:849)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:771)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:739)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:156)
	at com.mysql.cj.protocol.a.NativeAuthenticationProvider.proceedHandshakeWithPluggableAuthentication(NativeAuthenticationProvider.java:468)
	at com.mysql.cj.protocol.a.NativeAuthenticationProvider.connect(NativeAuthenticationProvider.java:213)
	at com.mysql.cj.protocol.a.NativeProtocol.connect(NativeProtocol.java:1430)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:134)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:839)
	... 54 common frames omitted
2025-05-12 09:22:49,210 INFO org.springframework.core.log.CompositeLog [main] Stopping...
2025-05-12 09:22:49,210 INFO org.springframework.core.log.CompositeLog [main] BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@2333333c]]
2025-05-12 09:22:49,211 INFO org.springframework.core.log.CompositeLog [main] Stopped.
2025-05-12 09:22:49,216 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-12 09:24:24,932 INFO org.springframework.boot.StartupInfoLogger [main] Starting TmdtApplication using Java 17.0.15 on abc-VMware-Virtual-Platform with PID 7195 (/home/abc/Downloads/TMDT/backend/target/classes started by abc in /home/abc/Downloads/TMDT/backend)
2025-05-12 09:24:24,935 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2025-05-12 09:24:25,474 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-12 09:24:25,548 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 67 ms. Found 20 JPA repository interfaces.
2025-05-12 09:24:26,203 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http) 8089 (http)
2025-05-12 09:24:26,209 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2025-05-12 09:24:26,210 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8089"]
2025-05-12 09:24:26,219 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2025-05-12 09:24:26,219 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-05-12 09:24:26,292 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2025-05-12 09:24:26,293 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1319 ms
2025-05-12 09:24:26,423 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader TomcatEmbeddedWebappClassLoader
  context: ROOT
  delegate: true
----------> Parent Classloader:
jdk.internal.loader.ClassLoaders$AppClassLoader@30946e09

2025-05-12 09:24:26,492 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2025-05-12 09:24:26,494 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2025-05-12 09:24:26,494 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2025-05-12 09:24:26,495 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2025-05-12 09:24:26,495 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2025-05-12 09:24:26,495 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................"SELECT 1"
2025-05-12 09:24:26,495 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................10000
2025-05-12 09:24:26,495 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2025-05-12 09:24:26,495 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2025-05-12 09:24:26,496 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2025-05-12 09:24:26,496 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2025-05-12 09:24:26,496 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"com.mysql.cj.jdbc.Driver"
2025-05-12 09:24:26,496 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2025-05-12 09:24:26,497 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2025-05-12 09:24:26,497 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2025-05-12 09:24:26,497 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................300000
2025-05-12 09:24:26,497 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2025-05-12 09:24:26,497 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2025-05-12 09:24:26,497 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:mysql://192.168.146.1:3306/tmdt?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&connectTimeout=30000&socketTimeout=60000&autoReconnect=true
2025-05-12 09:24:26,498 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2025-05-12 09:24:26,498 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2025-05-12 09:24:26,498 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................600000
2025-05-12 09:24:26,498 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................5
2025-05-12 09:24:26,498 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2025-05-12 09:24:26,498 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2025-05-12 09:24:26,499 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................2
2025-05-12 09:24:26,499 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2025-05-12 09:24:26,499 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2025-05-12 09:24:26,499 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2025-05-12 09:24:26,499 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2025-05-12 09:24:26,499 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2025-05-12 09:24:26,500 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2025-05-12 09:24:26,500 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2025-05-12 09:24:26,500 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2025-05-12 09:24:26,500 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"webuser"
2025-05-12 09:24:26,501 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2025-05-12 09:24:26,501 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2025-05-12 09:24:30,664 DEBUG com.zaxxer.hikari.pool.PoolBase [main] HikariPool-1 - Failed to create/setup connection: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
2025-05-12 09:24:30,666 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Cannot acquire connection from data source
java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:111)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:98)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:90)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:64)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:74)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:895)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:820)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:160)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:118)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:332)
	at org.springframework.boot.jdbc.EmbeddedDatabaseConnection.isEmbedded(EmbeddedDatabaseConnection.java:164)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.isEmbeddedDatabase(DataSourceScriptDatabaseInitializer.java:70)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.isEnabled(AbstractScriptDatabaseInitializer.java:83)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:106)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:101)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:65)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:693)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:510)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:374)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:134)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:642)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:642)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:410)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4936)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1328)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1318)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:795)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1328)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1318)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:249)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:428)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:922)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:577)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.example.tmdt.TmdtApplication.main(TmdtApplication.java:14)
Caused by: com.mysql.cj.exceptions.CJException: Access denied for user 'webuser'@'MyPC' (using password: NO)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:150)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:128)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:849)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:771)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:739)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:156)
	at com.mysql.cj.protocol.a.NativeAuthenticationProvider.proceedHandshakeWithPluggableAuthentication(NativeAuthenticationProvider.java:468)
	at com.mysql.cj.protocol.a.NativeAuthenticationProvider.connect(NativeAuthenticationProvider.java:213)
	at com.mysql.cj.protocol.a.NativeProtocol.connect(NativeProtocol.java:1430)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:134)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:839)
	... 132 common frames omitted
2025-05-12 09:24:31,669 ERROR com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:111)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:98)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:90)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:64)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:74)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:895)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:820)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:160)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:118)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:332)
	at org.springframework.boot.jdbc.EmbeddedDatabaseConnection.isEmbedded(EmbeddedDatabaseConnection.java:164)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.isEmbeddedDatabase(DataSourceScriptDatabaseInitializer.java:70)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.isEnabled(AbstractScriptDatabaseInitializer.java:83)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:106)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:101)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:65)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:693)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:510)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:374)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:134)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:642)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:642)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:410)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4936)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1328)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1318)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:795)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1328)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1318)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:249)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:428)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:922)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:577)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.example.tmdt.TmdtApplication.main(TmdtApplication.java:14)
Caused by: com.mysql.cj.exceptions.CJException: Access denied for user 'webuser'@'MyPC' (using password: NO)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:150)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:128)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:849)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:771)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:739)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:156)
	at com.mysql.cj.protocol.a.NativeAuthenticationProvider.proceedHandshakeWithPluggableAuthentication(NativeAuthenticationProvider.java:468)
	at com.mysql.cj.protocol.a.NativeAuthenticationProvider.connect(NativeAuthenticationProvider.java:213)
	at com.mysql.cj.protocol.a.NativeProtocol.connect(NativeProtocol.java:1430)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:134)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:839)
	... 132 common frames omitted
2025-05-12 09:24:31,954 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2025-05-12 09:24:31,955 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2025-05-12 09:24:31,956 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2025-05-12 09:24:31,956 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2025-05-12 09:24:31,956 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2025-05-12 09:24:31,956 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................"SELECT 1"
2025-05-12 09:24:31,956 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................10000
2025-05-12 09:24:31,956 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2025-05-12 09:24:31,957 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2025-05-12 09:24:31,957 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2025-05-12 09:24:31,957 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2025-05-12 09:24:31,957 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"com.mysql.cj.jdbc.Driver"
2025-05-12 09:24:31,957 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2025-05-12 09:24:31,957 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2025-05-12 09:24:31,957 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2025-05-12 09:24:31,958 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................300000
2025-05-12 09:24:31,958 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2025-05-12 09:24:31,958 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2025-05-12 09:24:31,958 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:mysql://192.168.146.1:3306/tmdt?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&connectTimeout=30000&socketTimeout=60000&autoReconnect=true
2025-05-12 09:24:31,958 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2025-05-12 09:24:31,958 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2025-05-12 09:24:31,959 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................600000
2025-05-12 09:24:31,959 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................5
2025-05-12 09:24:31,959 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2025-05-12 09:24:31,959 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2025-05-12 09:24:31,959 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................2
2025-05-12 09:24:31,959 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2025-05-12 09:24:31,959 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2025-05-12 09:24:31,960 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2025-05-12 09:24:31,960 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2025-05-12 09:24:31,960 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2025-05-12 09:24:31,960 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2025-05-12 09:24:31,960 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2025-05-12 09:24:31,960 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2025-05-12 09:24:31,960 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"webuser"
2025-05-12 09:24:31,960 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2025-05-12 09:24:31,961 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2025-05-12 09:24:35,974 DEBUG com.zaxxer.hikari.pool.PoolBase [main] HikariPool-1 - Failed to create/setup connection: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
2025-05-12 09:24:35,976 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Cannot acquire connection from data source
java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:111)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:98)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:90)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:64)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:74)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:895)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:820)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:272)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:246)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:223)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:295)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:252)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:223)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:693)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:510)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:374)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:134)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:642)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:642)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:410)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4936)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1328)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1318)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:795)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1328)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1318)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:249)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:428)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:922)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:577)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.example.tmdt.TmdtApplication.main(TmdtApplication.java:14)
Caused by: com.mysql.cj.exceptions.CJException: Access denied for user 'webuser'@'MyPC' (using password: NO)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:150)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:128)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:849)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:771)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:739)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:156)
	at com.mysql.cj.protocol.a.NativeAuthenticationProvider.proceedHandshakeWithPluggableAuthentication(NativeAuthenticationProvider.java:468)
	at com.mysql.cj.protocol.a.NativeAuthenticationProvider.connect(NativeAuthenticationProvider.java:213)
	at com.mysql.cj.protocol.a.NativeProtocol.connect(NativeProtocol.java:1430)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:134)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:839)
	... 140 common frames omitted
2025-05-12 09:24:36,978 ERROR com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:111)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:98)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:90)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:64)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:74)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:895)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:820)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:272)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:246)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:223)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:295)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:252)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:223)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:693)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:510)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:374)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:134)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:642)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:642)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:410)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4936)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1328)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1318)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:795)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1328)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1318)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:249)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:428)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:922)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:577)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.example.tmdt.TmdtApplication.main(TmdtApplication.java:14)
Caused by: com.mysql.cj.exceptions.CJException: Access denied for user 'webuser'@'MyPC' (using password: NO)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:150)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:128)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:849)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:771)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:739)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:156)
	at com.mysql.cj.protocol.a.NativeAuthenticationProvider.proceedHandshakeWithPluggableAuthentication(NativeAuthenticationProvider.java:468)
	at com.mysql.cj.protocol.a.NativeAuthenticationProvider.connect(NativeAuthenticationProvider.java:213)
	at com.mysql.cj.protocol.a.NativeProtocol.connect(NativeProtocol.java:1430)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:134)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:839)
	... 140 common frames omitted
2025-05-12 09:24:37,668 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-12 09:24:38,085 DEBUG org.springframework.web.filter.GenericFilterBean [main] Filter 'authenticationJwtTokenFilter' configured for use
2025-05-12 09:24:38,853 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.tmdt.controller.AdminController
2025-05-12 09:24:38,866 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.AdminController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.AdminController.updateOrderStatus(java.lang.Long,com.example.tmdt.model.Order$OrderStatus)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:38,876 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.tmdt.controller.AdminController
2025-05-12 09:24:38,877 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.AdminController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.AdminController.getDashboardSummary()]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:38,877 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.tmdt.controller.AdminController
2025-05-12 09:24:38,877 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.AdminController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.AdminController.getAllUsers()]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:38,877 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.tmdt.controller.AdminController
2025-05-12 09:24:38,878 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.AdminController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.AdminController.getUserById(java.lang.Long)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:38,878 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.tmdt.controller.AdminController
2025-05-12 09:24:38,878 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.AdminController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.AdminController.deleteUser(java.lang.Long)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:38,879 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.tmdt.controller.AdminController
2025-05-12 09:24:38,879 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.AdminController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.AdminController.getAllOrders()]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:38,879 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.tmdt.controller.AdminController
2025-05-12 09:24:38,880 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.AdminController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.AdminController.getAllProducts()]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:38,880 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.tmdt.controller.AdminController
2025-05-12 09:24:38,880 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.AdminController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.AdminController.deleteProduct(java.lang.Long)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:38,880 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.tmdt.controller.AdminController
2025-05-12 09:24:38,880 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.AdminController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.AdminController.assignCouponToUser(java.lang.Long,java.util.Map)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:38,995 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.CategoryController.createCategory(com.example.tmdt.model.Category)
2025-05-12 09:24:38,996 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.CategoryController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.CategoryController.createCategory(com.example.tmdt.model.Category)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:38,997 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.CategoryController.updateCategory(java.lang.Long,com.example.tmdt.model.Category)
2025-05-12 09:24:38,997 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.CategoryController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.CategoryController.updateCategory(java.lang.Long,com.example.tmdt.model.Category)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:38,997 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.CategoryController.deleteCategory(java.lang.Long)
2025-05-12 09:24:38,997 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.CategoryController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.CategoryController.deleteCategory(java.lang.Long)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,005 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ChatController.getActiveChatSessions()
2025-05-12 09:24:39,005 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ChatController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ChatController.getActiveChatSessions()]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,006 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or #userId == authentication.principal.id") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ChatController.getUserChatHistory(java.lang.String)
2025-05-12 09:24:39,007 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ChatController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ChatController.getUserChatHistory(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN') or #userId == authentication.principal.id', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,008 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ChatController.endChatSession(java.lang.String)
2025-05-12 09:24:39,008 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ChatController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ChatController.endChatSession(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,008 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ChatController.getAllChatSessions()
2025-05-12 09:24:39,009 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ChatController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ChatController.getAllChatSessions()]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,014 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.assignCouponToUser(java.lang.Long,java.lang.Double,java.lang.Double,java.time.LocalDateTime,java.lang.String,java.lang.String)
2025-05-12 09:24:39,014 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.CouponController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.assignCouponToUser(java.lang.Long,java.lang.Double,java.lang.Double,java.time.LocalDateTime,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,015 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.getAllCoupons()
2025-05-12 09:24:39,016 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.CouponController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.getAllCoupons()]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,016 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.createCoupon(com.example.tmdt.payload.request.CouponCreateRequest)
2025-05-12 09:24:39,016 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.CouponController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.createCoupon(com.example.tmdt.payload.request.CouponCreateRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,016 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.verifyCoupon(com.example.tmdt.model.User,com.example.tmdt.payload.request.CouponVerifyRequest)
2025-05-12 09:24:39,016 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.CouponController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.verifyCoupon(com.example.tmdt.model.User,com.example.tmdt.payload.request.CouponVerifyRequest)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,016 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.updateCoupon(java.lang.Long,com.example.tmdt.payload.request.CouponCreateRequest)
2025-05-12 09:24:39,017 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.CouponController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.updateCoupon(java.lang.Long,com.example.tmdt.payload.request.CouponCreateRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,017 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.getAllValidCoupons()
2025-05-12 09:24:39,017 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.CouponController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.getAllValidCoupons()]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,017 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.getActiveCoupons()
2025-05-12 09:24:39,017 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.CouponController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.getActiveCoupons()]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,017 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.getMyCoupons(com.example.tmdt.model.User)
2025-05-12 09:24:39,018 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.CouponController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.getMyCoupons(com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,018 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.deleteCoupon(java.lang.Long)
2025-05-12 09:24:39,018 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.CouponController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.deleteCoupon(java.lang.Long)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,018 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.deactivateExpiredCoupons()
2025-05-12 09:24:39,018 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.CouponController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.deactivateExpiredCoupons()]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,027 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.FileController.deleteFile(java.lang.String)
2025-05-12 09:24:39,027 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.FileController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.FileController.deleteFile(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,028 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.FileController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String)
2025-05-12 09:24:39,028 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.FileController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.FileController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,029 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.FileController.uploadMultipleFiles(org.springframework.web.multipart.MultipartFile[],java.lang.String)
2025-05-12 09:24:39,029 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.FileController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.FileController.uploadMultipleFiles(org.springframework.web.multipart.MultipartFile[],java.lang.String)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,091 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User)
2025-05-12 09:24:39,092 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.NotificationController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,093 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getRecentNotifications(com.example.tmdt.model.User,int)
2025-05-12 09:24:39,093 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.NotificationController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getRecentNotifications(com.example.tmdt.model.User,int)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,093 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadNotifications(com.example.tmdt.model.User)
2025-05-12 09:24:39,094 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.NotificationController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadNotifications(com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,094 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User)
2025-05-12 09:24:39,094 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.NotificationController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,095 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.deleteAllNotifications(com.example.tmdt.model.User)
2025-05-12 09:24:39,095 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.NotificationController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.deleteAllNotifications(com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,095 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.createOrderSuccessNotification(java.util.Map,com.example.tmdt.model.User)
2025-05-12 09:24:39,096 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.NotificationController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.createOrderSuccessNotification(java.util.Map,com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,096 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.createOrderCancelledNotification(java.util.Map,com.example.tmdt.model.User)
2025-05-12 09:24:39,096 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.NotificationController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.createOrderCancelledNotification(java.util.Map,com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,097 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.createCouponReceivedNotification(java.util.Map)
2025-05-12 09:24:39,097 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.NotificationController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.createCouponReceivedNotification(java.util.Map)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,097 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.broadcastCouponNotification(java.util.Map)
2025-05-12 09:24:39,097 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.NotificationController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.broadcastCouponNotification(java.util.Map)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,097 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.markAllAsRead(com.example.tmdt.model.User)
2025-05-12 09:24:39,098 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.NotificationController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.markAllAsRead(com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,098 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.deleteNotification(com.example.tmdt.model.User,java.lang.Long)
2025-05-12 09:24:39,098 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.NotificationController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.deleteNotification(com.example.tmdt.model.User,java.lang.Long)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,098 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.createSystemNotification(java.lang.String,java.lang.String)
2025-05-12 09:24:39,099 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.NotificationController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.createSystemNotification(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,099 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.markAsRead(com.example.tmdt.model.User,java.lang.Long)
2025-05-12 09:24:39,099 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.NotificationController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.markAsRead(com.example.tmdt.model.User,java.lang.Long)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,169 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.refundOrder(java.lang.Long)
2025-05-12 09:24:39,169 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.OrderController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.refundOrder(java.lang.Long)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,170 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.updateOrderStatus(java.lang.Long,java.lang.String)
2025-05-12 09:24:39,171 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.OrderController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.updateOrderStatus(java.lang.Long,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,171 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getAllOrders()
2025-05-12 09:24:39,171 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.OrderController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getAllOrders()]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,171 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.createOrder(com.example.tmdt.payload.request.OrderRequest) throws java.io.UnsupportedEncodingException
2025-05-12 09:24:39,172 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.OrderController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.createOrder(com.example.tmdt.payload.request.OrderRequest) throws java.io.UnsupportedEncodingException]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,172 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getOrderById(java.lang.Long)
2025-05-12 09:24:39,172 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.OrderController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getOrderById(java.lang.Long)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,172 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.updatePaymentStatus(java.lang.Long,java.lang.String)
2025-05-12 09:24:39,172 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.OrderController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.updatePaymentStatus(java.lang.Long,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,173 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getOrdersByStatus(java.lang.String)
2025-05-12 09:24:39,173 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.OrderController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getOrdersByStatus(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,173 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getOrdersByDateRange(java.lang.String,java.lang.String)
2025-05-12 09:24:39,173 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.OrderController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getOrdersByDateRange(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,173 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getCurrentUserOrders()
2025-05-12 09:24:39,173 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.OrderController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getCurrentUserOrders()]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,174 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getOrderSummary()
2025-05-12 09:24:39,174 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.OrderController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getOrderSummary()]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,174 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.cancelOrder(java.lang.Long)
2025-05-12 09:24:39,174 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.OrderController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.cancelOrder(java.lang.Long)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,174 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.requestRefund(java.lang.Long,java.lang.String,java.lang.String,java.util.List)
2025-05-12 09:24:39,174 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.OrderController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.requestRefund(java.lang.Long,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasRole('USER')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,175 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getRefundStatus(java.lang.Long)
2025-05-12 09:24:39,175 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.OrderController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getRefundStatus(java.lang.Long)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,179 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.PaymentController.createPay(com.example.tmdt.payload.request.OrderRequest) throws java.io.UnsupportedEncodingException
2025-05-12 09:24:39,180 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.PaymentController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.PaymentController.createPay(com.example.tmdt.payload.request.OrderRequest) throws java.io.UnsupportedEncodingException]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,315 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ProductController.deleteProduct(java.lang.Long)
2025-05-12 09:24:39,316 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ProductController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ProductController.deleteProduct(java.lang.Long)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,317 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ProductController.createProduct(com.example.tmdt.model.Product)
2025-05-12 09:24:39,317 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ProductController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ProductController.createProduct(com.example.tmdt.model.Product)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,317 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ProductController.updateProduct(java.lang.Long,com.example.tmdt.model.Product)
2025-05-12 09:24:39,318 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ProductController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ProductController.updateProduct(java.lang.Long,com.example.tmdt.model.Product)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,318 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ProductController.addReview(java.lang.Long,com.example.tmdt.payload.request.ReviewRequest,boolean,boolean)
2025-05-12 09:24:39,318 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ProductController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ProductController.addReview(java.lang.Long,com.example.tmdt.payload.request.ReviewRequest,boolean,boolean)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,322 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.RefundController.getAllRefundRequests()
2025-05-12 09:24:39,322 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.RefundController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.RefundController.getAllRefundRequests()]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,322 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.RefundController.createRefundRequest(com.example.tmdt.payload.request.RefundRequestDto,java.util.List)
2025-05-12 09:24:39,323 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.RefundController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.RefundController.createRefundRequest(com.example.tmdt.payload.request.RefundRequestDto,java.util.List)]] with attributes [[authorize: 'hasRole('USER')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,323 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.RefundController.getRefundRequestByOrderId(java.lang.Long)
2025-05-12 09:24:39,323 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.RefundController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.RefundController.getRefundRequestByOrderId(java.lang.Long)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,323 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.RefundController.getRefundRequestsByStatus(java.lang.String)
2025-05-12 09:24:39,324 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.RefundController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.RefundController.getRefundRequestsByStatus(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,324 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.RefundController.updateRefundRequestStatus(java.lang.Long,java.lang.String,java.lang.String)
2025-05-12 09:24:39,324 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.RefundController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.RefundController.updateRefundRequestStatus(java.lang.Long,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,324 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.RefundController.getRefundRequestById(java.lang.Long)
2025-05-12 09:24:39,324 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.RefundController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.RefundController.getRefundRequestById(java.lang.Long)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,324 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.RefundController.getMyRefundRequests()
2025-05-12 09:24:39,325 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.RefundController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.RefundController.getMyRefundRequests()]] with attributes [[authorize: 'hasRole('USER')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,328 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ReviewController.createReview(java.lang.Long,com.example.tmdt.model.User,java.lang.String,java.lang.String,int)
2025-05-12 09:24:39,328 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ReviewController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ReviewController.createReview(java.lang.Long,com.example.tmdt.model.User,java.lang.String,java.lang.String,int)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,329 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ReviewController.getUserReviews(com.example.tmdt.model.User)
2025-05-12 09:24:39,329 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ReviewController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ReviewController.getUserReviews(com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,330 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ReviewController.updateReview(java.lang.Long,com.example.tmdt.model.User,java.lang.String,java.lang.String,int)
2025-05-12 09:24:39,330 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ReviewController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ReviewController.updateReview(java.lang.Long,com.example.tmdt.model.User,java.lang.String,java.lang.String,int)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,330 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ReviewController.deleteReview(java.lang.Long,com.example.tmdt.model.User)
2025-05-12 09:24:39,330 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ReviewController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ReviewController.deleteReview(java.lang.Long,com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,330 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ReviewController.markReviewHelpful(java.lang.Long,com.example.tmdt.model.User,boolean)
2025-05-12 09:24:39,331 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ReviewController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ReviewController.markReviewHelpful(java.lang.Long,com.example.tmdt.model.User,boolean)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,331 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ReviewController.checkUserReviewed(java.lang.Long,com.example.tmdt.model.User)
2025-05-12 09:24:39,331 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ReviewController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ReviewController.checkUserReviewed(java.lang.Long,com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,331 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ReviewController.createSimpleReview(java.lang.Long,com.example.tmdt.model.User,int,java.lang.String,boolean)
2025-05-12 09:24:39,331 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ReviewController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ReviewController.createSimpleReview(java.lang.Long,com.example.tmdt.model.User,int,java.lang.String,boolean)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,395 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'SHIPPER\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipmentController.updateOrderStatus(com.example.tmdt.model.User,java.lang.Long,com.example.tmdt.payload.request.StatusUpdateRequest)
2025-05-12 09:24:39,396 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ShipmentController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipmentController.updateOrderStatus(com.example.tmdt.model.User,java.lang.Long,com.example.tmdt.payload.request.StatusUpdateRequest)]] with attributes [[authorize: 'hasRole('SHIPPER')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,396 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'SHIPPER\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipmentController.getOrdersReadyForShipment()
2025-05-12 09:24:39,397 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ShipmentController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipmentController.getOrdersReadyForShipment()]] with attributes [[authorize: 'hasRole('SHIPPER')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,397 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'SHIPPER\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipmentController.getShipperOrders(com.example.tmdt.model.User)
2025-05-12 09:24:39,397 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ShipmentController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipmentController.getShipperOrders(com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('SHIPPER')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,397 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'SHIPPER\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipmentController.getShipperOrdersByStatus(com.example.tmdt.model.User,com.example.tmdt.model.Order$OrderStatus)
2025-05-12 09:24:39,397 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ShipmentController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipmentController.getShipperOrdersByStatus(com.example.tmdt.model.User,com.example.tmdt.model.Order$OrderStatus)]] with attributes [[authorize: 'hasRole('SHIPPER')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,398 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'SHIPPER\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipmentController.acceptOrder(com.example.tmdt.model.User,java.lang.Long)
2025-05-12 09:24:39,398 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ShipmentController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipmentController.acceptOrder(com.example.tmdt.model.User,java.lang.Long)]] with attributes [[authorize: 'hasRole('SHIPPER')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,398 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipmentController.updateShipmentStatus(java.lang.Long,com.example.tmdt.payload.request.StatusUpdateRequest)
2025-05-12 09:24:39,398 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ShipmentController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipmentController.updateShipmentStatus(java.lang.Long,com.example.tmdt.payload.request.StatusUpdateRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,407 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'SHIPPER\')") found on: com.example.tmdt.controller.ShipperController
2025-05-12 09:24:39,407 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ShipperController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipperController.updateOrderStatus(java.lang.Long,com.example.tmdt.payload.request.StatusUpdateRequest)]] with attributes [[authorize: 'hasRole('SHIPPER')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,408 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'SHIPPER\')") found on: com.example.tmdt.controller.ShipperController
2025-05-12 09:24:39,408 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ShipperController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipperController.getOrderTrackingHistory(java.lang.Long)]] with attributes [[authorize: 'hasRole('SHIPPER')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,408 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'SHIPPER\')") found on: com.example.tmdt.controller.ShipperController
2025-05-12 09:24:39,408 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ShipperController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipperController.getShipperOrders(int,int,java.lang.String)]] with attributes [[authorize: 'hasRole('SHIPPER')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,409 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'SHIPPER\')") found on: com.example.tmdt.controller.ShipperController
2025-05-12 09:24:39,409 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ShipperController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipperController.acceptOrder(java.lang.Long)]] with attributes [[authorize: 'hasRole('SHIPPER')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,409 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'SHIPPER\')") found on: com.example.tmdt.controller.ShipperController
2025-05-12 09:24:39,409 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ShipperController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipperController.getAvailableOrders(int,int)]] with attributes [[authorize: 'hasRole('SHIPPER')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,418 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserBalanceController.deposit(com.example.tmdt.model.User,com.example.tmdt.payload.request.DepositRequest)
2025-05-12 09:24:39,419 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.UserBalanceController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserBalanceController.deposit(com.example.tmdt.model.User,com.example.tmdt.payload.request.DepositRequest)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,419 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserBalanceController.withdraw(com.example.tmdt.model.User,java.util.Map)
2025-05-12 09:24:39,420 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.UserBalanceController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserBalanceController.withdraw(com.example.tmdt.model.User,java.util.Map)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,420 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserBalanceController.getTransactionHistory(com.example.tmdt.model.User,int,int)
2025-05-12 09:24:39,420 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.UserBalanceController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserBalanceController.getTransactionHistory(com.example.tmdt.model.User,int,int)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,420 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserBalanceController.getUserBalance(com.example.tmdt.model.User)
2025-05-12 09:24:39,420 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.UserBalanceController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserBalanceController.getUserBalance(com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,623 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserPointsController.getPointsHistory(com.example.tmdt.model.User)
2025-05-12 09:24:39,623 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.UserPointsController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserPointsController.getPointsHistory(com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,624 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserPointsController.getUserPoints(com.example.tmdt.model.User)
2025-05-12 09:24:39,624 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.UserPointsController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserPointsController.getUserPoints(com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,625 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserPointsController.getPointsSummary(com.example.tmdt.model.User)
2025-05-12 09:24:39,625 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.UserPointsController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserPointsController.getPointsSummary(com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,625 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserPointsController.redeemPoints(com.example.tmdt.model.User,int)
2025-05-12 09:24:39,625 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.UserPointsController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserPointsController.redeemPoints(com.example.tmdt.model.User,int)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,697 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.addToWishlist(com.example.tmdt.model.User,java.lang.Long)
2025-05-12 09:24:39,697 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.WishlistController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.addToWishlist(com.example.tmdt.model.User,java.lang.Long)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,698 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.removeFromWishlist(com.example.tmdt.model.User,java.lang.Long)
2025-05-12 09:24:39,698 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.WishlistController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.removeFromWishlist(com.example.tmdt.model.User,java.lang.Long)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,698 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.clearWishlist(com.example.tmdt.model.User)
2025-05-12 09:24:39,699 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.WishlistController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.clearWishlist(com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,699 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User)
2025-05-12 09:24:39,699 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.WishlistController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,699 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.checkInWishlist(com.example.tmdt.model.User,java.lang.Long)
2025-05-12 09:24:39,699 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.WishlistController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.checkInWishlist(com.example.tmdt.model.User,java.lang.Long)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:39,862 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@68ecc60e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@24bc52ce, org.springframework.security.web.context.SecurityContextPersistenceFilter@31af3f22, org.springframework.security.web.header.HeaderWriterFilter@698e2cba, org.springframework.web.filter.CorsFilter@267f9765, org.springframework.security.web.authentication.logout.LogoutFilter@731a5a39, com.example.tmdt.security.jwt.AuthTokenFilter@349686e8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@11759e4a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@354a1239, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@40949bb0, org.springframework.security.web.session.SessionManagementFilter@75b5d09, org.springframework.security.web.access.ExceptionTranslationFilter@74ee07e, org.springframework.security.web.access.intercept.AuthorizationFilter@5ec75178]
2025-05-12 09:24:39,999 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-12 09:24:40,185 INFO com.example.tmdt.config.WebMvcConfig [main] Added CurrentUserArgumentResolver to Spring MVC
2025-05-12 09:24:40,521 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2025-05-12 09:24:40,531 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8089"]
2025-05-12 09:24:40,535 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) 8089 (http) with context path ''
2025-05-12 09:24:40,536 INFO org.springframework.core.log.CompositeLog [main] Starting...
2025-05-12 09:24:40,537 INFO org.springframework.core.log.CompositeLog [main] BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@2f4a89fa]]
2025-05-12 09:24:40,537 INFO org.springframework.core.log.CompositeLog [main] Started.
2025-05-12 09:24:40,543 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] More than one TaskScheduler bean exists within the context, and none is named 'taskScheduler'. Mark one of them as primary or name it 'taskScheduler' (possibly as an alias); or implement the SchedulingConfigurer interface and call ScheduledTaskRegistrar#setScheduler explicitly within the configureTasks() callback: [messageBrokerTaskScheduler, defaultSockJsTaskScheduler]
2025-05-12 09:24:40,551 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2025-05-12 09:24:40,552 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2025-05-12 09:24:40,552 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2025-05-12 09:24:40,552 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2025-05-12 09:24:40,552 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2025-05-12 09:24:40,552 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................"SELECT 1"
2025-05-12 09:24:40,552 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................10000
2025-05-12 09:24:40,552 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2025-05-12 09:24:40,552 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2025-05-12 09:24:40,553 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2025-05-12 09:24:40,553 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2025-05-12 09:24:40,553 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"com.mysql.cj.jdbc.Driver"
2025-05-12 09:24:40,553 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2025-05-12 09:24:40,553 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2025-05-12 09:24:40,553 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2025-05-12 09:24:40,553 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................300000
2025-05-12 09:24:40,553 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2025-05-12 09:24:40,553 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2025-05-12 09:24:40,553 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:mysql://192.168.146.1:3306/tmdt?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&connectTimeout=30000&socketTimeout=60000&autoReconnect=true
2025-05-12 09:24:40,553 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2025-05-12 09:24:40,553 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2025-05-12 09:24:40,553 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................600000
2025-05-12 09:24:40,554 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................5
2025-05-12 09:24:40,554 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2025-05-12 09:24:40,554 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2025-05-12 09:24:40,554 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................2
2025-05-12 09:24:40,554 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2025-05-12 09:24:40,554 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2025-05-12 09:24:40,554 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2025-05-12 09:24:40,554 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2025-05-12 09:24:40,554 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2025-05-12 09:24:40,554 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2025-05-12 09:24:40,554 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2025-05-12 09:24:40,554 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2025-05-12 09:24:40,554 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"webuser"
2025-05-12 09:24:40,554 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2025-05-12 09:24:40,554 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2025-05-12 09:24:44,562 DEBUG com.zaxxer.hikari.pool.PoolBase [main] HikariPool-1 - Failed to create/setup connection: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
2025-05-12 09:24:44,563 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Cannot acquire connection from data source
java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:111)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:98)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:90)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:64)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:74)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:895)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:820)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.internal.NonContextualJdbcConnectionAccess.obtainConnection(NonContextualJdbcConnectionAccess.java:38)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:108)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getPhysicalConnection(LogicalConnectionManagedImpl.java:138)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getConnectionForTransactionManagement(LogicalConnectionManagedImpl.java:276)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.begin(LogicalConnectionManagedImpl.java:284)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.begin(JdbcResourceLocalTransactionCoordinatorImpl.java:246)
	at org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:83)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.beginTransaction(HibernateJpaDialect.java:164)
	at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:421)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.startTransaction(AbstractPlatformTransactionManager.java:400)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:373)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:595)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:382)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.example.tmdt.service.CouponService$$EnhancerBySpringCGLIB$$aed29be0.onApplicationStartup(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:344)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:229)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:166)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:176)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:169)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:143)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:421)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:378)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:586)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.example.tmdt.TmdtApplication.main(TmdtApplication.java:14)
Caused by: com.mysql.cj.exceptions.CJException: Access denied for user 'webuser'@'MyPC' (using password: NO)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:150)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:128)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:849)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:771)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:739)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:156)
	at com.mysql.cj.protocol.a.NativeAuthenticationProvider.proceedHandshakeWithPluggableAuthentication(NativeAuthenticationProvider.java:468)
	at com.mysql.cj.protocol.a.NativeAuthenticationProvider.connect(NativeAuthenticationProvider.java:213)
	at com.mysql.cj.protocol.a.NativeProtocol.connect(NativeProtocol.java:1430)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:134)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:839)
	... 54 common frames omitted
2025-05-12 09:24:45,563 ERROR com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:111)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:98)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:90)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:64)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:74)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:895)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:820)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.internal.NonContextualJdbcConnectionAccess.obtainConnection(NonContextualJdbcConnectionAccess.java:38)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:108)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getPhysicalConnection(LogicalConnectionManagedImpl.java:138)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getConnectionForTransactionManagement(LogicalConnectionManagedImpl.java:276)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.begin(LogicalConnectionManagedImpl.java:284)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.begin(JdbcResourceLocalTransactionCoordinatorImpl.java:246)
	at org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:83)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.beginTransaction(HibernateJpaDialect.java:164)
	at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:421)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.startTransaction(AbstractPlatformTransactionManager.java:400)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:373)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:595)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:382)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.example.tmdt.service.CouponService$$EnhancerBySpringCGLIB$$aed29be0.onApplicationStartup(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:344)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:229)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:166)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:176)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:169)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:143)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:421)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:378)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:586)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.example.tmdt.TmdtApplication.main(TmdtApplication.java:14)
Caused by: com.mysql.cj.exceptions.CJException: Access denied for user 'webuser'@'MyPC' (using password: NO)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:150)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:128)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:849)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:771)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:739)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:156)
	at com.mysql.cj.protocol.a.NativeAuthenticationProvider.proceedHandshakeWithPluggableAuthentication(NativeAuthenticationProvider.java:468)
	at com.mysql.cj.protocol.a.NativeAuthenticationProvider.connect(NativeAuthenticationProvider.java:213)
	at com.mysql.cj.protocol.a.NativeProtocol.connect(NativeProtocol.java:1430)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:134)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:839)
	... 54 common frames omitted
2025-05-12 09:24:45,566 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [main] Could not create connection to database server. Attempted reconnect 3 times. Giving up.
2025-05-12 09:24:45,572 INFO org.apache.juli.logging.DirectJDKLog [main] Pausing ProtocolHandler ["http-nio-8080"]
2025-05-12 09:24:45,572 INFO org.apache.juli.logging.DirectJDKLog [main] Pausing ProtocolHandler ["http-nio-8089"]
2025-05-12 09:24:45,573 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2025-05-12 09:24:45,577 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping ProtocolHandler ["http-nio-8080"]
2025-05-12 09:24:45,578 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping ProtocolHandler ["http-nio-8089"]
2025-05-12 09:24:45,581 INFO org.apache.juli.logging.DirectJDKLog [main] Destroying ProtocolHandler ["http-nio-8080"]
2025-05-12 09:24:45,582 INFO org.apache.juli.logging.DirectJDKLog [main] Destroying ProtocolHandler ["http-nio-8089"]
2025-05-12 09:24:45,585 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [main] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-05-12 09:24:45,600 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.transaction.CannotCreateTransactionException: Could not open JPA EntityManager for transaction; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection
	at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:467)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.startTransaction(AbstractPlatformTransactionManager.java:400)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:373)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:595)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:382)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.example.tmdt.service.CouponService$$EnhancerBySpringCGLIB$$aed29be0.onApplicationStartup(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:344)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:229)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:166)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:176)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:169)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:143)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:421)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:378)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:586)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.example.tmdt.TmdtApplication.main(TmdtApplication.java:14)
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:48)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:37)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:111)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getPhysicalConnection(LogicalConnectionManagedImpl.java:138)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getConnectionForTransactionManagement(LogicalConnectionManagedImpl.java:276)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.begin(LogicalConnectionManagedImpl.java:284)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.begin(JdbcResourceLocalTransactionCoordinatorImpl.java:246)
	at org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:83)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.beginTransaction(HibernateJpaDialect.java:164)
	at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:421)
	... 33 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:111)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:98)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:90)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:64)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:74)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:895)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:820)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.internal.NonContextualJdbcConnectionAccess.obtainConnection(NonContextualJdbcConnectionAccess.java:38)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:108)
	... 40 common frames omitted
Caused by: com.mysql.cj.exceptions.CJException: Access denied for user 'webuser'@'MyPC' (using password: NO)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:150)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:128)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:849)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:771)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:739)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:156)
	at com.mysql.cj.protocol.a.NativeAuthenticationProvider.proceedHandshakeWithPluggableAuthentication(NativeAuthenticationProvider.java:468)
	at com.mysql.cj.protocol.a.NativeAuthenticationProvider.connect(NativeAuthenticationProvider.java:213)
	at com.mysql.cj.protocol.a.NativeProtocol.connect(NativeProtocol.java:1430)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:134)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:839)
	... 54 common frames omitted
2025-05-12 09:24:45,605 INFO org.springframework.core.log.CompositeLog [main] Stopping...
2025-05-12 09:24:45,605 INFO org.springframework.core.log.CompositeLog [main] BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@2f4a89fa]]
2025-05-12 09:24:45,606 INFO org.springframework.core.log.CompositeLog [main] Stopped.
2025-05-12 09:24:45,612 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-12 09:24:55,635 INFO org.springframework.boot.StartupInfoLogger [main] Starting TmdtApplication using Java 17.0.15 on abc-VMware-Virtual-Platform with PID 7428 (/home/abc/Downloads/TMDT/backend/target/classes started by abc in /home/abc/Downloads/TMDT/backend)
2025-05-12 09:24:55,638 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2025-05-12 09:24:56,082 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-12 09:24:56,149 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 62 ms. Found 20 JPA repository interfaces.
2025-05-12 09:24:56,720 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http) 8089 (http)
2025-05-12 09:24:56,724 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2025-05-12 09:24:56,725 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8089"]
2025-05-12 09:24:56,730 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2025-05-12 09:24:56,730 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-05-12 09:24:56,794 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2025-05-12 09:24:56,795 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1125 ms
2025-05-12 09:24:56,923 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader TomcatEmbeddedWebappClassLoader
  context: ROOT
  delegate: true
----------> Parent Classloader:
jdk.internal.loader.ClassLoaders$AppClassLoader@30946e09

2025-05-12 09:24:56,964 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2025-05-12 09:24:56,966 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2025-05-12 09:24:56,966 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2025-05-12 09:24:56,966 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2025-05-12 09:24:56,966 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2025-05-12 09:24:56,967 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................"SELECT 1"
2025-05-12 09:24:56,967 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................10000
2025-05-12 09:24:56,967 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2025-05-12 09:24:56,967 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2025-05-12 09:24:56,967 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2025-05-12 09:24:56,968 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2025-05-12 09:24:56,968 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"com.mysql.cj.jdbc.Driver"
2025-05-12 09:24:56,968 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2025-05-12 09:24:56,968 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2025-05-12 09:24:56,968 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2025-05-12 09:24:56,969 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................300000
2025-05-12 09:24:56,969 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2025-05-12 09:24:56,969 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2025-05-12 09:24:56,969 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:mysql://192.168.146.1:3306/tmdt?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&connectTimeout=30000&socketTimeout=60000&autoReconnect=true
2025-05-12 09:24:56,970 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2025-05-12 09:24:56,970 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2025-05-12 09:24:56,970 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................600000
2025-05-12 09:24:56,970 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................5
2025-05-12 09:24:56,971 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2025-05-12 09:24:56,971 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2025-05-12 09:24:56,971 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................2
2025-05-12 09:24:56,971 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2025-05-12 09:24:56,971 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2025-05-12 09:24:56,971 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2025-05-12 09:24:56,971 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2025-05-12 09:24:56,972 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2025-05-12 09:24:56,972 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2025-05-12 09:24:56,972 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2025-05-12 09:24:56,972 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2025-05-12 09:24:56,973 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"webuser"
2025-05-12 09:24:56,973 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2025-05-12 09:24:56,973 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2025-05-12 09:24:57,145 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2616b618
2025-05-12 09:24:57,146 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2025-05-12 09:24:57,246 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Before cleanup stats (total=1, active=0, idle=1, waiting=0)
2025-05-12 09:24:57,247 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - After cleanup  stats (total=1, active=0, idle=1, waiting=0)
2025-05-12 09:24:57,256 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@14c05805
2025-05-12 09:24:57,256 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=2, active=0, idle=2, waiting=0)
2025-05-12 09:24:57,999 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-12 09:24:58,460 DEBUG org.springframework.web.filter.GenericFilterBean [main] Filter 'authenticationJwtTokenFilter' configured for use
2025-05-12 09:24:59,139 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.tmdt.controller.AdminController
2025-05-12 09:24:59,155 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.AdminController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.AdminController.updateOrderStatus(java.lang.Long,com.example.tmdt.model.Order$OrderStatus)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,167 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.tmdt.controller.AdminController
2025-05-12 09:24:59,168 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.AdminController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.AdminController.getDashboardSummary()]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,168 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.tmdt.controller.AdminController
2025-05-12 09:24:59,168 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.AdminController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.AdminController.getAllUsers()]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,168 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.tmdt.controller.AdminController
2025-05-12 09:24:59,169 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.AdminController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.AdminController.getUserById(java.lang.Long)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,169 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.tmdt.controller.AdminController
2025-05-12 09:24:59,169 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.AdminController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.AdminController.deleteUser(java.lang.Long)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,169 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.tmdt.controller.AdminController
2025-05-12 09:24:59,169 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.AdminController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.AdminController.getAllOrders()]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,170 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.tmdt.controller.AdminController
2025-05-12 09:24:59,170 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.AdminController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.AdminController.getAllProducts()]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,170 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.tmdt.controller.AdminController
2025-05-12 09:24:59,170 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.AdminController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.AdminController.deleteProduct(java.lang.Long)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,170 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.tmdt.controller.AdminController
2025-05-12 09:24:59,171 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.AdminController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.AdminController.assignCouponToUser(java.lang.Long,java.util.Map)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,272 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.CategoryController.createCategory(com.example.tmdt.model.Category)
2025-05-12 09:24:59,273 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.CategoryController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.CategoryController.createCategory(com.example.tmdt.model.Category)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,274 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.CategoryController.updateCategory(java.lang.Long,com.example.tmdt.model.Category)
2025-05-12 09:24:59,274 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.CategoryController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.CategoryController.updateCategory(java.lang.Long,com.example.tmdt.model.Category)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,274 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.CategoryController.deleteCategory(java.lang.Long)
2025-05-12 09:24:59,274 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.CategoryController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.CategoryController.deleteCategory(java.lang.Long)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,282 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ChatController.getActiveChatSessions()
2025-05-12 09:24:59,282 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ChatController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ChatController.getActiveChatSessions()]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,283 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or #userId == authentication.principal.id") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ChatController.getUserChatHistory(java.lang.String)
2025-05-12 09:24:59,284 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ChatController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ChatController.getUserChatHistory(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN') or #userId == authentication.principal.id', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,285 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ChatController.endChatSession(java.lang.String)
2025-05-12 09:24:59,285 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ChatController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ChatController.endChatSession(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,286 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ChatController.getAllChatSessions()
2025-05-12 09:24:59,286 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ChatController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ChatController.getAllChatSessions()]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,291 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.assignCouponToUser(java.lang.Long,java.lang.Double,java.lang.Double,java.time.LocalDateTime,java.lang.String,java.lang.String)
2025-05-12 09:24:59,292 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.CouponController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.assignCouponToUser(java.lang.Long,java.lang.Double,java.lang.Double,java.time.LocalDateTime,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,293 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.getAllCoupons()
2025-05-12 09:24:59,294 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.CouponController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.getAllCoupons()]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,294 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.createCoupon(com.example.tmdt.payload.request.CouponCreateRequest)
2025-05-12 09:24:59,294 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.CouponController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.createCoupon(com.example.tmdt.payload.request.CouponCreateRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,294 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.verifyCoupon(com.example.tmdt.model.User,com.example.tmdt.payload.request.CouponVerifyRequest)
2025-05-12 09:24:59,295 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.CouponController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.verifyCoupon(com.example.tmdt.model.User,com.example.tmdt.payload.request.CouponVerifyRequest)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,295 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.updateCoupon(java.lang.Long,com.example.tmdt.payload.request.CouponCreateRequest)
2025-05-12 09:24:59,295 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.CouponController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.updateCoupon(java.lang.Long,com.example.tmdt.payload.request.CouponCreateRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,295 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.getAllValidCoupons()
2025-05-12 09:24:59,295 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.CouponController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.getAllValidCoupons()]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,296 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.getActiveCoupons()
2025-05-12 09:24:59,296 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.CouponController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.getActiveCoupons()]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,296 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.getMyCoupons(com.example.tmdt.model.User)
2025-05-12 09:24:59,296 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.CouponController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.getMyCoupons(com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,296 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.deleteCoupon(java.lang.Long)
2025-05-12 09:24:59,296 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.CouponController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.deleteCoupon(java.lang.Long)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,297 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.deactivateExpiredCoupons()
2025-05-12 09:24:59,297 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.CouponController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.CouponController.deactivateExpiredCoupons()]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,312 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.FileController.deleteFile(java.lang.String)
2025-05-12 09:24:59,312 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.FileController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.FileController.deleteFile(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,313 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.FileController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String)
2025-05-12 09:24:59,314 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.FileController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.FileController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,314 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.FileController.uploadMultipleFiles(org.springframework.web.multipart.MultipartFile[],java.lang.String)
2025-05-12 09:24:59,314 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.FileController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.FileController.uploadMultipleFiles(org.springframework.web.multipart.MultipartFile[],java.lang.String)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,384 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User)
2025-05-12 09:24:59,384 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.NotificationController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,385 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getRecentNotifications(com.example.tmdt.model.User,int)
2025-05-12 09:24:59,385 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.NotificationController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getRecentNotifications(com.example.tmdt.model.User,int)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,386 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadNotifications(com.example.tmdt.model.User)
2025-05-12 09:24:59,386 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.NotificationController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadNotifications(com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,386 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User)
2025-05-12 09:24:59,386 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.NotificationController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,386 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.deleteAllNotifications(com.example.tmdt.model.User)
2025-05-12 09:24:59,387 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.NotificationController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.deleteAllNotifications(com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,387 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.createOrderSuccessNotification(java.util.Map,com.example.tmdt.model.User)
2025-05-12 09:24:59,387 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.NotificationController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.createOrderSuccessNotification(java.util.Map,com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,388 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.createOrderCancelledNotification(java.util.Map,com.example.tmdt.model.User)
2025-05-12 09:24:59,388 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.NotificationController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.createOrderCancelledNotification(java.util.Map,com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,388 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.createCouponReceivedNotification(java.util.Map)
2025-05-12 09:24:59,389 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.NotificationController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.createCouponReceivedNotification(java.util.Map)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,389 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.broadcastCouponNotification(java.util.Map)
2025-05-12 09:24:59,389 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.NotificationController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.broadcastCouponNotification(java.util.Map)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,389 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.deleteNotification(com.example.tmdt.model.User,java.lang.Long)
2025-05-12 09:24:59,389 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.NotificationController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.deleteNotification(com.example.tmdt.model.User,java.lang.Long)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,389 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.createSystemNotification(java.lang.String,java.lang.String)
2025-05-12 09:24:59,390 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.NotificationController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.createSystemNotification(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,390 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.markAsRead(com.example.tmdt.model.User,java.lang.Long)
2025-05-12 09:24:59,390 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.NotificationController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.markAsRead(com.example.tmdt.model.User,java.lang.Long)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,390 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.markAllAsRead(com.example.tmdt.model.User)
2025-05-12 09:24:59,390 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.NotificationController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.markAllAsRead(com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,456 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.refundOrder(java.lang.Long)
2025-05-12 09:24:59,456 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.OrderController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.refundOrder(java.lang.Long)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,457 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.updateOrderStatus(java.lang.Long,java.lang.String)
2025-05-12 09:24:59,457 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.OrderController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.updateOrderStatus(java.lang.Long,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,457 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getAllOrders()
2025-05-12 09:24:59,457 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.OrderController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getAllOrders()]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,458 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.createOrder(com.example.tmdt.payload.request.OrderRequest) throws java.io.UnsupportedEncodingException
2025-05-12 09:24:59,458 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.OrderController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.createOrder(com.example.tmdt.payload.request.OrderRequest) throws java.io.UnsupportedEncodingException]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,458 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getOrderById(java.lang.Long)
2025-05-12 09:24:59,458 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.OrderController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getOrderById(java.lang.Long)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,458 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.updatePaymentStatus(java.lang.Long,java.lang.String)
2025-05-12 09:24:59,459 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.OrderController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.updatePaymentStatus(java.lang.Long,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,459 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getOrdersByStatus(java.lang.String)
2025-05-12 09:24:59,459 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.OrderController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getOrdersByStatus(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,459 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getOrdersByDateRange(java.lang.String,java.lang.String)
2025-05-12 09:24:59,459 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.OrderController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getOrdersByDateRange(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,459 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getCurrentUserOrders()
2025-05-12 09:24:59,459 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.OrderController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getCurrentUserOrders()]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,460 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getOrderSummary()
2025-05-12 09:24:59,460 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.OrderController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getOrderSummary()]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,460 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.cancelOrder(java.lang.Long)
2025-05-12 09:24:59,460 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.OrderController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.cancelOrder(java.lang.Long)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,460 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.requestRefund(java.lang.Long,java.lang.String,java.lang.String,java.util.List)
2025-05-12 09:24:59,460 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.OrderController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.requestRefund(java.lang.Long,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasRole('USER')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,461 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getRefundStatus(java.lang.Long)
2025-05-12 09:24:59,461 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.OrderController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getRefundStatus(java.lang.Long)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,464 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.PaymentController.createPay(com.example.tmdt.payload.request.OrderRequest) throws java.io.UnsupportedEncodingException
2025-05-12 09:24:59,464 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.PaymentController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.PaymentController.createPay(com.example.tmdt.payload.request.OrderRequest) throws java.io.UnsupportedEncodingException]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,591 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ProductController.deleteProduct(java.lang.Long)
2025-05-12 09:24:59,592 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ProductController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ProductController.deleteProduct(java.lang.Long)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,593 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ProductController.createProduct(com.example.tmdt.model.Product)
2025-05-12 09:24:59,594 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ProductController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ProductController.createProduct(com.example.tmdt.model.Product)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,594 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ProductController.updateProduct(java.lang.Long,com.example.tmdt.model.Product)
2025-05-12 09:24:59,594 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ProductController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ProductController.updateProduct(java.lang.Long,com.example.tmdt.model.Product)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,594 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ProductController.addReview(java.lang.Long,com.example.tmdt.payload.request.ReviewRequest,boolean,boolean)
2025-05-12 09:24:59,594 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ProductController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ProductController.addReview(java.lang.Long,com.example.tmdt.payload.request.ReviewRequest,boolean,boolean)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,598 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.RefundController.getAllRefundRequests()
2025-05-12 09:24:59,599 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.RefundController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.RefundController.getAllRefundRequests()]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,599 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.RefundController.createRefundRequest(com.example.tmdt.payload.request.RefundRequestDto,java.util.List)
2025-05-12 09:24:59,600 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.RefundController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.RefundController.createRefundRequest(com.example.tmdt.payload.request.RefundRequestDto,java.util.List)]] with attributes [[authorize: 'hasRole('USER')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,600 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.RefundController.getRefundRequestByOrderId(java.lang.Long)
2025-05-12 09:24:59,600 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.RefundController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.RefundController.getRefundRequestByOrderId(java.lang.Long)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,600 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.RefundController.getRefundRequestsByStatus(java.lang.String)
2025-05-12 09:24:59,601 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.RefundController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.RefundController.getRefundRequestsByStatus(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,601 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.RefundController.updateRefundRequestStatus(java.lang.Long,java.lang.String,java.lang.String)
2025-05-12 09:24:59,601 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.RefundController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.RefundController.updateRefundRequestStatus(java.lang.Long,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,601 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.RefundController.getRefundRequestById(java.lang.Long)
2025-05-12 09:24:59,601 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.RefundController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.RefundController.getRefundRequestById(java.lang.Long)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,602 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.RefundController.getMyRefundRequests()
2025-05-12 09:24:59,602 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.RefundController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.RefundController.getMyRefundRequests()]] with attributes [[authorize: 'hasRole('USER')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,606 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ReviewController.createReview(java.lang.Long,com.example.tmdt.model.User,java.lang.String,java.lang.String,int)
2025-05-12 09:24:59,607 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ReviewController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ReviewController.createReview(java.lang.Long,com.example.tmdt.model.User,java.lang.String,java.lang.String,int)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,609 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ReviewController.getUserReviews(com.example.tmdt.model.User)
2025-05-12 09:24:59,609 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ReviewController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ReviewController.getUserReviews(com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,610 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ReviewController.updateReview(java.lang.Long,com.example.tmdt.model.User,java.lang.String,java.lang.String,int)
2025-05-12 09:24:59,610 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ReviewController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ReviewController.updateReview(java.lang.Long,com.example.tmdt.model.User,java.lang.String,java.lang.String,int)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,611 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ReviewController.deleteReview(java.lang.Long,com.example.tmdt.model.User)
2025-05-12 09:24:59,611 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ReviewController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ReviewController.deleteReview(java.lang.Long,com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,611 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ReviewController.markReviewHelpful(java.lang.Long,com.example.tmdt.model.User,boolean)
2025-05-12 09:24:59,612 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ReviewController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ReviewController.markReviewHelpful(java.lang.Long,com.example.tmdt.model.User,boolean)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,612 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ReviewController.checkUserReviewed(java.lang.Long,com.example.tmdt.model.User)
2025-05-12 09:24:59,613 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ReviewController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ReviewController.checkUserReviewed(java.lang.Long,com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,613 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ReviewController.createSimpleReview(java.lang.Long,com.example.tmdt.model.User,int,java.lang.String,boolean)
2025-05-12 09:24:59,614 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ReviewController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ReviewController.createSimpleReview(java.lang.Long,com.example.tmdt.model.User,int,java.lang.String,boolean)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,687 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'SHIPPER\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipmentController.updateOrderStatus(com.example.tmdt.model.User,java.lang.Long,com.example.tmdt.payload.request.StatusUpdateRequest)
2025-05-12 09:24:59,687 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ShipmentController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipmentController.updateOrderStatus(com.example.tmdt.model.User,java.lang.Long,com.example.tmdt.payload.request.StatusUpdateRequest)]] with attributes [[authorize: 'hasRole('SHIPPER')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,688 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'SHIPPER\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipmentController.getOrdersReadyForShipment()
2025-05-12 09:24:59,688 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ShipmentController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipmentController.getOrdersReadyForShipment()]] with attributes [[authorize: 'hasRole('SHIPPER')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,688 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'SHIPPER\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipmentController.getShipperOrders(com.example.tmdt.model.User)
2025-05-12 09:24:59,688 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ShipmentController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipmentController.getShipperOrders(com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('SHIPPER')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,688 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'SHIPPER\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipmentController.getShipperOrdersByStatus(com.example.tmdt.model.User,com.example.tmdt.model.Order$OrderStatus)
2025-05-12 09:24:59,689 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ShipmentController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipmentController.getShipperOrdersByStatus(com.example.tmdt.model.User,com.example.tmdt.model.Order$OrderStatus)]] with attributes [[authorize: 'hasRole('SHIPPER')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,689 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'SHIPPER\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipmentController.acceptOrder(com.example.tmdt.model.User,java.lang.Long)
2025-05-12 09:24:59,689 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ShipmentController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipmentController.acceptOrder(com.example.tmdt.model.User,java.lang.Long)]] with attributes [[authorize: 'hasRole('SHIPPER')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,689 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipmentController.updateShipmentStatus(java.lang.Long,com.example.tmdt.payload.request.StatusUpdateRequest)
2025-05-12 09:24:59,689 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ShipmentController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipmentController.updateShipmentStatus(java.lang.Long,com.example.tmdt.payload.request.StatusUpdateRequest)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,698 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'SHIPPER\')") found on: com.example.tmdt.controller.ShipperController
2025-05-12 09:24:59,698 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ShipperController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipperController.updateOrderStatus(java.lang.Long,com.example.tmdt.payload.request.StatusUpdateRequest)]] with attributes [[authorize: 'hasRole('SHIPPER')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,699 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'SHIPPER\')") found on: com.example.tmdt.controller.ShipperController
2025-05-12 09:24:59,699 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ShipperController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipperController.getOrderTrackingHistory(java.lang.Long)]] with attributes [[authorize: 'hasRole('SHIPPER')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,699 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'SHIPPER\')") found on: com.example.tmdt.controller.ShipperController
2025-05-12 09:24:59,699 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ShipperController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipperController.getShipperOrders(int,int,java.lang.String)]] with attributes [[authorize: 'hasRole('SHIPPER')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,700 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'SHIPPER\')") found on: com.example.tmdt.controller.ShipperController
2025-05-12 09:24:59,700 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ShipperController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipperController.acceptOrder(java.lang.Long)]] with attributes [[authorize: 'hasRole('SHIPPER')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,700 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'SHIPPER\')") found on: com.example.tmdt.controller.ShipperController
2025-05-12 09:24:59,700 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.ShipperController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.ShipperController.getAvailableOrders(int,int)]] with attributes [[authorize: 'hasRole('SHIPPER')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,710 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserBalanceController.deposit(com.example.tmdt.model.User,com.example.tmdt.payload.request.DepositRequest)
2025-05-12 09:24:59,711 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.UserBalanceController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserBalanceController.deposit(com.example.tmdt.model.User,com.example.tmdt.payload.request.DepositRequest)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,711 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserBalanceController.withdraw(com.example.tmdt.model.User,java.util.Map)
2025-05-12 09:24:59,712 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.UserBalanceController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserBalanceController.withdraw(com.example.tmdt.model.User,java.util.Map)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,712 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserBalanceController.getTransactionHistory(com.example.tmdt.model.User,int,int)
2025-05-12 09:24:59,712 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.UserBalanceController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserBalanceController.getTransactionHistory(com.example.tmdt.model.User,int,int)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,712 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserBalanceController.getUserBalance(com.example.tmdt.model.User)
2025-05-12 09:24:59,712 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.UserBalanceController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserBalanceController.getUserBalance(com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,888 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserPointsController.getPointsHistory(com.example.tmdt.model.User)
2025-05-12 09:24:59,888 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.UserPointsController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserPointsController.getPointsHistory(com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,889 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserPointsController.getUserPoints(com.example.tmdt.model.User)
2025-05-12 09:24:59,889 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.UserPointsController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserPointsController.getUserPoints(com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,890 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserPointsController.getPointsSummary(com.example.tmdt.model.User)
2025-05-12 09:24:59,890 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.UserPointsController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserPointsController.getPointsSummary(com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,890 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserPointsController.redeemPoints(com.example.tmdt.model.User,int)
2025-05-12 09:24:59,890 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.UserPointsController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.UserPointsController.redeemPoints(com.example.tmdt.model.User,int)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,951 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.addToWishlist(com.example.tmdt.model.User,java.lang.Long)
2025-05-12 09:24:59,952 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.WishlistController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.addToWishlist(com.example.tmdt.model.User,java.lang.Long)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,952 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.removeFromWishlist(com.example.tmdt.model.User,java.lang.Long)
2025-05-12 09:24:59,953 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.WishlistController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.removeFromWishlist(com.example.tmdt.model.User,java.lang.Long)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,953 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.clearWishlist(com.example.tmdt.model.User)
2025-05-12 09:24:59,953 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.WishlistController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.clearWishlist(com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,953 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User)
2025-05-12 09:24:59,953 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.WishlistController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:24:59,953 DEBUG org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource [main] @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'USER\') or hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.checkInWishlist(com.example.tmdt.model.User,java.lang.Long)
2025-05-12 09:24:59,954 DEBUG org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource [main] Caching method [CacheKey[com.example.tmdt.controller.WishlistController; public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.checkInWishlist(com.example.tmdt.model.User,java.lang.Long)]] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:00,144 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@22277482, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@670481b2, org.springframework.security.web.context.SecurityContextPersistenceFilter@4ba56bbe, org.springframework.security.web.header.HeaderWriterFilter@18f919ce, org.springframework.web.filter.CorsFilter@4b97b3d2, org.springframework.security.web.authentication.logout.LogoutFilter@6d3dc0c5, com.example.tmdt.security.jwt.AuthTokenFilter@2220c5f7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2565b097, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@34c79268, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4474c514, org.springframework.security.web.session.SessionManagementFilter@26acbc9d, org.springframework.security.web.access.ExceptionTranslationFilter@17d5138, org.springframework.security.web.access.intercept.AuthorizationFilter@6cc9f35d]
2025-05-12 09:25:00,253 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-12 09:25:00,435 INFO com.example.tmdt.config.WebMvcConfig [main] Added CurrentUserArgumentResolver to Spring MVC
2025-05-12 09:25:00,758 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2025-05-12 09:25:00,767 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8089"]
2025-05-12 09:25:00,771 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) 8089 (http) with context path ''
2025-05-12 09:25:00,773 INFO org.springframework.core.log.CompositeLog [main] Starting...
2025-05-12 09:25:00,773 INFO org.springframework.core.log.CompositeLog [main] BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@3597174b]]
2025-05-12 09:25:00,773 INFO org.springframework.core.log.CompositeLog [main] Started.
2025-05-12 09:25:00,782 INFO org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor [main] More than one TaskScheduler bean exists within the context, and none is named 'taskScheduler'. Mark one of them as primary or name it 'taskScheduler' (possibly as an alias); or implement the SchedulingConfigurer interface and call ScheduledTaskRegistrar#setScheduler explicitly within the configureTasks() callback: [messageBrokerTaskScheduler, defaultSockJsTaskScheduler]
2025-05-12 09:25:00,820 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] 
    select
        coupon0_.id as id1_4_,
        coupon0_.code as code2_4_,
        coupon0_.created_at as created_3_4_,
        coupon0_.description as descript4_4_,
        coupon0_.discount_type as discount5_4_,
        coupon0_.discount_value as discount6_4_,
        coupon0_.end_date as end_date7_4_,
        coupon0_.expiry_date as expiry_d8_4_,
        coupon0_.is_active as is_activ9_4_,
        coupon0_.max_uses as max_use10_4_,
        coupon0_.min_purchase_amount as min_pur11_4_,
        coupon0_.start_date as start_d12_4_,
        coupon0_.type as type13_4_,
        coupon0_.updated_at as updated14_4_,
        coupon0_.used_count as used_co15_4_,
        coupon0_.user_id as user_id16_4_ 
    from
        coupons coupon0_ 
    where
        coupon0_.is_active=? 
        and coupon0_.expiry_date<?
2025-05-12 09:25:00,831 TRACE org.hibernate.type.descriptor.sql.BasicBinder [main] binding parameter [1] as [BOOLEAN] - [true]
2025-05-12 09:25:00,831 TRACE org.hibernate.type.descriptor.sql.BasicBinder [main] binding parameter [2] as [TIMESTAMP] - [2025-05-12T09:25:00.802758685]
2025-05-12 09:25:00,883 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] 
    select
        coupon0_.id as id1_4_,
        coupon0_.code as code2_4_,
        coupon0_.created_at as created_3_4_,
        coupon0_.description as descript4_4_,
        coupon0_.discount_type as discount5_4_,
        coupon0_.discount_value as discount6_4_,
        coupon0_.end_date as end_date7_4_,
        coupon0_.expiry_date as expiry_d8_4_,
        coupon0_.is_active as is_activ9_4_,
        coupon0_.max_uses as max_use10_4_,
        coupon0_.min_purchase_amount as min_pur11_4_,
        coupon0_.start_date as start_d12_4_,
        coupon0_.type as type13_4_,
        coupon0_.updated_at as updated14_4_,
        coupon0_.used_count as used_co15_4_,
        coupon0_.user_id as user_id16_4_ 
    from
        coupons coupon0_ 
    where
        coupon0_.is_active=? 
        and coupon0_.end_date<?
2025-05-12 09:25:00,883 TRACE org.hibernate.type.descriptor.sql.BasicBinder [main] binding parameter [1] as [BOOLEAN] - [true]
2025-05-12 09:25:00,883 TRACE org.hibernate.type.descriptor.sql.BasicBinder [main] binding parameter [2] as [TIMESTAMP] - [2025-05-12T09:25:00.802758685]
2025-05-12 09:25:00,889 INFO org.springframework.boot.StartupInfoLogger [main] Started TmdtApplication in 5.62 seconds (JVM running for 5.814)
2025-05-12 09:25:00,897 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] 
    select
        count(*) as col_0_0_ 
    from
        roles role0_
2025-05-12 09:25:08,006 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-12 09:25:08,006 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2025-05-12 09:25:08,007 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 1 ms
2025-05-12 09:25:08,011 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] REQUEST: OPTIONS /auth/signin
2025-05-12 09:25:08,013 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=*/*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, access-control-request-method=POST, access-control-request-headers=content-type, referer=http://localhost:3000/, origin=http://localhost:3000, connection=keep-alive, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=4
2025-05-12 09:25:08,013 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] RESPONSE: Status=200 (OK - CORS Preflight)
2025-05-12 09:25:08,020 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] REQUEST: POST /auth/signin
2025-05-12 09:25:08,020 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, content-type=application/json, content-length=41, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=0
2025-05-12 09:25:08,029 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-2] Securing POST /auth/signin
2025-05-12 09:25:08,032 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-2] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:08,049 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Processing request to URL: /auth/signin, Method: POST
2025-05-12 09:25:08,050 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Authorization header: null
2025-05-12 09:25:08,050 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] No Authorization header or token parameter found in request
2025-05-12 09:25:08,050 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] No JWT token found in request to: /auth/signin
2025-05-12 09:25:08,053 DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter [http-nio-8080-exec-2] Set SecurityContextHolder to anonymous SecurityContext
2025-05-12 09:25:08,055 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-2] Secured POST /auth/signin
2025-05-12 09:25:08,180 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] ENTERING authenticateUser with args: [LoginRequest(username=a1234, password=1234567)]
2025-05-12 09:25:08,183 INFO com.example.tmdt.controller.AuthController [http-nio-8080-exec-2] Attempting to authenticate user: a1234
2025-05-12 09:25:08,266 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:08,267 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:08,308 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:08,310 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:08,418 DEBUG org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider [http-nio-8080-exec-2] Authenticated user
2025-05-12 09:25:08,419 DEBUG com.example.tmdt.controller.AuthController [http-nio-8080-exec-2] Authentication successful for user: a1234
2025-05-12 09:25:08,419 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-2] Generating JWT token for user: a1234
2025-05-12 09:25:08,454 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-2] Generated JWT token: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:08,455 DEBUG com.example.tmdt.controller.AuthController [http-nio-8080-exec-2] JWT token generated successfully
2025-05-12 09:25:08,455 INFO com.example.tmdt.controller.AuthController [http-nio-8080-exec-2] User a1234 successfully authenticated with roles: [ROLE_USER]
2025-05-12 09:25:08,463 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] EXITING authenticateUser with result: [<200 OK OK,JwtResponse(token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, type=Bearer, id=1, username=a1234, email=leloilonglon9929@gmail.com, fullName=sYn good72, roles=[ROLE_USER], primaryRole=ROLE_USER),[]>]
2025-05-12 09:25:08,463 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] Method authenticateUser executed in 284 ms
2025-05-12 09:25:08,486 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-2] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:08,486 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] RESPONSE: Status=200, Time=465ms
2025-05-12 09:25:08,498 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] REQUEST: POST /auth/signin
2025-05-12 09:25:08,498 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, content-type=application/json, content-length=41, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:08,499 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-3] Securing POST /auth/signin
2025-05-12 09:25:08,499 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-3] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:08,500 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Processing request to URL: /auth/signin, Method: POST
2025-05-12 09:25:08,500 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Authorization header: null
2025-05-12 09:25:08,500 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] No Authorization header or token parameter found in request
2025-05-12 09:25:08,500 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] No JWT token found in request to: /auth/signin
2025-05-12 09:25:08,500 DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter [http-nio-8080-exec-3] Set SecurityContextHolder to anonymous SecurityContext
2025-05-12 09:25:08,500 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-3] Secured POST /auth/signin
2025-05-12 09:25:08,502 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] ENTERING authenticateUser with args: [LoginRequest(username=a1234, password=1234567)]
2025-05-12 09:25:08,502 INFO com.example.tmdt.controller.AuthController [http-nio-8080-exec-3] Attempting to authenticate user: a1234
2025-05-12 09:25:08,504 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:08,505 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:08,507 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:08,508 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:08,584 DEBUG org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider [http-nio-8080-exec-3] Authenticated user
2025-05-12 09:25:08,585 DEBUG com.example.tmdt.controller.AuthController [http-nio-8080-exec-3] Authentication successful for user: a1234
2025-05-12 09:25:08,585 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-3] Generating JWT token for user: a1234
2025-05-12 09:25:08,585 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-3] Generated JWT token: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:08,586 DEBUG com.example.tmdt.controller.AuthController [http-nio-8080-exec-3] JWT token generated successfully
2025-05-12 09:25:08,586 INFO com.example.tmdt.controller.AuthController [http-nio-8080-exec-3] User a1234 successfully authenticated with roles: [ROLE_USER]
2025-05-12 09:25:08,586 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] EXITING authenticateUser with result: [<200 OK OK,JwtResponse(token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, type=Bearer, id=1, username=a1234, email=leloilonglon9929@gmail.com, fullName=sYn good72, roles=[ROLE_USER], primaryRole=ROLE_USER),[]>]
2025-05-12 09:25:08,586 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] Method authenticateUser executed in 84 ms
2025-05-12 09:25:08,588 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-3] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:08,588 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] RESPONSE: Status=200, Time=89ms
2025-05-12 09:25:08,636 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] REQUEST: OPTIONS /notifications
2025-05-12 09:25:08,636 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=*/*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, access-control-request-method=GET, access-control-request-headers=authorization, referer=http://localhost:3000/, origin=http://localhost:3000, connection=keep-alive, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=4
2025-05-12 09:25:08,637 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] RESPONSE: Status=200 (OK - CORS Preflight)
2025-05-12 09:25:08,639 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] REQUEST: GET /notifications
2025-05-12 09:25:08,639 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:08,639 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-5] Securing GET /notifications?currentUserId=1
2025-05-12 09:25:08,640 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-5] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:08,640 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Processing request to URL: /notifications, Method: GET
2025-05-12 09:25:08,640 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:08,640 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Found Authorization header with Bearer token
2025-05-12 09:25:08,640 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:08,654 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-5] JWT token validation successful
2025-05-12 09:25:08,655 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-5] Extracted username from JWT token: a1234
2025-05-12 09:25:08,655 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Valid JWT token found for user: a1234
2025-05-12 09:25:08,657 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:08,658 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:08,661 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:08,662 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:08,667 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:08,667 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] User authorities: [ROLE_USER]
2025-05-12 09:25:08,667 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:08,667 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@46e36c23, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:08,668 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-5] Secured GET /notifications?currentUserId=1
2025-05-12 09:25:08,675 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:08,676 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:08,682 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-5] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:25:08,690 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-5] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:25:08,691 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-5] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:08,696 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] ENTERING getAllNotifications with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:08,696 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] REQUEST: OPTIONS /notifications/unread-count
2025-05-12 09:25:08,697 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=*/*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, access-control-request-method=GET, access-control-request-headers=authorization, referer=http://localhost:3000/, origin=http://localhost:3000, connection=keep-alive, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=4
2025-05-12 09:25:08,697 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] RESPONSE: Status=200 (OK - CORS Preflight)
2025-05-12 09:25:08,698 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] REQUEST: GET /notifications
2025-05-12 09:25:08,698 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:08,698 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] REQUEST: GET /notifications
2025-05-12 09:25:08,699 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:08,699 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-7] Securing GET /notifications?currentUserId=1
2025-05-12 09:25:08,699 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-7] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:08,699 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-6] Securing GET /notifications?currentUserId=1
2025-05-12 09:25:08,699 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-6] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:08,699 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Processing request to URL: /notifications, Method: GET
2025-05-12 09:25:08,699 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:08,699 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Found Authorization header with Bearer token
2025-05-12 09:25:08,700 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:08,700 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Processing request to URL: /notifications, Method: GET
2025-05-12 09:25:08,700 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:08,700 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Found Authorization header with Bearer token
2025-05-12 09:25:08,700 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:08,701 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-7] JWT token validation successful
2025-05-12 09:25:08,701 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] REQUEST: OPTIONS /products/top
2025-05-12 09:25:08,701 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=*/*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, access-control-request-method=GET, access-control-request-headers=authorization, referer=http://localhost:3000/, origin=http://localhost:3000, connection=keep-alive, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=4
2025-05-12 09:25:08,701 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] RESPONSE: Status=200 (OK - CORS Preflight)
2025-05-12 09:25:08,702 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] REQUEST: OPTIONS /notifications/unread-count
2025-05-12 09:25:08,702 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-7] Extracted username from JWT token: a1234
2025-05-12 09:25:08,702 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] REQUEST: GET /notifications/unread-count
2025-05-12 09:25:08,701 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-6] JWT token validation successful
2025-05-12 09:25:08,705 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:08,705 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        notificati0_.id as id1_6_,
        notificati0_.created_at as created_2_6_,
        notificati0_.is_read as is_read3_6_,
        notificati0_.message as message4_6_,
        notificati0_.reference_id as referenc5_6_,
        notificati0_.title as title6_6_,
        notificati0_.type as type7_6_,
        notificati0_.user_id as user_id8_6_ 
    from
        notifications notificati0_ 
    where
        notificati0_.user_id=?
2025-05-12 09:25:08,705 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-9] Securing GET /notifications/unread-count?currentUserId=1
2025-05-12 09:25:08,706 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-9] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:08,702 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=*/*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, access-control-request-method=GET, access-control-request-headers=authorization, referer=http://localhost:3000/, origin=http://localhost:3000, connection=keep-alive, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=4
2025-05-12 09:25:08,703 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] REQUEST: OPTIONS /products/top
2025-05-12 09:25:08,707 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] RESPONSE: Status=200 (OK - CORS Preflight)
2025-05-12 09:25:08,707 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=*/*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, access-control-request-method=GET, access-control-request-headers=authorization, referer=http://localhost:3000/, origin=http://localhost:3000, connection=keep-alive, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=4
2025-05-12 09:25:08,707 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] RESPONSE: Status=200 (OK - CORS Preflight)
2025-05-12 09:25:08,707 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-6] Extracted username from JWT token: a1234
2025-05-12 09:25:08,706 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Processing request to URL: /notifications/unread-count, Method: GET
2025-05-12 09:25:08,707 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Valid JWT token found for user: a1234
2025-05-12 09:25:08,702 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Valid JWT token found for user: a1234
2025-05-12 09:25:08,707 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:08,707 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:08,708 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Found Authorization header with Bearer token
2025-05-12 09:25:08,708 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:08,709 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-9] JWT token validation successful
2025-05-12 09:25:08,711 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] REQUEST: GET /products/top
2025-05-12 09:25:08,712 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:08,712 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-9] Extracted username from JWT token: a1234
2025-05-12 09:25:08,711 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:08,713 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-3] Securing GET /products/top?limit=6&currentUserId=1
2025-05-12 09:25:08,713 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:08,713 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] REQUEST: GET /products/top
2025-05-12 09:25:08,713 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Valid JWT token found for user: a1234
2025-05-12 09:25:08,714 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-3] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:08,714 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:08,715 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-4] Securing GET /products/top?limit=6&currentUserId=1
2025-05-12 09:25:08,715 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-4] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:08,716 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Processing request to URL: /products/top, Method: GET
2025-05-12 09:25:08,717 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:08,717 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Found Authorization header with Bearer token
2025-05-12 09:25:08,717 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:08,717 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:08,718 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:08,718 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Processing request to URL: /products/top, Method: GET
2025-05-12 09:25:08,720 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1d0f0a7b
2025-05-12 09:25:08,720 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:08,721 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Found Authorization header with Bearer token
2025-05-12 09:25:08,720 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-4] JWT token validation successful
2025-05-12 09:25:08,721 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:08,722 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:08,723 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-4] Extracted username from JWT token: a1234
2025-05-12 09:25:08,723 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Valid JWT token found for user: a1234
2025-05-12 09:25:08,723 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:08,723 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-3] JWT token validation successful
2025-05-12 09:25:08,725 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-3] Extracted username from JWT token: a1234
2025-05-12 09:25:08,726 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Valid JWT token found for user: a1234
2025-05-12 09:25:08,727 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:08,728 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:08,728 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] User authorities: [ROLE_USER]
2025-05-12 09:25:08,728 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:08,728 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@53e7851d, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:08,729 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-6] Secured GET /notifications?currentUserId=1
2025-05-12 09:25:08,730 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:08,731 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:08,732 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:08,733 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5c320040
2025-05-12 09:25:08,735 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:08,736 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:08,737 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:08,737 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] User authorities: [ROLE_USER]
2025-05-12 09:25:08,736 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:08,738 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:08,738 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@1864b096, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:08,739 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-7] Secured GET /notifications?currentUserId=1
2025-05-12 09:25:08,738 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:08,739 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:08,740 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:08,741 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:08,742 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:08,742 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:08,744 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:08,746 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:08,746 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] User authorities: [ROLE_USER]
2025-05-12 09:25:08,746 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:08,747 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@1e10e8cb, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:08,747 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-9] Secured GET /notifications/unread-count?currentUserId=1
2025-05-12 09:25:08,747 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6da49978
2025-05-12 09:25:08,748 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:08,748 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] User authorities: [ROLE_USER]
2025-05-12 09:25:08,748 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:08,748 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@2f4bf03, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:08,748 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:08,748 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-4] Secured GET /products/top?limit=6&currentUserId=1
2025-05-12 09:25:08,749 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:08,749 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] User authorities: [ROLE_USER]
2025-05-12 09:25:08,749 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:08,749 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:08,749 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@4830dbee, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:08,749 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-3] Secured GET /products/top?limit=6&currentUserId=1
2025-05-12 09:25:08,750 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:08,751 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:08,752 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:08,753 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] ENTERING getTopProducts with args: [6]
2025-05-12 09:25:08,753 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-4] ENTERING getTopProducts with args: [6]
2025-05-12 09:25:08,753 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:08,756 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-6] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:25:08,757 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-9] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:25:08,758 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-6] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:25:08,758 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-6] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:08,760 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-9] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:25:08,762 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-7] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:25:08,761 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] ENTERING getAllNotifications with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:08,762 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-9] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:08,761 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        product0_.id as id1_11_,
        product0_.average_rating as average_2_11_,
        product0_.category_id as categor14_11_,
        product0_.created_at as created_3_11_,
        product0_.description as descript4_11_,
        product0_.discount_percentage as discount5_11_,
        product0_.image_url as image_ur6_11_,
        product0_.is_featured as is_featu7_11_,
        product0_.name as name8_11_,
        product0_.price as price9_11_,
        product0_.review_count as review_10_11_,
        product0_.sold_count as sold_co11_11_,
        product0_.stock as stock12_11_,
        product0_.updated_at as updated13_11_ 
    from
        products product0_ 
    order by
        product0_.average_rating desc limit ?
2025-05-12 09:25:08,763 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-9] ENTERING getUnreadCount with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:08,761 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        product0_.id as id1_11_,
        product0_.average_rating as average_2_11_,
        product0_.category_id as categor14_11_,
        product0_.created_at as created_3_11_,
        product0_.description as descript4_11_,
        product0_.discount_percentage as discount5_11_,
        product0_.image_url as image_ur6_11_,
        product0_.is_featured as is_featu7_11_,
        product0_.name as name8_11_,
        product0_.price as price9_11_,
        product0_.review_count as review_10_11_,
        product0_.sold_count as sold_co11_11_,
        product0_.stock as stock12_11_,
        product0_.updated_at as updated13_11_ 
    from
        products product0_ 
    order by
        product0_.average_rating desc limit ?
2025-05-12 09:25:08,764 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-7] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:25:08,763 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        notificati0_.id as id1_6_,
        notificati0_.created_at as created_2_6_,
        notificati0_.is_read as is_read3_6_,
        notificati0_.message as message4_6_,
        notificati0_.reference_id as referenc5_6_,
        notificati0_.title as title6_6_,
        notificati0_.type as type7_6_,
        notificati0_.user_id as user_id8_6_ 
    from
        notifications notificati0_ 
    where
        notificati0_.user_id=?
2025-05-12 09:25:08,766 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:08,767 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-7] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:08,767 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-7] ENTERING getAllNotifications with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:08,768 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        count(notificati0_.id) as col_0_0_ 
    from
        notifications notificati0_ 
    where
        notificati0_.user_id=? 
        and notificati0_.is_read=0
2025-05-12 09:25:08,768 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        notificati0_.id as id1_6_,
        notificati0_.created_at as created_2_6_,
        notificati0_.is_read as is_read3_6_,
        notificati0_.message as message4_6_,
        notificati0_.reference_id as referenc5_6_,
        notificati0_.title as title6_6_,
        notificati0_.type as type7_6_,
        notificati0_.user_id as user_id8_6_ 
    from
        notifications notificati0_ 
    where
        notificati0_.user_id=?
2025-05-12 09:25:08,769 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:08,769 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:08,771 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-9] EXITING getUnreadCount with result: [<200 OK OK,25,[]>]
2025-05-12 09:25:08,771 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-9] Method getUnreadCount executed in 8 ms
2025-05-12 09:25:08,775 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-9] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:08,774 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] EXITING getAllNotifications with result: [<200 OK OK,[Notification(id=1, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #1 của bạn đã được xác nhận. Tổng tiền: 19990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=1, isRead=true, createdAt=2025-04-19T19:20:21), Notification(id=2, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #2 của bạn đã được xác nhận. Tổng tiền: 19990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=2, isRead=true, createdAt=2025-04-19T19:22:05), Notification(id=3, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #2 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=2, isRead=true, createdAt=2025-04-19T19:22:16), Notification(id=4, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:09), Notification(id=5, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:13), Notification(id=6, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:25), Notification(id=7, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #3 của bạn đã được xác nhận. Tổng tiền: 17990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:12), Notification(id=8, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #3 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:16), Notification(id=9, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Hoàn tiền thành công, message=Đơn hàng #3 đã được hoàn tiền thành công. Số tiền 17990000.00 đã được hoàn vào tài khoản của bạn., type=SYSTEM_ANNOUNCEMENT, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:16), Notification(id=10, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #4 của bạn đã được xác nhận. Tổng tiền: 16011000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=4, isRead=true, createdAt=2025-04-19T19:39:07), Notification(id=11, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #5 của bạn đã được xác nhận. Tổng tiền: 62291000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=5, isRead=true, createdAt=2025-04-22T21:58:23), Notification(id=12, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:42), Notification(id=13, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:46), Notification(id=14, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:50), Notification(id=15, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #6 của bạn đã được xác nhận. Tổng tiền: 62291000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=6, isRead=true, createdAt=2025-04-22T22:59:45), Notification(id=17, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #5 has been approved., type=SYSTEM_ANNOUNCEMENT, referenceId=5, isRead=true, createdAt=2025-05-01T12:01:36), Notification(id=18, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #7 của bạn đã được xác nhận. Tổng tiền: 26720000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=7, isRead=true, createdAt=2025-05-01T12:46:55), Notification(id=19, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #8 của bạn đã được xác nhận. Tổng tiền: 17810000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=8, isRead=true, createdAt=2025-05-01T12:48:51), Notification(id=20, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #8 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=8, isRead=true, createdAt=2025-05-01T12:49:50), Notification(id=21, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Hoàn tiền thành công, message=Đơn hàng #8 đã được hoàn tiền thành công. Số tiền 17810000.00 đã được hoàn vào tài khoản của bạn., type=SYSTEM_ANNOUNCEMENT, referenceId=8, isRead=true, createdAt=2025-05-01T12:49:50), Notification(id=22, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #9 của bạn đã được xác nhận. Tổng tiền: 32660000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=9, isRead=true, createdAt=2025-05-01T12:51:55), Notification(id=23, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Product Update, message=Một người nào đó đã đánh giá bài review của bạn, type=PRODUCT_RESTOCK, referenceId=24, isRead=true, createdAt=2025-05-01T12:57:07), Notification(id=24, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:27), Notification(id=25, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:28), Notification(id=26, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:30), Notification(id=27, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #4 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:31), Notification(id=28, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:44), Notification(id=29, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:47), Notification(id=30, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:49), Notification(id=31, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:51), Notification(id=32, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:55), Notification(id=33, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:56), Notification(id=34, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T13:00:01), Notification(id=35, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T13:00:03), Notification(id=38, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #7 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=7, isRead=false, createdAt=2025-05-01T13:03:19), Notification(id=39, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #9 has been approved. The refund amount of 32660000.00 has been credited to your account., type=SYSTEM_ANNOUNCEMENT, referenceId=9, isRead=false, createdAt=2025-05-01T13:03:27), Notification(id=41, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #1 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=1, isRead=false, createdAt=2025-05-02T21:02:18), Notification(id=42, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #10 của bạn đã được xác nhận. Tổng tiền: 61360000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=10, isRead=false, createdAt=2025-05-02T22:33:52), Notification(id=43, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #11 của bạn đã được xác nhận. Tổng tiền: 9890000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=11, isRead=false, createdAt=2025-05-02T22:34:19), Notification(id=44, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:30), Notification(id=45, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:31), Notification(id=46, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:33), Notification(id=47, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:34), Notification(id=48, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:34), Notification(id=49, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:36), Notification(id=51, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #11 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=11, isRead=false, createdAt=2025-05-02T22:36:22), Notification(id=53, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #10 has been approved. The refund amount of 61360000.00 has been credited to your account., type=SYSTEM_ANNOUNCEMENT, referenceId=10, isRead=false, createdAt=2025-05-02T22:36:59)],[]>]
2025-05-12 09:25:08,778 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] RESPONSE: Status=200, Time=73ms
2025-05-12 09:25:08,778 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] Method getAllNotifications executed in 87 ms
2025-05-12 09:25:08,779 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] EXITING getAllNotifications with result: [<200 OK OK,[Notification(id=1, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #1 của bạn đã được xác nhận. Tổng tiền: 19990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=1, isRead=true, createdAt=2025-04-19T19:20:21), Notification(id=2, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #2 của bạn đã được xác nhận. Tổng tiền: 19990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=2, isRead=true, createdAt=2025-04-19T19:22:05), Notification(id=3, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #2 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=2, isRead=true, createdAt=2025-04-19T19:22:16), Notification(id=4, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:09), Notification(id=5, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:13), Notification(id=6, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:25), Notification(id=7, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #3 của bạn đã được xác nhận. Tổng tiền: 17990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:12), Notification(id=8, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #3 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:16), Notification(id=9, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Hoàn tiền thành công, message=Đơn hàng #3 đã được hoàn tiền thành công. Số tiền 17990000.00 đã được hoàn vào tài khoản của bạn., type=SYSTEM_ANNOUNCEMENT, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:16), Notification(id=10, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #4 của bạn đã được xác nhận. Tổng tiền: 16011000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=4, isRead=true, createdAt=2025-04-19T19:39:07), Notification(id=11, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #5 của bạn đã được xác nhận. Tổng tiền: 62291000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=5, isRead=true, createdAt=2025-04-22T21:58:23), Notification(id=12, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:42), Notification(id=13, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:46), Notification(id=14, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:50), Notification(id=15, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #6 của bạn đã được xác nhận. Tổng tiền: 62291000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=6, isRead=true, createdAt=2025-04-22T22:59:45), Notification(id=17, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #5 has been approved., type=SYSTEM_ANNOUNCEMENT, referenceId=5, isRead=true, createdAt=2025-05-01T12:01:36), Notification(id=18, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #7 của bạn đã được xác nhận. Tổng tiền: 26720000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=7, isRead=true, createdAt=2025-05-01T12:46:55), Notification(id=19, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #8 của bạn đã được xác nhận. Tổng tiền: 17810000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=8, isRead=true, createdAt=2025-05-01T12:48:51), Notification(id=20, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #8 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=8, isRead=true, createdAt=2025-05-01T12:49:50), Notification(id=21, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Hoàn tiền thành công, message=Đơn hàng #8 đã được hoàn tiền thành công. Số tiền 17810000.00 đã được hoàn vào tài khoản của bạn., type=SYSTEM_ANNOUNCEMENT, referenceId=8, isRead=true, createdAt=2025-05-01T12:49:50), Notification(id=22, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #9 của bạn đã được xác nhận. Tổng tiền: 32660000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=9, isRead=true, createdAt=2025-05-01T12:51:55), Notification(id=23, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Product Update, message=Một người nào đó đã đánh giá bài review của bạn, type=PRODUCT_RESTOCK, referenceId=24, isRead=true, createdAt=2025-05-01T12:57:07), Notification(id=24, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:27), Notification(id=25, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:28), Notification(id=26, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:30), Notification(id=27, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #4 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:31), Notification(id=28, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:44), Notification(id=29, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:47), Notification(id=30, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:49), Notification(id=31, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:51), Notification(id=32, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:55), Notification(id=33, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:56), Notification(id=34, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T13:00:01), Notification(id=35, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T13:00:03), Notification(id=38, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #7 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=7, isRead=false, createdAt=2025-05-01T13:03:19), Notification(id=39, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #9 has been approved. The refund amount of 32660000.00 has been credited to your account., type=SYSTEM_ANNOUNCEMENT, referenceId=9, isRead=false, createdAt=2025-05-01T13:03:27), Notification(id=41, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #1 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=1, isRead=false, createdAt=2025-05-02T21:02:18), Notification(id=42, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #10 của bạn đã được xác nhận. Tổng tiền: 61360000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=10, isRead=false, createdAt=2025-05-02T22:33:52), Notification(id=43, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #11 của bạn đã được xác nhận. Tổng tiền: 9890000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=11, isRead=false, createdAt=2025-05-02T22:34:19), Notification(id=44, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:30), Notification(id=45, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:31), Notification(id=46, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:33), Notification(id=47, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:34), Notification(id=48, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:34), Notification(id=49, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:36), Notification(id=51, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #11 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=11, isRead=false, createdAt=2025-05-02T22:36:22), Notification(id=53, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #10 has been approved. The refund amount of 61360000.00 has been credited to your account., type=SYSTEM_ANNOUNCEMENT, referenceId=10, isRead=false, createdAt=2025-05-02T22:36:59)],[]>]
2025-05-12 09:25:08,782 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] REQUEST: GET /notifications/unread-count
2025-05-12 09:25:08,785 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] Method getAllNotifications executed in 24 ms
2025-05-12 09:25:08,779 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-7] EXITING getAllNotifications with result: [<200 OK OK,[Notification(id=1, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #1 của bạn đã được xác nhận. Tổng tiền: 19990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=1, isRead=true, createdAt=2025-04-19T19:20:21), Notification(id=2, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #2 của bạn đã được xác nhận. Tổng tiền: 19990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=2, isRead=true, createdAt=2025-04-19T19:22:05), Notification(id=3, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #2 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=2, isRead=true, createdAt=2025-04-19T19:22:16), Notification(id=4, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:09), Notification(id=5, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:13), Notification(id=6, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:25), Notification(id=7, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #3 của bạn đã được xác nhận. Tổng tiền: 17990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:12), Notification(id=8, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #3 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:16), Notification(id=9, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Hoàn tiền thành công, message=Đơn hàng #3 đã được hoàn tiền thành công. Số tiền 17990000.00 đã được hoàn vào tài khoản của bạn., type=SYSTEM_ANNOUNCEMENT, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:16), Notification(id=10, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #4 của bạn đã được xác nhận. Tổng tiền: 16011000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=4, isRead=true, createdAt=2025-04-19T19:39:07), Notification(id=11, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #5 của bạn đã được xác nhận. Tổng tiền: 62291000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=5, isRead=true, createdAt=2025-04-22T21:58:23), Notification(id=12, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:42), Notification(id=13, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:46), Notification(id=14, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:50), Notification(id=15, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #6 của bạn đã được xác nhận. Tổng tiền: 62291000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=6, isRead=true, createdAt=2025-04-22T22:59:45), Notification(id=17, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #5 has been approved., type=SYSTEM_ANNOUNCEMENT, referenceId=5, isRead=true, createdAt=2025-05-01T12:01:36), Notification(id=18, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #7 của bạn đã được xác nhận. Tổng tiền: 26720000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=7, isRead=true, createdAt=2025-05-01T12:46:55), Notification(id=19, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #8 của bạn đã được xác nhận. Tổng tiền: 17810000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=8, isRead=true, createdAt=2025-05-01T12:48:51), Notification(id=20, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #8 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=8, isRead=true, createdAt=2025-05-01T12:49:50), Notification(id=21, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Hoàn tiền thành công, message=Đơn hàng #8 đã được hoàn tiền thành công. Số tiền 17810000.00 đã được hoàn vào tài khoản của bạn., type=SYSTEM_ANNOUNCEMENT, referenceId=8, isRead=true, createdAt=2025-05-01T12:49:50), Notification(id=22, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #9 của bạn đã được xác nhận. Tổng tiền: 32660000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=9, isRead=true, createdAt=2025-05-01T12:51:55), Notification(id=23, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Product Update, message=Một người nào đó đã đánh giá bài review của bạn, type=PRODUCT_RESTOCK, referenceId=24, isRead=true, createdAt=2025-05-01T12:57:07), Notification(id=24, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:27), Notification(id=25, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:28), Notification(id=26, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:30), Notification(id=27, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #4 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:31), Notification(id=28, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:44), Notification(id=29, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:47), Notification(id=30, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:49), Notification(id=31, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:51), Notification(id=32, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:55), Notification(id=33, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:56), Notification(id=34, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T13:00:01), Notification(id=35, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T13:00:03), Notification(id=38, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #7 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=7, isRead=false, createdAt=2025-05-01T13:03:19), Notification(id=39, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #9 has been approved. The refund amount of 32660000.00 has been credited to your account., type=SYSTEM_ANNOUNCEMENT, referenceId=9, isRead=false, createdAt=2025-05-01T13:03:27), Notification(id=41, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #1 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=1, isRead=false, createdAt=2025-05-02T21:02:18), Notification(id=42, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #10 của bạn đã được xác nhận. Tổng tiền: 61360000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=10, isRead=false, createdAt=2025-05-02T22:33:52), Notification(id=43, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #11 của bạn đã được xác nhận. Tổng tiền: 9890000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=11, isRead=false, createdAt=2025-05-02T22:34:19), Notification(id=44, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:30), Notification(id=45, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:31), Notification(id=46, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:33), Notification(id=47, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:34), Notification(id=48, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:34), Notification(id=49, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:36), Notification(id=51, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #11 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=11, isRead=false, createdAt=2025-05-02T22:36:22), Notification(id=53, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #10 has been approved. The refund amount of 61360000.00 has been credited to your account., type=SYSTEM_ANNOUNCEMENT, referenceId=10, isRead=false, createdAt=2025-05-02T22:36:59)],[]>]
2025-05-12 09:25:08,786 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:08,788 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-8] Securing GET /notifications/unread-count?currentUserId=1
2025-05-12 09:25:08,788 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-8] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:08,787 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-7] Method getAllNotifications executed in 19 ms
2025-05-12 09:25:08,789 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Processing request to URL: /notifications/unread-count, Method: GET
2025-05-12 09:25:08,789 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:08,790 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Found Authorization header with Bearer token
2025-05-12 09:25:08,790 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:08,791 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-8] JWT token validation successful
2025-05-12 09:25:08,792 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-8] Extracted username from JWT token: a1234
2025-05-12 09:25:08,792 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Valid JWT token found for user: a1234
2025-05-12 09:25:08,792 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:08,792 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:08,793 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [6]
2025-05-12 09:25:08,794 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [6]
2025-05-12 09:25:08,804 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-5] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:08,804 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] RESPONSE: Status=200, Time=165ms
2025-05-12 09:25:08,805 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-6] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:08,805 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] RESPONSE: Status=200, Time=106ms
2025-05-12 09:25:08,806 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-7] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:08,806 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] RESPONSE: Status=200, Time=108ms
2025-05-12 09:25:08,807 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:08,807 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:08,810 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:08,811 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:08,816 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:08,816 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] User authorities: [ROLE_USER]
2025-05-12 09:25:08,816 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:08,816 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@886dfab, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:08,816 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-8] Secured GET /notifications/unread-count?currentUserId=1
2025-05-12 09:25:08,817 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:08,817 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:08,818 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [10]
2025-05-12 09:25:08,818 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [10]
2025-05-12 09:25:08,819 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:08,820 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:08,820 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:08,821 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:08,821 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [7]
2025-05-12 09:25:08,822 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [7]
2025-05-12 09:25:08,823 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:08,823 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:08,824 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [14]
2025-05-12 09:25:08,824 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [14]
2025-05-12 09:25:08,826 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-8] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:25:08,826 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:08,827 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-8] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:25:08,827 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [16]
2025-05-12 09:25:08,827 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-8] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:08,827 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] ENTERING getUnreadCount with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:08,829 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        count(notificati0_.id) as col_0_0_ 
    from
        notifications notificati0_ 
    where
        notificati0_.user_id=? 
        and notificati0_.is_read=0
2025-05-12 09:25:08,828 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:08,830 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [16]
2025-05-12 09:25:08,830 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:08,834 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] EXITING getUnreadCount with result: [<200 OK OK,25,[]>]
2025-05-12 09:25:08,834 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] Method getUnreadCount executed in 7 ms
2025-05-12 09:25:08,837 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-8] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:08,838 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] RESPONSE: Status=200, Time=49ms
2025-05-12 09:25:08,842 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-4] EXITING getTopProducts with result: [<200 OK OK,[Product(id=24, name=iPhone 14 Pro Max, description=iPhone 14 Pro Max 128GB, màn hình 6.7 inch Super Retina XDR, chip A16 Bionic, price=2.899E7, stock=50, imageUrl=https://example.com/images/products/iphone14promax.jpg, category=Category(id=6, name=Điện thoại iPhone, description=Các dòng điện thoại iPhone, imageUrl=https://example.com/images/categories/iphone.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=5.0, reviewCount=1, soldCount=200, isFeatured=true, discountPercentage=5.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-05-01T12:57:05), Product(id=37, name=MacBook Pro 16 M2 Max, description=MacBook Pro 16 inch M2 Max 32GB RAM, 1TB SSD, price=6.999E7, stock=8, imageUrl=https://example.com/images/products/macbookpro16.jpg, category=Category(id=10, name=Laptop Apple, description=Máy tính xách tay của Apple, imageUrl=https://example.com/images/categories/mac.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=5.0, reviewCount=15, soldCount=20, isFeatured=false, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-22T22:59:45), Product(id=28, name=Samsung Galaxy S23 Ultra, description=Samsung Galaxy S23 Ultra 256GB, màn hình 6.8 inch Dynamic AMOLED 2X, chip Snapdragon 8 Gen 2, price=2.599E7, stock=30, imageUrl=https://example.com/images/products/s23ultra.jpg, category=Category(id=7, name=Điện thoại Samsung, description=Các dòng điện thoại Samsung, imageUrl=https://example.com/images/categories/samsung.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.9, reviewCount=85, soldCount=120, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=35, name=MacBook Pro 14 M2 Pro, description=MacBook Pro 14 inch M2 Pro 16GB RAM, 512GB SSD, price=4.599E7, stock=15, imageUrl=https://example.com/images/products/macbookpro14.jpg, category=Category(id=10, name=Laptop Apple, description=Máy tính xách tay của Apple, imageUrl=https://example.com/images/categories/mac.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.9, reviewCount=25, soldCount=30, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=31, name=Samsung Galaxy Z Fold4, description=Samsung Galaxy Z Fold4 256GB, màn hình 7.6 inch Dynamic AMOLED 2X, chip Snapdragon 8+ Gen 1, price=3.299E7, stock=18, imageUrl=https://example.com/images/products/zfold4.jpg, category=Category(id=7, name=Điện thoại Samsung, description=Các dòng điện thoại Samsung, imageUrl=https://example.com/images/categories/samsung.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.8, reviewCount=40, soldCount=50, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-05-01T12:51:55), Product(id=36, name=MacBook Air M2, description=MacBook Air M2 8GB RAM, 256GB SSD, price=2.699E7, stock=19, imageUrl=https://example.com/images/products/macbookairm2.jpg, category=Category(id=10, name=Laptop Apple, description=Máy tính xách tay của Apple, imageUrl=https://example.com/images/categories/mac.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.8, reviewCount=40, soldCount=70, isFeatured=true, discountPercentage=5.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-05-01T12:46:55)],[]>]
2025-05-12 09:25:08,843 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-4] Method getTopProducts executed in 90 ms
2025-05-12 09:25:08,843 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] EXITING getTopProducts with result: [<200 OK OK,[Product(id=24, name=iPhone 14 Pro Max, description=iPhone 14 Pro Max 128GB, màn hình 6.7 inch Super Retina XDR, chip A16 Bionic, price=2.899E7, stock=50, imageUrl=https://example.com/images/products/iphone14promax.jpg, category=Category(id=6, name=Điện thoại iPhone, description=Các dòng điện thoại iPhone, imageUrl=https://example.com/images/categories/iphone.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=5.0, reviewCount=1, soldCount=200, isFeatured=true, discountPercentage=5.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-05-01T12:57:05), Product(id=37, name=MacBook Pro 16 M2 Max, description=MacBook Pro 16 inch M2 Max 32GB RAM, 1TB SSD, price=6.999E7, stock=8, imageUrl=https://example.com/images/products/macbookpro16.jpg, category=Category(id=10, name=Laptop Apple, description=Máy tính xách tay của Apple, imageUrl=https://example.com/images/categories/mac.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=5.0, reviewCount=15, soldCount=20, isFeatured=false, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-22T22:59:45), Product(id=28, name=Samsung Galaxy S23 Ultra, description=Samsung Galaxy S23 Ultra 256GB, màn hình 6.8 inch Dynamic AMOLED 2X, chip Snapdragon 8 Gen 2, price=2.599E7, stock=30, imageUrl=https://example.com/images/products/s23ultra.jpg, category=Category(id=7, name=Điện thoại Samsung, description=Các dòng điện thoại Samsung, imageUrl=https://example.com/images/categories/samsung.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.9, reviewCount=85, soldCount=120, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=35, name=MacBook Pro 14 M2 Pro, description=MacBook Pro 14 inch M2 Pro 16GB RAM, 512GB SSD, price=4.599E7, stock=15, imageUrl=https://example.com/images/products/macbookpro14.jpg, category=Category(id=10, name=Laptop Apple, description=Máy tính xách tay của Apple, imageUrl=https://example.com/images/categories/mac.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.9, reviewCount=25, soldCount=30, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=31, name=Samsung Galaxy Z Fold4, description=Samsung Galaxy Z Fold4 256GB, màn hình 7.6 inch Dynamic AMOLED 2X, chip Snapdragon 8+ Gen 1, price=3.299E7, stock=18, imageUrl=https://example.com/images/products/zfold4.jpg, category=Category(id=7, name=Điện thoại Samsung, description=Các dòng điện thoại Samsung, imageUrl=https://example.com/images/categories/samsung.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.8, reviewCount=40, soldCount=50, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-05-01T12:51:55), Product(id=36, name=MacBook Air M2, description=MacBook Air M2 8GB RAM, 256GB SSD, price=2.699E7, stock=19, imageUrl=https://example.com/images/products/macbookairm2.jpg, category=Category(id=10, name=Laptop Apple, description=Máy tính xách tay của Apple, imageUrl=https://example.com/images/categories/mac.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.8, reviewCount=40, soldCount=70, isFeatured=true, discountPercentage=5.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-05-01T12:46:55)],[]>]
2025-05-12 09:25:08,844 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] Method getTopProducts executed in 91 ms
2025-05-12 09:25:08,849 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:08,850 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [24]
2025-05-12 09:25:08,849 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:08,850 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [24]
2025-05-12 09:25:08,865 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:08,866 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [24]
2025-05-12 09:25:08,866 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:08,868 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [24]
2025-05-12 09:25:08,886 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:08,886 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:08,887 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:08,888 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:08,893 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:08,893 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:08,894 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [37]
2025-05-12 09:25:08,894 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [37]
2025-05-12 09:25:08,897 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:08,897 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:08,898 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [37]
2025-05-12 09:25:08,898 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [37]
2025-05-12 09:25:08,901 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:08,901 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:08,902 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [28]
2025-05-12 09:25:08,902 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [28]
2025-05-12 09:25:08,905 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:08,905 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:08,906 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [28]
2025-05-12 09:25:08,906 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [28]
2025-05-12 09:25:08,909 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:08,909 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:08,910 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:08,910 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:08,912 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:08,912 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:08,913 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:08,914 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:08,918 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:08,918 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:08,919 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [31]
2025-05-12 09:25:08,919 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [31]
2025-05-12 09:25:08,921 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:08,921 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:08,922 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [31]
2025-05-12 09:25:08,922 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [31]
2025-05-12 09:25:08,925 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:08,924 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:08,925 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [36]
2025-05-12 09:25:08,925 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [36]
2025-05-12 09:25:08,928 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:08,929 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [36]
2025-05-12 09:25:08,929 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:08,930 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [36]
2025-05-12 09:25:08,936 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-4] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:08,936 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-3] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:08,937 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] RESPONSE: Status=200, Time=221ms
2025-05-12 09:25:08,937 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] RESPONSE: Status=200, Time=224ms
2025-05-12 09:25:16,036 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] REQUEST: OPTIONS /orders/my-orders
2025-05-12 09:25:16,037 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=*/*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, access-control-request-method=GET, access-control-request-headers=authorization, referer=http://localhost:3000/, origin=http://localhost:3000, connection=keep-alive, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=4
2025-05-12 09:25:16,037 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] RESPONSE: Status=200 (OK - CORS Preflight)
2025-05-12 09:25:16,038 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] REQUEST: OPTIONS /orders/my-orders
2025-05-12 09:25:16,038 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=*/*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, access-control-request-method=GET, access-control-request-headers=authorization, referer=http://localhost:3000/, origin=http://localhost:3000, connection=keep-alive, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=4
2025-05-12 09:25:16,038 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] RESPONSE: Status=200 (OK - CORS Preflight)
2025-05-12 09:25:16,042 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] REQUEST: GET /orders/my-orders
2025-05-12 09:25:16,042 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] REQUEST: GET /orders/my-orders
2025-05-12 09:25:16,043 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=0
2025-05-12 09:25:16,043 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=0
2025-05-12 09:25:16,043 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-9] Securing GET /orders/my-orders?currentUserId=1
2025-05-12 09:25:16,043 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-10] Securing GET /orders/my-orders?currentUserId=1
2025-05-12 09:25:16,043 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-9] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:16,043 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-10] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:16,043 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Processing request to URL: /orders/my-orders, Method: GET
2025-05-12 09:25:16,043 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Processing request to URL: /orders/my-orders, Method: GET
2025-05-12 09:25:16,044 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:16,044 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Found Authorization header with Bearer token
2025-05-12 09:25:16,044 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:16,044 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:16,044 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Found Authorization header with Bearer token
2025-05-12 09:25:16,044 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:16,044 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-10] JWT token validation successful
2025-05-12 09:25:16,045 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-10] Extracted username from JWT token: a1234
2025-05-12 09:25:16,045 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Valid JWT token found for user: a1234
2025-05-12 09:25:16,047 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-9] JWT token validation successful
2025-05-12 09:25:16,049 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-9] Extracted username from JWT token: a1234
2025-05-12 09:25:16,049 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Valid JWT token found for user: a1234
2025-05-12 09:25:16,052 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:16,053 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:16,053 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:16,054 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:16,056 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:16,057 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:16,060 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:16,065 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:16,070 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:16,073 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] User authorities: [ROLE_USER]
2025-05-12 09:25:16,074 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:16,074 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@115f8d14, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:16,074 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-9] Secured GET /orders/my-orders?currentUserId=1
2025-05-12 09:25:16,079 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:16,078 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-9] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getCurrentUserOrders(); target is of class [com.example.tmdt.controller.OrderController]
2025-05-12 09:25:16,081 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] User authorities: [ROLE_USER]
2025-05-12 09:25:16,082 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:16,083 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@6f006126, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:16,083 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-10] Secured GET /orders/my-orders?currentUserId=1
2025-05-12 09:25:16,083 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-9] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getCurrentUserOrders(); target is of class [com.example.tmdt.controller.OrderController]
2025-05-12 09:25:16,086 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-9] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getCurrentUserOrders(); target is of class [com.example.tmdt.controller.OrderController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:16,087 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-10] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getCurrentUserOrders(); target is of class [com.example.tmdt.controller.OrderController]
2025-05-12 09:25:16,089 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-9] ENTERING getCurrentUserOrders
2025-05-12 09:25:16,090 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-10] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getCurrentUserOrders(); target is of class [com.example.tmdt.controller.OrderController]
2025-05-12 09:25:16,095 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-10] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.OrderController.getCurrentUserOrders(); target is of class [com.example.tmdt.controller.OrderController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:16,095 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-10] ENTERING getCurrentUserOrders
2025-05-12 09:25:16,104 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:16,104 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:16,106 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:16,106 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:16,108 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:16,109 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:16,108 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:16,111 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:16,134 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        order0_.id as id1_8_,
        order0_.actual_delivery_date as actual_d2_8_,
        order0_.billing_address as billing_3_8_,
        order0_.coupon_id as coupon_21_8_,
        order0_.created_at as created_4_8_,
        order0_.discount_amount as discount5_8_,
        order0_.estimated_delivery_date as estimate6_8_,
        order0_.notes as notes7_8_,
        order0_.payment_method as payment_8_8_,
        order0_.payment_status as payment_9_8_,
        order0_.phone_number as phone_n10_8_,
        order0_.recipient_name as recipie11_8_,
        order0_.refund_status as refund_12_8_,
        order0_.shipper_id as shipper13_8_,
        order0_.shipping_address as shippin14_8_,
        order0_.shipping_fee as shippin15_8_,
        order0_.status as status16_8_,
        order0_.total_amount as total_a17_8_,
        order0_.tracking_number as trackin18_8_,
        order0_.updated_at as updated19_8_,
        order0_.user_id as user_id20_8_ 
    from
        orders order0_ 
    where
        order0_.user_id=? 
    order by
        order0_.created_at desc
2025-05-12 09:25:16,135 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        order0_.id as id1_8_,
        order0_.actual_delivery_date as actual_d2_8_,
        order0_.billing_address as billing_3_8_,
        order0_.coupon_id as coupon_21_8_,
        order0_.created_at as created_4_8_,
        order0_.discount_amount as discount5_8_,
        order0_.estimated_delivery_date as estimate6_8_,
        order0_.notes as notes7_8_,
        order0_.payment_method as payment_8_8_,
        order0_.payment_status as payment_9_8_,
        order0_.phone_number as phone_n10_8_,
        order0_.recipient_name as recipie11_8_,
        order0_.refund_status as refund_12_8_,
        order0_.shipper_id as shipper13_8_,
        order0_.shipping_address as shippin14_8_,
        order0_.shipping_fee as shippin15_8_,
        order0_.status as status16_8_,
        order0_.total_amount as total_a17_8_,
        order0_.tracking_number as trackin18_8_,
        order0_.updated_at as updated19_8_,
        order0_.user_id as user_id20_8_ 
    from
        orders order0_ 
    where
        order0_.user_id=? 
    order by
        order0_.created_at desc
2025-05-12 09:25:16,138 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:16,139 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:16,169 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        refundrequ0_.id as id1_13_0_,
        refundrequ0_.additional_info as addition2_13_0_,
        refundrequ0_.admin_notes as admin_no3_13_0_,
        refundrequ0_.created_at as created_4_13_0_,
        refundrequ0_.order_id as order_id8_13_0_,
        refundrequ0_.reason as reason5_13_0_,
        refundrequ0_.status as status6_13_0_,
        refundrequ0_.updated_at as updated_7_13_0_ 
    from
        refund_requests refundrequ0_ 
    where
        refundrequ0_.order_id=?
2025-05-12 09:25:16,175 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [11]
2025-05-12 09:25:16,173 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        refundrequ0_.id as id1_13_0_,
        refundrequ0_.additional_info as addition2_13_0_,
        refundrequ0_.admin_notes as admin_no3_13_0_,
        refundrequ0_.created_at as created_4_13_0_,
        refundrequ0_.order_id as order_id8_13_0_,
        refundrequ0_.reason as reason5_13_0_,
        refundrequ0_.status as status6_13_0_,
        refundrequ0_.updated_at as updated_7_13_0_ 
    from
        refund_requests refundrequ0_ 
    where
        refundrequ0_.order_id=?
2025-05-12 09:25:16,176 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [11]
2025-05-12 09:25:16,195 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        refundrequ0_.id as id1_13_0_,
        refundrequ0_.additional_info as addition2_13_0_,
        refundrequ0_.admin_notes as admin_no3_13_0_,
        refundrequ0_.created_at as created_4_13_0_,
        refundrequ0_.order_id as order_id8_13_0_,
        refundrequ0_.reason as reason5_13_0_,
        refundrequ0_.status as status6_13_0_,
        refundrequ0_.updated_at as updated_7_13_0_ 
    from
        refund_requests refundrequ0_ 
    where
        refundrequ0_.order_id=?
2025-05-12 09:25:16,199 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [10]
2025-05-12 09:25:16,197 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        refundrequ0_.id as id1_13_0_,
        refundrequ0_.additional_info as addition2_13_0_,
        refundrequ0_.admin_notes as admin_no3_13_0_,
        refundrequ0_.created_at as created_4_13_0_,
        refundrequ0_.order_id as order_id8_13_0_,
        refundrequ0_.reason as reason5_13_0_,
        refundrequ0_.status as status6_13_0_,
        refundrequ0_.updated_at as updated_7_13_0_ 
    from
        refund_requests refundrequ0_ 
    where
        refundrequ0_.order_id=?
2025-05-12 09:25:16,201 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [10]
2025-05-12 09:25:16,206 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        refundrequ0_.id as id1_13_0_,
        refundrequ0_.additional_info as addition2_13_0_,
        refundrequ0_.admin_notes as admin_no3_13_0_,
        refundrequ0_.created_at as created_4_13_0_,
        refundrequ0_.order_id as order_id8_13_0_,
        refundrequ0_.reason as reason5_13_0_,
        refundrequ0_.status as status6_13_0_,
        refundrequ0_.updated_at as updated_7_13_0_ 
    from
        refund_requests refundrequ0_ 
    where
        refundrequ0_.order_id=?
2025-05-12 09:25:16,205 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        refundrequ0_.id as id1_13_0_,
        refundrequ0_.additional_info as addition2_13_0_,
        refundrequ0_.admin_notes as admin_no3_13_0_,
        refundrequ0_.created_at as created_4_13_0_,
        refundrequ0_.order_id as order_id8_13_0_,
        refundrequ0_.reason as reason5_13_0_,
        refundrequ0_.status as status6_13_0_,
        refundrequ0_.updated_at as updated_7_13_0_ 
    from
        refund_requests refundrequ0_ 
    where
        refundrequ0_.order_id=?
2025-05-12 09:25:16,212 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [9]
2025-05-12 09:25:16,211 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [9]
2025-05-12 09:25:16,220 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        refundrequ0_.id as id1_13_0_,
        refundrequ0_.additional_info as addition2_13_0_,
        refundrequ0_.admin_notes as admin_no3_13_0_,
        refundrequ0_.created_at as created_4_13_0_,
        refundrequ0_.order_id as order_id8_13_0_,
        refundrequ0_.reason as reason5_13_0_,
        refundrequ0_.status as status6_13_0_,
        refundrequ0_.updated_at as updated_7_13_0_ 
    from
        refund_requests refundrequ0_ 
    where
        refundrequ0_.order_id=?
2025-05-12 09:25:16,221 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        refundrequ0_.id as id1_13_0_,
        refundrequ0_.additional_info as addition2_13_0_,
        refundrequ0_.admin_notes as admin_no3_13_0_,
        refundrequ0_.created_at as created_4_13_0_,
        refundrequ0_.order_id as order_id8_13_0_,
        refundrequ0_.reason as reason5_13_0_,
        refundrequ0_.status as status6_13_0_,
        refundrequ0_.updated_at as updated_7_13_0_ 
    from
        refund_requests refundrequ0_ 
    where
        refundrequ0_.order_id=?
2025-05-12 09:25:16,230 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [8]
2025-05-12 09:25:16,229 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [8]
2025-05-12 09:25:16,239 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        refundrequ0_.id as id1_13_0_,
        refundrequ0_.additional_info as addition2_13_0_,
        refundrequ0_.admin_notes as admin_no3_13_0_,
        refundrequ0_.created_at as created_4_13_0_,
        refundrequ0_.order_id as order_id8_13_0_,
        refundrequ0_.reason as reason5_13_0_,
        refundrequ0_.status as status6_13_0_,
        refundrequ0_.updated_at as updated_7_13_0_ 
    from
        refund_requests refundrequ0_ 
    where
        refundrequ0_.order_id=?
2025-05-12 09:25:16,245 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [7]
2025-05-12 09:25:16,243 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        refundrequ0_.id as id1_13_0_,
        refundrequ0_.additional_info as addition2_13_0_,
        refundrequ0_.admin_notes as admin_no3_13_0_,
        refundrequ0_.created_at as created_4_13_0_,
        refundrequ0_.order_id as order_id8_13_0_,
        refundrequ0_.reason as reason5_13_0_,
        refundrequ0_.status as status6_13_0_,
        refundrequ0_.updated_at as updated_7_13_0_ 
    from
        refund_requests refundrequ0_ 
    where
        refundrequ0_.order_id=?
2025-05-12 09:25:16,248 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [7]
2025-05-12 09:25:16,252 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        refundrequ0_.id as id1_13_0_,
        refundrequ0_.additional_info as addition2_13_0_,
        refundrequ0_.admin_notes as admin_no3_13_0_,
        refundrequ0_.created_at as created_4_13_0_,
        refundrequ0_.order_id as order_id8_13_0_,
        refundrequ0_.reason as reason5_13_0_,
        refundrequ0_.status as status6_13_0_,
        refundrequ0_.updated_at as updated_7_13_0_ 
    from
        refund_requests refundrequ0_ 
    where
        refundrequ0_.order_id=?
2025-05-12 09:25:16,253 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        refundrequ0_.id as id1_13_0_,
        refundrequ0_.additional_info as addition2_13_0_,
        refundrequ0_.admin_notes as admin_no3_13_0_,
        refundrequ0_.created_at as created_4_13_0_,
        refundrequ0_.order_id as order_id8_13_0_,
        refundrequ0_.reason as reason5_13_0_,
        refundrequ0_.status as status6_13_0_,
        refundrequ0_.updated_at as updated_7_13_0_ 
    from
        refund_requests refundrequ0_ 
    where
        refundrequ0_.order_id=?
2025-05-12 09:25:16,255 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [6]
2025-05-12 09:25:16,255 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [6]
2025-05-12 09:25:16,258 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        refundrequ0_.id as id1_13_0_,
        refundrequ0_.additional_info as addition2_13_0_,
        refundrequ0_.admin_notes as admin_no3_13_0_,
        refundrequ0_.created_at as created_4_13_0_,
        refundrequ0_.order_id as order_id8_13_0_,
        refundrequ0_.reason as reason5_13_0_,
        refundrequ0_.status as status6_13_0_,
        refundrequ0_.updated_at as updated_7_13_0_ 
    from
        refund_requests refundrequ0_ 
    where
        refundrequ0_.order_id=?
2025-05-12 09:25:16,259 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [5]
2025-05-12 09:25:16,259 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        refundrequ0_.id as id1_13_0_,
        refundrequ0_.additional_info as addition2_13_0_,
        refundrequ0_.admin_notes as admin_no3_13_0_,
        refundrequ0_.created_at as created_4_13_0_,
        refundrequ0_.order_id as order_id8_13_0_,
        refundrequ0_.reason as reason5_13_0_,
        refundrequ0_.status as status6_13_0_,
        refundrequ0_.updated_at as updated_7_13_0_ 
    from
        refund_requests refundrequ0_ 
    where
        refundrequ0_.order_id=?
2025-05-12 09:25:16,260 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [5]
2025-05-12 09:25:16,263 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        refundrequ0_.id as id1_13_0_,
        refundrequ0_.additional_info as addition2_13_0_,
        refundrequ0_.admin_notes as admin_no3_13_0_,
        refundrequ0_.created_at as created_4_13_0_,
        refundrequ0_.order_id as order_id8_13_0_,
        refundrequ0_.reason as reason5_13_0_,
        refundrequ0_.status as status6_13_0_,
        refundrequ0_.updated_at as updated_7_13_0_ 
    from
        refund_requests refundrequ0_ 
    where
        refundrequ0_.order_id=?
2025-05-12 09:25:16,264 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [4]
2025-05-12 09:25:16,267 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        refundrequ0_.id as id1_13_0_,
        refundrequ0_.additional_info as addition2_13_0_,
        refundrequ0_.admin_notes as admin_no3_13_0_,
        refundrequ0_.created_at as created_4_13_0_,
        refundrequ0_.order_id as order_id8_13_0_,
        refundrequ0_.reason as reason5_13_0_,
        refundrequ0_.status as status6_13_0_,
        refundrequ0_.updated_at as updated_7_13_0_ 
    from
        refund_requests refundrequ0_ 
    where
        refundrequ0_.order_id=?
2025-05-12 09:25:16,270 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        refundrequ0_.id as id1_13_0_,
        refundrequ0_.additional_info as addition2_13_0_,
        refundrequ0_.admin_notes as admin_no3_13_0_,
        refundrequ0_.created_at as created_4_13_0_,
        refundrequ0_.order_id as order_id8_13_0_,
        refundrequ0_.reason as reason5_13_0_,
        refundrequ0_.status as status6_13_0_,
        refundrequ0_.updated_at as updated_7_13_0_ 
    from
        refund_requests refundrequ0_ 
    where
        refundrequ0_.order_id=?
2025-05-12 09:25:16,270 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [3]
2025-05-12 09:25:16,270 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [4]
2025-05-12 09:25:16,273 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        refundrequ0_.id as id1_13_0_,
        refundrequ0_.additional_info as addition2_13_0_,
        refundrequ0_.admin_notes as admin_no3_13_0_,
        refundrequ0_.created_at as created_4_13_0_,
        refundrequ0_.order_id as order_id8_13_0_,
        refundrequ0_.reason as reason5_13_0_,
        refundrequ0_.status as status6_13_0_,
        refundrequ0_.updated_at as updated_7_13_0_ 
    from
        refund_requests refundrequ0_ 
    where
        refundrequ0_.order_id=?
2025-05-12 09:25:16,277 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [2]
2025-05-12 09:25:16,274 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        refundrequ0_.id as id1_13_0_,
        refundrequ0_.additional_info as addition2_13_0_,
        refundrequ0_.admin_notes as admin_no3_13_0_,
        refundrequ0_.created_at as created_4_13_0_,
        refundrequ0_.order_id as order_id8_13_0_,
        refundrequ0_.reason as reason5_13_0_,
        refundrequ0_.status as status6_13_0_,
        refundrequ0_.updated_at as updated_7_13_0_ 
    from
        refund_requests refundrequ0_ 
    where
        refundrequ0_.order_id=?
2025-05-12 09:25:16,279 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [3]
2025-05-12 09:25:16,283 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        refundrequ0_.id as id1_13_0_,
        refundrequ0_.additional_info as addition2_13_0_,
        refundrequ0_.admin_notes as admin_no3_13_0_,
        refundrequ0_.created_at as created_4_13_0_,
        refundrequ0_.order_id as order_id8_13_0_,
        refundrequ0_.reason as reason5_13_0_,
        refundrequ0_.status as status6_13_0_,
        refundrequ0_.updated_at as updated_7_13_0_ 
    from
        refund_requests refundrequ0_ 
    where
        refundrequ0_.order_id=?
2025-05-12 09:25:16,286 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [2]
2025-05-12 09:25:16,284 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        refundrequ0_.id as id1_13_0_,
        refundrequ0_.additional_info as addition2_13_0_,
        refundrequ0_.admin_notes as admin_no3_13_0_,
        refundrequ0_.created_at as created_4_13_0_,
        refundrequ0_.order_id as order_id8_13_0_,
        refundrequ0_.reason as reason5_13_0_,
        refundrequ0_.status as status6_13_0_,
        refundrequ0_.updated_at as updated_7_13_0_ 
    from
        refund_requests refundrequ0_ 
    where
        refundrequ0_.order_id=?
2025-05-12 09:25:16,288 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:16,290 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        refundrequ0_.id as id1_13_0_,
        refundrequ0_.additional_info as addition2_13_0_,
        refundrequ0_.admin_notes as admin_no3_13_0_,
        refundrequ0_.created_at as created_4_13_0_,
        refundrequ0_.order_id as order_id8_13_0_,
        refundrequ0_.reason as reason5_13_0_,
        refundrequ0_.status as status6_13_0_,
        refundrequ0_.updated_at as updated_7_13_0_ 
    from
        refund_requests refundrequ0_ 
    where
        refundrequ0_.order_id=?
2025-05-12 09:25:16,291 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:16,303 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        coupon0_.id as id1_4_0_,
        coupon0_.code as code2_4_0_,
        coupon0_.created_at as created_3_4_0_,
        coupon0_.description as descript4_4_0_,
        coupon0_.discount_type as discount5_4_0_,
        coupon0_.discount_value as discount6_4_0_,
        coupon0_.end_date as end_date7_4_0_,
        coupon0_.expiry_date as expiry_d8_4_0_,
        coupon0_.is_active as is_activ9_4_0_,
        coupon0_.max_uses as max_use10_4_0_,
        coupon0_.min_purchase_amount as min_pur11_4_0_,
        coupon0_.start_date as start_d12_4_0_,
        coupon0_.type as type13_4_0_,
        coupon0_.updated_at as updated14_4_0_,
        coupon0_.used_count as used_co15_4_0_,
        coupon0_.user_id as user_id16_4_0_ 
    from
        coupons coupon0_ 
    where
        coupon0_.id=?
2025-05-12 09:25:16,308 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:16,304 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        coupon0_.id as id1_4_0_,
        coupon0_.code as code2_4_0_,
        coupon0_.created_at as created_3_4_0_,
        coupon0_.description as descript4_4_0_,
        coupon0_.discount_type as discount5_4_0_,
        coupon0_.discount_value as discount6_4_0_,
        coupon0_.end_date as end_date7_4_0_,
        coupon0_.expiry_date as expiry_d8_4_0_,
        coupon0_.is_active as is_activ9_4_0_,
        coupon0_.max_uses as max_use10_4_0_,
        coupon0_.min_purchase_amount as min_pur11_4_0_,
        coupon0_.start_date as start_d12_4_0_,
        coupon0_.type as type13_4_0_,
        coupon0_.updated_at as updated14_4_0_,
        coupon0_.used_count as used_co15_4_0_,
        coupon0_.user_id as user_id16_4_0_ 
    from
        coupons coupon0_ 
    where
        coupon0_.id=?
2025-05-12 09:25:16,310 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:16,368 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        coupon0_.id as id1_4_0_,
        coupon0_.code as code2_4_0_,
        coupon0_.created_at as created_3_4_0_,
        coupon0_.description as descript4_4_0_,
        coupon0_.discount_type as discount5_4_0_,
        coupon0_.discount_value as discount6_4_0_,
        coupon0_.end_date as end_date7_4_0_,
        coupon0_.expiry_date as expiry_d8_4_0_,
        coupon0_.is_active as is_activ9_4_0_,
        coupon0_.max_uses as max_use10_4_0_,
        coupon0_.min_purchase_amount as min_pur11_4_0_,
        coupon0_.start_date as start_d12_4_0_,
        coupon0_.type as type13_4_0_,
        coupon0_.updated_at as updated14_4_0_,
        coupon0_.used_count as used_co15_4_0_,
        coupon0_.user_id as user_id16_4_0_ 
    from
        coupons coupon0_ 
    where
        coupon0_.id=?
2025-05-12 09:25:16,369 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        coupon0_.id as id1_4_0_,
        coupon0_.code as code2_4_0_,
        coupon0_.created_at as created_3_4_0_,
        coupon0_.description as descript4_4_0_,
        coupon0_.discount_type as discount5_4_0_,
        coupon0_.discount_value as discount6_4_0_,
        coupon0_.end_date as end_date7_4_0_,
        coupon0_.expiry_date as expiry_d8_4_0_,
        coupon0_.is_active as is_activ9_4_0_,
        coupon0_.max_uses as max_use10_4_0_,
        coupon0_.min_purchase_amount as min_pur11_4_0_,
        coupon0_.start_date as start_d12_4_0_,
        coupon0_.type as type13_4_0_,
        coupon0_.updated_at as updated14_4_0_,
        coupon0_.used_count as used_co15_4_0_,
        coupon0_.user_id as user_id16_4_0_ 
    from
        coupons coupon0_ 
    where
        coupon0_.id=?
2025-05-12 09:25:16,370 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [4]
2025-05-12 09:25:16,369 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [4]
2025-05-12 09:25:16,379 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-9] EXITING getCurrentUserOrders with result: [<200 OK OK,[Order(id=11, userId=1, totalAmount=9890000.00, status=DELIVERED, createdAt=2025-05-02T22:34:19, updatedAt=2025-05-02T22:36:22, shippingAddress=a, a, 1a, billingAddress=null, phoneNumber=0123456789, recipientName=sYn good72, paymentMethod=cod, paymentStatus=PROCESSING, shipperId=2, shippingFee=null, estimatedDeliveryDate=null, actualDeliveryDate=2025-05-02T22:34:34.412113, trackingNumber=null, notes=null, trackingHistory=null, coupon=Coupon(id=1, code=a, description=111, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), type=GENERAL, discountType=PERCENTAGE, discountValue=1.00, minPurchaseAmount=111.00, usedCount=0, maxUses=null, startDate=2025-04-19T12:37:36, endDate=2025-05-19T12:37:36, isActive=true, createdAt=2025-04-19T19:37:44, updatedAt=2025-04-19T19:37:56, expiryDate=2025-05-19T12:37:35.984), discountAmount=1.00, refundStatus=REJECTED), Order(id=10, userId=1, totalAmount=61360000.00, status=RETURNED, createdAt=2025-05-02T22:33:52, updatedAt=2025-05-02T22:36:59, shippingAddress=ac, ac, 1a, billingAddress=null, phoneNumber=0123456789, recipientName=sYn good72, paymentMethod=cod, paymentStatus=PROCESSING, shipperId=2, shippingFee=null, estimatedDeliveryDate=null, actualDeliveryDate=2025-05-02T22:34:35.501661, trackingNumber=null, notes=null, trackingHistory=null, coupon=Coupon(id=1, code=a, description=111, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), type=GENERAL, discountType=PERCENTAGE, discountValue=1.00, minPurchaseAmount=111.00, usedCount=0, maxUses=null, startDate=2025-04-19T12:37:36, endDate=2025-05-19T12:37:36, isActive=true, createdAt=2025-04-19T19:37:44, updatedAt=2025-04-19T19:37:56, expiryDate=2025-05-19T12:37:35.984), discountAmount=1.00, refundStatus=APPROVED), Order(id=9, userId=1, totalAmount=32660000.00, status=RETURNED, createdAt=2025-05-01T12:51:55, updatedAt=2025-05-01T13:03:27, shippingAddress=aba, ab, 12, billingAddress=null, phoneNumber=1234567890, recipientName=sYn good72, paymentMethod=credit, paymentStatus=PROCESSING, shipperId=2, shippingFee=null, estimatedDeliveryDate=null, actualDeliveryDate=2025-05-01T13:00:00.957404, trackingNumber=null, notes=null, trackingHistory=null, coupon=Coupon(id=1, code=a, description=111, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), type=GENERAL, discountType=PERCENTAGE, discountValue=1.00, minPurchaseAmount=111.00, usedCount=0, maxUses=null, startDate=2025-04-19T12:37:36, endDate=2025-05-19T12:37:36, isActive=true, createdAt=2025-04-19T19:37:44, updatedAt=2025-04-19T19:37:56, expiryDate=2025-05-19T12:37:35.984), discountAmount=1.00, refundStatus=APPROVED), Order(id=8, userId=1, totalAmount=17810000.00, status=CANCELLED, createdAt=2025-05-01T12:48:51, updatedAt=2025-05-01T12:49:50, shippingAddress=aba, âb, 12a, billingAddress=null, phoneNumber=1234567890, recipientName=sYn good72, paymentMethod=account_balance, paymentStatus=REFUNDED, shipperId=null, shippingFee=null, estimatedDeliveryDate=null, actualDeliveryDate=null, trackingNumber=null, notes=null, trackingHistory=null, coupon=Coupon(id=1, code=a, description=111, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), type=GENERAL, discountType=PERCENTAGE, discountValue=1.00, minPurchaseAmount=111.00, usedCount=0, maxUses=null, startDate=2025-04-19T12:37:36, endDate=2025-05-19T12:37:36, isActive=true, createdAt=2025-04-19T19:37:44, updatedAt=2025-04-19T19:37:56, expiryDate=2025-05-19T12:37:35.984), discountAmount=1.00, refundStatus=null), Order(id=7, userId=1, totalAmount=26720000.00, status=DELIVERED, createdAt=2025-05-01T12:46:55, updatedAt=2025-05-01T13:03:19, shippingAddress=avab, abc, 12a, billingAddress=null, phoneNumber=1234567890, recipientName=sYn good72, paymentMethod=account_balance, paymentStatus=PAID, shipperId=2, shippingFee=null, estimatedDeliveryDate=null, actualDeliveryDate=2025-05-01T13:00:02.468282, trackingNumber=null, notes=null, trackingHistory=null, coupon=Coupon(id=1, code=a, description=111, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), type=GENERAL, discountType=PERCENTAGE, discountValue=1.00, minPurchaseAmount=111.00, usedCount=0, maxUses=null, startDate=2025-04-19T12:37:36, endDate=2025-05-19T12:37:36, isActive=true, createdAt=2025-04-19T19:37:44, updatedAt=2025-04-19T19:37:56, expiryDate=2025-05-19T12:37:35.984), discountAmount=1.00, refundStatus=REJECTED), Order(id=6, userId=1, totalAmount=62291000.00, status=OUT_FOR_DELIVERY, createdAt=2025-04-22T22:59:45, updatedAt=2025-05-01T12:59:56, shippingAddress=adasd, adsad, 123a, billingAddress=null, phoneNumber=1234567890, recipientName=sYn good72, paymentMethod=cod, paymentStatus=PROCESSING, shipperId=2, shippingFee=null, estimatedDeliveryDate=null, actualDeliveryDate=null, trackingNumber=null, notes=null, trackingHistory=null, coupon=Coupon(id=4, code=d, description=d, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), type=ONE_TIME, discountType=PERCENTAGE, discountValue=11.00, minPurchaseAmount=111.00, usedCount=0, maxUses=null, startDate=2025-04-19T12:38:37, endDate=2025-05-19T12:38:37, isActive=false, createdAt=2025-04-19T19:38:47, updatedAt=2025-04-22T22:59:45, expiryDate=2025-05-19T12:38:37.288), discountAmount=11.00, refundStatus=null), Order(id=5, userId=1, totalAmount=62291000.00, status=RETURNED, createdAt=2025-04-22T21:58:23, updatedAt=2025-05-03T05:46:59, shippingAddress=adsad, adsad, 123a, billingAddress=null, phoneNumber=0899724525, recipientName=sYn good72, paymentMethod=cod, paymentStatus=PROCESSING, shipperId=2, shippingFee=null, estimatedDeliveryDate=null, actualDeliveryDate=2025-04-22T21:58:49.978533, trackingNumber=null, notes=null, trackingHistory=null, coupon=Coupon(id=4, code=d, description=d, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), type=ONE_TIME, discountType=PERCENTAGE, discountValue=11.00, minPurchaseAmount=111.00, usedCount=0, maxUses=null, startDate=2025-04-19T12:38:37, endDate=2025-05-19T12:38:37, isActive=false, createdAt=2025-04-19T19:38:47, updatedAt=2025-04-22T22:59:45, expiryDate=2025-05-19T12:38:37.288), discountAmount=11.00, refundStatus=APPROVED), Order(id=4, userId=1, totalAmount=16011000.00, status=IN_TRANSIT, createdAt=2025-04-19T19:39:07, updatedAt=2025-05-01T12:59:31, shippingAddress=ádvb, ădawe, 12323, billingAddress=null, phoneNumber=3123123123, recipientName=sYn good72, paymentMethod=account_balance, paymentStatus=PAID, shipperId=2, shippingFee=null, estimatedDeliveryDate=null, actualDeliveryDate=null, trackingNumber=null, notes=null, trackingHistory=null, coupon=Coupon(id=4, code=d, description=d, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), type=ONE_TIME, discountType=PERCENTAGE, discountValue=11.00, minPurchaseAmount=111.00, usedCount=0, maxUses=null, startDate=2025-04-19T12:38:37, endDate=2025-05-19T12:38:37, isActive=false, createdAt=2025-04-19T19:38:47, updatedAt=2025-04-22T22:59:45, expiryDate=2025-05-19T12:38:37.288), discountAmount=11.00, refundStatus=null), Order(id=3, userId=1, totalAmount=17990000.00, status=CANCELLED, createdAt=2025-04-19T19:37:12, updatedAt=2025-04-19T19:37:16, shippingAddress=ádvb, ădawe, 12323, billingAddress=null, phoneNumber=3123123123, recipientName=sYn good72, paymentMethod=credit, paymentStatus=REFUNDED, shipperId=null, shippingFee=null, estimatedDeliveryDate=null, actualDeliveryDate=null, trackingNumber=null, notes=null, trackingHistory=null, coupon=null, discountAmount=0.00, refundStatus=null), Order(id=2, userId=1, totalAmount=19990000.00, status=CANCELLED, createdAt=2025-04-19T19:22:05, updatedAt=2025-04-19T19:22:16, shippingAddress=ádvb, ădawe, 12323, billingAddress=null, phoneNumber=3123123123, recipientName=sYn good72, paymentMethod=credit, paymentStatus=PROCESSING, shipperId=null, shippingFee=null, estimatedDeliveryDate=null, actualDeliveryDate=null, trackingNumber=null, notes=null, trackingHistory=null, coupon=null, discountAmount=0.00, refundStatus=null), Order(id=1, userId=1, totalAmount=19990000.00, status=DELIVERED, createdAt=2025-04-19T19:20:21, updatedAt=2025-05-02T21:02:18, shippingAddress=ádvb, ădawe, 12323, billingAddress=null, phoneNumber=3123123123, recipientName=sYn good72, paymentMethod=cod, paymentStatus=PROCESSING, shipperId=2, shippingFee=null, estimatedDeliveryDate=null, actualDeliveryDate=2025-04-19T19:23:24.861763, trackingNumber=null, notes=null, trackingHistory=null, coupon=null, discountAmount=0.00, refundStatus=REJECTED)],[]>]
2025-05-12 09:25:16,384 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-9] Method getCurrentUserOrders executed in 295 ms
2025-05-12 09:25:16,380 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-10] EXITING getCurrentUserOrders with result: [<200 OK OK,[Order(id=11, userId=1, totalAmount=9890000.00, status=DELIVERED, createdAt=2025-05-02T22:34:19, updatedAt=2025-05-02T22:36:22, shippingAddress=a, a, 1a, billingAddress=null, phoneNumber=0123456789, recipientName=sYn good72, paymentMethod=cod, paymentStatus=PROCESSING, shipperId=2, shippingFee=null, estimatedDeliveryDate=null, actualDeliveryDate=2025-05-02T22:34:34.412113, trackingNumber=null, notes=null, trackingHistory=null, coupon=Coupon(id=1, code=a, description=111, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), type=GENERAL, discountType=PERCENTAGE, discountValue=1.00, minPurchaseAmount=111.00, usedCount=0, maxUses=null, startDate=2025-04-19T12:37:36, endDate=2025-05-19T12:37:36, isActive=true, createdAt=2025-04-19T19:37:44, updatedAt=2025-04-19T19:37:56, expiryDate=2025-05-19T12:37:35.984), discountAmount=1.00, refundStatus=REJECTED), Order(id=10, userId=1, totalAmount=61360000.00, status=RETURNED, createdAt=2025-05-02T22:33:52, updatedAt=2025-05-02T22:36:59, shippingAddress=ac, ac, 1a, billingAddress=null, phoneNumber=0123456789, recipientName=sYn good72, paymentMethod=cod, paymentStatus=PROCESSING, shipperId=2, shippingFee=null, estimatedDeliveryDate=null, actualDeliveryDate=2025-05-02T22:34:35.501661, trackingNumber=null, notes=null, trackingHistory=null, coupon=Coupon(id=1, code=a, description=111, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), type=GENERAL, discountType=PERCENTAGE, discountValue=1.00, minPurchaseAmount=111.00, usedCount=0, maxUses=null, startDate=2025-04-19T12:37:36, endDate=2025-05-19T12:37:36, isActive=true, createdAt=2025-04-19T19:37:44, updatedAt=2025-04-19T19:37:56, expiryDate=2025-05-19T12:37:35.984), discountAmount=1.00, refundStatus=APPROVED), Order(id=9, userId=1, totalAmount=32660000.00, status=RETURNED, createdAt=2025-05-01T12:51:55, updatedAt=2025-05-01T13:03:27, shippingAddress=aba, ab, 12, billingAddress=null, phoneNumber=1234567890, recipientName=sYn good72, paymentMethod=credit, paymentStatus=PROCESSING, shipperId=2, shippingFee=null, estimatedDeliveryDate=null, actualDeliveryDate=2025-05-01T13:00:00.957404, trackingNumber=null, notes=null, trackingHistory=null, coupon=Coupon(id=1, code=a, description=111, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), type=GENERAL, discountType=PERCENTAGE, discountValue=1.00, minPurchaseAmount=111.00, usedCount=0, maxUses=null, startDate=2025-04-19T12:37:36, endDate=2025-05-19T12:37:36, isActive=true, createdAt=2025-04-19T19:37:44, updatedAt=2025-04-19T19:37:56, expiryDate=2025-05-19T12:37:35.984), discountAmount=1.00, refundStatus=APPROVED), Order(id=8, userId=1, totalAmount=17810000.00, status=CANCELLED, createdAt=2025-05-01T12:48:51, updatedAt=2025-05-01T12:49:50, shippingAddress=aba, âb, 12a, billingAddress=null, phoneNumber=1234567890, recipientName=sYn good72, paymentMethod=account_balance, paymentStatus=REFUNDED, shipperId=null, shippingFee=null, estimatedDeliveryDate=null, actualDeliveryDate=null, trackingNumber=null, notes=null, trackingHistory=null, coupon=Coupon(id=1, code=a, description=111, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), type=GENERAL, discountType=PERCENTAGE, discountValue=1.00, minPurchaseAmount=111.00, usedCount=0, maxUses=null, startDate=2025-04-19T12:37:36, endDate=2025-05-19T12:37:36, isActive=true, createdAt=2025-04-19T19:37:44, updatedAt=2025-04-19T19:37:56, expiryDate=2025-05-19T12:37:35.984), discountAmount=1.00, refundStatus=null), Order(id=7, userId=1, totalAmount=26720000.00, status=DELIVERED, createdAt=2025-05-01T12:46:55, updatedAt=2025-05-01T13:03:19, shippingAddress=avab, abc, 12a, billingAddress=null, phoneNumber=1234567890, recipientName=sYn good72, paymentMethod=account_balance, paymentStatus=PAID, shipperId=2, shippingFee=null, estimatedDeliveryDate=null, actualDeliveryDate=2025-05-01T13:00:02.468282, trackingNumber=null, notes=null, trackingHistory=null, coupon=Coupon(id=1, code=a, description=111, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), type=GENERAL, discountType=PERCENTAGE, discountValue=1.00, minPurchaseAmount=111.00, usedCount=0, maxUses=null, startDate=2025-04-19T12:37:36, endDate=2025-05-19T12:37:36, isActive=true, createdAt=2025-04-19T19:37:44, updatedAt=2025-04-19T19:37:56, expiryDate=2025-05-19T12:37:35.984), discountAmount=1.00, refundStatus=REJECTED), Order(id=6, userId=1, totalAmount=62291000.00, status=OUT_FOR_DELIVERY, createdAt=2025-04-22T22:59:45, updatedAt=2025-05-01T12:59:56, shippingAddress=adasd, adsad, 123a, billingAddress=null, phoneNumber=1234567890, recipientName=sYn good72, paymentMethod=cod, paymentStatus=PROCESSING, shipperId=2, shippingFee=null, estimatedDeliveryDate=null, actualDeliveryDate=null, trackingNumber=null, notes=null, trackingHistory=null, coupon=Coupon(id=4, code=d, description=d, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), type=ONE_TIME, discountType=PERCENTAGE, discountValue=11.00, minPurchaseAmount=111.00, usedCount=0, maxUses=null, startDate=2025-04-19T12:38:37, endDate=2025-05-19T12:38:37, isActive=false, createdAt=2025-04-19T19:38:47, updatedAt=2025-04-22T22:59:45, expiryDate=2025-05-19T12:38:37.288), discountAmount=11.00, refundStatus=null), Order(id=5, userId=1, totalAmount=62291000.00, status=RETURNED, createdAt=2025-04-22T21:58:23, updatedAt=2025-05-03T05:46:59, shippingAddress=adsad, adsad, 123a, billingAddress=null, phoneNumber=0899724525, recipientName=sYn good72, paymentMethod=cod, paymentStatus=PROCESSING, shipperId=2, shippingFee=null, estimatedDeliveryDate=null, actualDeliveryDate=2025-04-22T21:58:49.978533, trackingNumber=null, notes=null, trackingHistory=null, coupon=Coupon(id=4, code=d, description=d, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), type=ONE_TIME, discountType=PERCENTAGE, discountValue=11.00, minPurchaseAmount=111.00, usedCount=0, maxUses=null, startDate=2025-04-19T12:38:37, endDate=2025-05-19T12:38:37, isActive=false, createdAt=2025-04-19T19:38:47, updatedAt=2025-04-22T22:59:45, expiryDate=2025-05-19T12:38:37.288), discountAmount=11.00, refundStatus=APPROVED), Order(id=4, userId=1, totalAmount=16011000.00, status=IN_TRANSIT, createdAt=2025-04-19T19:39:07, updatedAt=2025-05-01T12:59:31, shippingAddress=ádvb, ădawe, 12323, billingAddress=null, phoneNumber=3123123123, recipientName=sYn good72, paymentMethod=account_balance, paymentStatus=PAID, shipperId=2, shippingFee=null, estimatedDeliveryDate=null, actualDeliveryDate=null, trackingNumber=null, notes=null, trackingHistory=null, coupon=Coupon(id=4, code=d, description=d, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), type=ONE_TIME, discountType=PERCENTAGE, discountValue=11.00, minPurchaseAmount=111.00, usedCount=0, maxUses=null, startDate=2025-04-19T12:38:37, endDate=2025-05-19T12:38:37, isActive=false, createdAt=2025-04-19T19:38:47, updatedAt=2025-04-22T22:59:45, expiryDate=2025-05-19T12:38:37.288), discountAmount=11.00, refundStatus=null), Order(id=3, userId=1, totalAmount=17990000.00, status=CANCELLED, createdAt=2025-04-19T19:37:12, updatedAt=2025-04-19T19:37:16, shippingAddress=ádvb, ădawe, 12323, billingAddress=null, phoneNumber=3123123123, recipientName=sYn good72, paymentMethod=credit, paymentStatus=REFUNDED, shipperId=null, shippingFee=null, estimatedDeliveryDate=null, actualDeliveryDate=null, trackingNumber=null, notes=null, trackingHistory=null, coupon=null, discountAmount=0.00, refundStatus=null), Order(id=2, userId=1, totalAmount=19990000.00, status=CANCELLED, createdAt=2025-04-19T19:22:05, updatedAt=2025-04-19T19:22:16, shippingAddress=ádvb, ădawe, 12323, billingAddress=null, phoneNumber=3123123123, recipientName=sYn good72, paymentMethod=credit, paymentStatus=PROCESSING, shipperId=null, shippingFee=null, estimatedDeliveryDate=null, actualDeliveryDate=null, trackingNumber=null, notes=null, trackingHistory=null, coupon=null, discountAmount=0.00, refundStatus=null), Order(id=1, userId=1, totalAmount=19990000.00, status=DELIVERED, createdAt=2025-04-19T19:20:21, updatedAt=2025-05-02T21:02:18, shippingAddress=ádvb, ădawe, 12323, billingAddress=null, phoneNumber=3123123123, recipientName=sYn good72, paymentMethod=cod, paymentStatus=PROCESSING, shipperId=2, shippingFee=null, estimatedDeliveryDate=null, actualDeliveryDate=2025-04-19T19:23:24.861763, trackingNumber=null, notes=null, trackingHistory=null, coupon=null, discountAmount=0.00, refundStatus=REJECTED)],[]>]
2025-05-12 09:25:16,392 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-10] Method getCurrentUserOrders executed in 297 ms
2025-05-12 09:25:16,395 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        orderitems0_.order_id as order_id6_7_0_,
        orderitems0_.id as id1_7_0_,
        orderitems0_.id as id1_7_1_,
        orderitems0_.order_id as order_id6_7_1_,
        orderitems0_.price as price2_7_1_,
        orderitems0_.product_id as product_7_7_1_,
        orderitems0_.product_image_url as product_3_7_1_,
        orderitems0_.product_name as product_4_7_1_,
        orderitems0_.quantity as quantity5_7_1_ 
    from
        order_items orderitems0_ 
    where
        orderitems0_.order_id=?
2025-05-12 09:25:16,398 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [11]
2025-05-12 09:25:16,399 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        orderitems0_.order_id as order_id6_7_0_,
        orderitems0_.id as id1_7_0_,
        orderitems0_.id as id1_7_1_,
        orderitems0_.order_id as order_id6_7_1_,
        orderitems0_.price as price2_7_1_,
        orderitems0_.product_id as product_7_7_1_,
        orderitems0_.product_image_url as product_3_7_1_,
        orderitems0_.product_name as product_4_7_1_,
        orderitems0_.quantity as quantity5_7_1_ 
    from
        order_items orderitems0_ 
    where
        orderitems0_.order_id=?
2025-05-12 09:25:16,400 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [11]
2025-05-12 09:25:16,425 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:16,426 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [30]
2025-05-12 09:25:16,428 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:16,435 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [30]
2025-05-12 09:25:16,431 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:16,440 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [30]
2025-05-12 09:25:16,442 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:16,446 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [30]
2025-05-12 09:25:16,445 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:16,449 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [30]
2025-05-12 09:25:16,461 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:16,463 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [30]
2025-05-12 09:25:16,471 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        imageurls0_.refund_request_id as refund_r1_12_0_,
        imageurls0_.image_url as image_ur2_12_0_ 
    from
        refund_request_images imageurls0_ 
    where
        imageurls0_.refund_request_id=?
2025-05-12 09:25:16,472 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [9]
2025-05-12 09:25:16,472 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        imageurls0_.refund_request_id as refund_r1_12_0_,
        imageurls0_.image_url as image_ur2_12_0_ 
    from
        refund_request_images imageurls0_ 
    where
        imageurls0_.refund_request_id=?
2025-05-12 09:25:16,472 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [9]
2025-05-12 09:25:16,489 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        orderitems0_.order_id as order_id6_7_0_,
        orderitems0_.id as id1_7_0_,
        orderitems0_.id as id1_7_1_,
        orderitems0_.order_id as order_id6_7_1_,
        orderitems0_.price as price2_7_1_,
        orderitems0_.product_id as product_7_7_1_,
        orderitems0_.product_image_url as product_3_7_1_,
        orderitems0_.product_name as product_4_7_1_,
        orderitems0_.quantity as quantity5_7_1_ 
    from
        order_items orderitems0_ 
    where
        orderitems0_.order_id=?
2025-05-12 09:25:16,489 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        orderitems0_.order_id as order_id6_7_0_,
        orderitems0_.id as id1_7_0_,
        orderitems0_.id as id1_7_1_,
        orderitems0_.order_id as order_id6_7_1_,
        orderitems0_.price as price2_7_1_,
        orderitems0_.product_id as product_7_7_1_,
        orderitems0_.product_image_url as product_3_7_1_,
        orderitems0_.product_name as product_4_7_1_,
        orderitems0_.quantity as quantity5_7_1_ 
    from
        order_items orderitems0_ 
    where
        orderitems0_.order_id=?
2025-05-12 09:25:16,491 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [10]
2025-05-12 09:25:16,492 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [10]
2025-05-12 09:25:16,495 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:16,495 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:16,496 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [39]
2025-05-12 09:25:16,496 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [39]
2025-05-12 09:25:16,500 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:16,501 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [39]
2025-05-12 09:25:16,500 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:16,503 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [39]
2025-05-12 09:25:16,506 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:16,507 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [39]
2025-05-12 09:25:16,508 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:16,509 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [39]
2025-05-12 09:25:16,509 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:16,511 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [38]
2025-05-12 09:25:16,511 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:16,512 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [38]
2025-05-12 09:25:16,515 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:16,517 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:16,520 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [38]
2025-05-12 09:25:16,520 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [38]
2025-05-12 09:25:16,522 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:16,522 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:16,524 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [38]
2025-05-12 09:25:16,525 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [38]
2025-05-12 09:25:16,528 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        imageurls0_.refund_request_id as refund_r1_12_0_,
        imageurls0_.image_url as image_ur2_12_0_ 
    from
        refund_request_images imageurls0_ 
    where
        imageurls0_.refund_request_id=?
2025-05-12 09:25:16,528 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        imageurls0_.refund_request_id as refund_r1_12_0_,
        imageurls0_.image_url as image_ur2_12_0_ 
    from
        refund_request_images imageurls0_ 
    where
        imageurls0_.refund_request_id=?
2025-05-12 09:25:16,529 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [10]
2025-05-12 09:25:16,530 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [10]
2025-05-12 09:25:16,534 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        orderitems0_.order_id as order_id6_7_0_,
        orderitems0_.id as id1_7_0_,
        orderitems0_.id as id1_7_1_,
        orderitems0_.order_id as order_id6_7_1_,
        orderitems0_.price as price2_7_1_,
        orderitems0_.product_id as product_7_7_1_,
        orderitems0_.product_image_url as product_3_7_1_,
        orderitems0_.product_name as product_4_7_1_,
        orderitems0_.quantity as quantity5_7_1_ 
    from
        order_items orderitems0_ 
    where
        orderitems0_.order_id=?
2025-05-12 09:25:16,534 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        orderitems0_.order_id as order_id6_7_0_,
        orderitems0_.id as id1_7_0_,
        orderitems0_.id as id1_7_1_,
        orderitems0_.order_id as order_id6_7_1_,
        orderitems0_.price as price2_7_1_,
        orderitems0_.product_id as product_7_7_1_,
        orderitems0_.product_image_url as product_3_7_1_,
        orderitems0_.product_name as product_4_7_1_,
        orderitems0_.quantity as quantity5_7_1_ 
    from
        order_items orderitems0_ 
    where
        orderitems0_.order_id=?
2025-05-12 09:25:16,536 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [9]
2025-05-12 09:25:16,536 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [9]
2025-05-12 09:25:16,542 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:16,543 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [31]
2025-05-12 09:25:16,543 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:16,544 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [31]
2025-05-12 09:25:16,549 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:16,549 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:16,551 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [31]
2025-05-12 09:25:16,551 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [31]
2025-05-12 09:25:16,554 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:16,554 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:16,555 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [31]
2025-05-12 09:25:16,555 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [31]
2025-05-12 09:25:16,558 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        imageurls0_.refund_request_id as refund_r1_12_0_,
        imageurls0_.image_url as image_ur2_12_0_ 
    from
        refund_request_images imageurls0_ 
    where
        imageurls0_.refund_request_id=?
2025-05-12 09:25:16,558 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        imageurls0_.refund_request_id as refund_r1_12_0_,
        imageurls0_.image_url as image_ur2_12_0_ 
    from
        refund_request_images imageurls0_ 
    where
        imageurls0_.refund_request_id=?
2025-05-12 09:25:16,558 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [6]
2025-05-12 09:25:16,559 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [6]
2025-05-12 09:25:16,561 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        orderitems0_.order_id as order_id6_7_0_,
        orderitems0_.id as id1_7_0_,
        orderitems0_.id as id1_7_1_,
        orderitems0_.order_id as order_id6_7_1_,
        orderitems0_.price as price2_7_1_,
        orderitems0_.product_id as product_7_7_1_,
        orderitems0_.product_image_url as product_3_7_1_,
        orderitems0_.product_name as product_4_7_1_,
        orderitems0_.quantity as quantity5_7_1_ 
    from
        order_items orderitems0_ 
    where
        orderitems0_.order_id=?
2025-05-12 09:25:16,561 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        orderitems0_.order_id as order_id6_7_0_,
        orderitems0_.id as id1_7_0_,
        orderitems0_.id as id1_7_1_,
        orderitems0_.order_id as order_id6_7_1_,
        orderitems0_.price as price2_7_1_,
        orderitems0_.product_id as product_7_7_1_,
        orderitems0_.product_image_url as product_3_7_1_,
        orderitems0_.product_name as product_4_7_1_,
        orderitems0_.quantity as quantity5_7_1_ 
    from
        order_items orderitems0_ 
    where
        orderitems0_.order_id=?
2025-05-12 09:25:16,562 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [8]
2025-05-12 09:25:16,562 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [8]
2025-05-12 09:25:16,568 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:16,569 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:16,569 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [27]
2025-05-12 09:25:16,570 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [27]
2025-05-12 09:25:16,574 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:16,574 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:16,575 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [27]
2025-05-12 09:25:16,575 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [27]
2025-05-12 09:25:16,578 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:16,578 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:16,578 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [27]
2025-05-12 09:25:16,578 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [27]
2025-05-12 09:25:16,582 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        orderitems0_.order_id as order_id6_7_0_,
        orderitems0_.id as id1_7_0_,
        orderitems0_.id as id1_7_1_,
        orderitems0_.order_id as order_id6_7_1_,
        orderitems0_.price as price2_7_1_,
        orderitems0_.product_id as product_7_7_1_,
        orderitems0_.product_image_url as product_3_7_1_,
        orderitems0_.product_name as product_4_7_1_,
        orderitems0_.quantity as quantity5_7_1_ 
    from
        order_items orderitems0_ 
    where
        orderitems0_.order_id=?
2025-05-12 09:25:16,582 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        orderitems0_.order_id as order_id6_7_0_,
        orderitems0_.id as id1_7_0_,
        orderitems0_.id as id1_7_1_,
        orderitems0_.order_id as order_id6_7_1_,
        orderitems0_.price as price2_7_1_,
        orderitems0_.product_id as product_7_7_1_,
        orderitems0_.product_image_url as product_3_7_1_,
        orderitems0_.product_name as product_4_7_1_,
        orderitems0_.quantity as quantity5_7_1_ 
    from
        order_items orderitems0_ 
    where
        orderitems0_.order_id=?
2025-05-12 09:25:16,583 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [7]
2025-05-12 09:25:16,583 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [7]
2025-05-12 09:25:16,585 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:16,585 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:16,587 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [36]
2025-05-12 09:25:16,588 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [36]
2025-05-12 09:25:16,591 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:16,592 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [36]
2025-05-12 09:25:16,591 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:16,592 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [36]
2025-05-12 09:25:16,594 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:16,597 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [36]
2025-05-12 09:25:16,598 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:16,599 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [36]
2025-05-12 09:25:16,602 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        imageurls0_.refund_request_id as refund_r1_12_0_,
        imageurls0_.image_url as image_ur2_12_0_ 
    from
        refund_request_images imageurls0_ 
    where
        imageurls0_.refund_request_id=?
2025-05-12 09:25:16,604 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        imageurls0_.refund_request_id as refund_r1_12_0_,
        imageurls0_.image_url as image_ur2_12_0_ 
    from
        refund_request_images imageurls0_ 
    where
        imageurls0_.refund_request_id=?
2025-05-12 09:25:16,605 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [7]
2025-05-12 09:25:16,605 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [7]
2025-05-12 09:25:16,610 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        orderitems0_.order_id as order_id6_7_0_,
        orderitems0_.id as id1_7_0_,
        orderitems0_.id as id1_7_1_,
        orderitems0_.order_id as order_id6_7_1_,
        orderitems0_.price as price2_7_1_,
        orderitems0_.product_id as product_7_7_1_,
        orderitems0_.product_image_url as product_3_7_1_,
        orderitems0_.product_name as product_4_7_1_,
        orderitems0_.quantity as quantity5_7_1_ 
    from
        order_items orderitems0_ 
    where
        orderitems0_.order_id=?
2025-05-12 09:25:16,611 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        orderitems0_.order_id as order_id6_7_0_,
        orderitems0_.id as id1_7_0_,
        orderitems0_.id as id1_7_1_,
        orderitems0_.order_id as order_id6_7_1_,
        orderitems0_.price as price2_7_1_,
        orderitems0_.product_id as product_7_7_1_,
        orderitems0_.product_image_url as product_3_7_1_,
        orderitems0_.product_name as product_4_7_1_,
        orderitems0_.quantity as quantity5_7_1_ 
    from
        order_items orderitems0_ 
    where
        orderitems0_.order_id=?
2025-05-12 09:25:16,612 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [6]
2025-05-12 09:25:16,612 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [6]
2025-05-12 09:25:16,617 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:16,617 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:16,619 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [37]
2025-05-12 09:25:16,620 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [37]
2025-05-12 09:25:16,625 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:16,625 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:16,626 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [37]
2025-05-12 09:25:16,627 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [37]
2025-05-12 09:25:16,633 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:16,634 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [37]
2025-05-12 09:25:16,636 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:16,640 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [37]
2025-05-12 09:25:16,643 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        orderitems0_.order_id as order_id6_7_0_,
        orderitems0_.id as id1_7_0_,
        orderitems0_.id as id1_7_1_,
        orderitems0_.order_id as order_id6_7_1_,
        orderitems0_.price as price2_7_1_,
        orderitems0_.product_id as product_7_7_1_,
        orderitems0_.product_image_url as product_3_7_1_,
        orderitems0_.product_name as product_4_7_1_,
        orderitems0_.quantity as quantity5_7_1_ 
    from
        order_items orderitems0_ 
    where
        orderitems0_.order_id=?
2025-05-12 09:25:16,646 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [5]
2025-05-12 09:25:16,644 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        orderitems0_.order_id as order_id6_7_0_,
        orderitems0_.id as id1_7_0_,
        orderitems0_.id as id1_7_1_,
        orderitems0_.order_id as order_id6_7_1_,
        orderitems0_.price as price2_7_1_,
        orderitems0_.product_id as product_7_7_1_,
        orderitems0_.product_image_url as product_3_7_1_,
        orderitems0_.product_name as product_4_7_1_,
        orderitems0_.quantity as quantity5_7_1_ 
    from
        order_items orderitems0_ 
    where
        orderitems0_.order_id=?
2025-05-12 09:25:16,647 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [5]
2025-05-12 09:25:16,650 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        imageurls0_.refund_request_id as refund_r1_12_0_,
        imageurls0_.image_url as image_ur2_12_0_ 
    from
        refund_request_images imageurls0_ 
    where
        imageurls0_.refund_request_id=?
2025-05-12 09:25:16,651 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [5]
2025-05-12 09:25:16,654 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        orderitems0_.order_id as order_id6_7_0_,
        orderitems0_.id as id1_7_0_,
        orderitems0_.id as id1_7_1_,
        orderitems0_.order_id as order_id6_7_1_,
        orderitems0_.price as price2_7_1_,
        orderitems0_.product_id as product_7_7_1_,
        orderitems0_.product_image_url as product_3_7_1_,
        orderitems0_.product_name as product_4_7_1_,
        orderitems0_.quantity as quantity5_7_1_ 
    from
        order_items orderitems0_ 
    where
        orderitems0_.order_id=?
2025-05-12 09:25:16,655 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [4]
2025-05-12 09:25:16,657 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        imageurls0_.refund_request_id as refund_r1_12_0_,
        imageurls0_.image_url as image_ur2_12_0_ 
    from
        refund_request_images imageurls0_ 
    where
        imageurls0_.refund_request_id=?
2025-05-12 09:25:16,658 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [5]
2025-05-12 09:25:16,669 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        orderitems0_.order_id as order_id6_7_0_,
        orderitems0_.id as id1_7_0_,
        orderitems0_.id as id1_7_1_,
        orderitems0_.order_id as order_id6_7_1_,
        orderitems0_.price as price2_7_1_,
        orderitems0_.product_id as product_7_7_1_,
        orderitems0_.product_image_url as product_3_7_1_,
        orderitems0_.product_name as product_4_7_1_,
        orderitems0_.quantity as quantity5_7_1_ 
    from
        order_items orderitems0_ 
    where
        orderitems0_.order_id=?
2025-05-12 09:25:16,667 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        orderitems0_.order_id as order_id6_7_0_,
        orderitems0_.id as id1_7_0_,
        orderitems0_.id as id1_7_1_,
        orderitems0_.order_id as order_id6_7_1_,
        orderitems0_.price as price2_7_1_,
        orderitems0_.product_id as product_7_7_1_,
        orderitems0_.product_image_url as product_3_7_1_,
        orderitems0_.product_name as product_4_7_1_,
        orderitems0_.quantity as quantity5_7_1_ 
    from
        order_items orderitems0_ 
    where
        orderitems0_.order_id=?
2025-05-12 09:25:16,673 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [4]
2025-05-12 09:25:16,674 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [3]
2025-05-12 09:25:16,679 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        orderitems0_.order_id as order_id6_7_0_,
        orderitems0_.id as id1_7_0_,
        orderitems0_.id as id1_7_1_,
        orderitems0_.order_id as order_id6_7_1_,
        orderitems0_.price as price2_7_1_,
        orderitems0_.product_id as product_7_7_1_,
        orderitems0_.product_image_url as product_3_7_1_,
        orderitems0_.product_name as product_4_7_1_,
        orderitems0_.quantity as quantity5_7_1_ 
    from
        order_items orderitems0_ 
    where
        orderitems0_.order_id=?
2025-05-12 09:25:16,679 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [2]
2025-05-12 09:25:16,682 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:16,684 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [26]
2025-05-12 09:25:16,690 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        orderitems0_.order_id as order_id6_7_0_,
        orderitems0_.id as id1_7_0_,
        orderitems0_.id as id1_7_1_,
        orderitems0_.order_id as order_id6_7_1_,
        orderitems0_.price as price2_7_1_,
        orderitems0_.product_id as product_7_7_1_,
        orderitems0_.product_image_url as product_3_7_1_,
        orderitems0_.product_name as product_4_7_1_,
        orderitems0_.quantity as quantity5_7_1_ 
    from
        order_items orderitems0_ 
    where
        orderitems0_.order_id=?
2025-05-12 09:25:16,691 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [3]
2025-05-12 09:25:16,692 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:16,693 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [26]
2025-05-12 09:25:16,694 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        orderitems0_.order_id as order_id6_7_0_,
        orderitems0_.id as id1_7_0_,
        orderitems0_.id as id1_7_1_,
        orderitems0_.order_id as order_id6_7_1_,
        orderitems0_.price as price2_7_1_,
        orderitems0_.product_id as product_7_7_1_,
        orderitems0_.product_image_url as product_3_7_1_,
        orderitems0_.product_name as product_4_7_1_,
        orderitems0_.quantity as quantity5_7_1_ 
    from
        order_items orderitems0_ 
    where
        orderitems0_.order_id=?
2025-05-12 09:25:16,694 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:16,695 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [2]
2025-05-12 09:25:16,695 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [26]
2025-05-12 09:25:16,699 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:16,699 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [26]
2025-05-12 09:25:16,699 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        orderitems0_.order_id as order_id6_7_0_,
        orderitems0_.id as id1_7_0_,
        orderitems0_.id as id1_7_1_,
        orderitems0_.order_id as order_id6_7_1_,
        orderitems0_.price as price2_7_1_,
        orderitems0_.product_id as product_7_7_1_,
        orderitems0_.product_image_url as product_3_7_1_,
        orderitems0_.product_name as product_4_7_1_,
        orderitems0_.quantity as quantity5_7_1_ 
    from
        order_items orderitems0_ 
    where
        orderitems0_.order_id=?
2025-05-12 09:25:16,700 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:16,702 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:16,703 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [26]
2025-05-12 09:25:16,705 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        imageurls0_.refund_request_id as refund_r1_12_0_,
        imageurls0_.image_url as image_ur2_12_0_ 
    from
        refund_request_images imageurls0_ 
    where
        imageurls0_.refund_request_id=?
2025-05-12 09:25:16,708 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [8]
2025-05-12 09:25:16,708 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:16,708 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [26]
2025-05-12 09:25:16,710 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        orderitems0_.order_id as order_id6_7_0_,
        orderitems0_.id as id1_7_0_,
        orderitems0_.id as id1_7_1_,
        orderitems0_.order_id as order_id6_7_1_,
        orderitems0_.price as price2_7_1_,
        orderitems0_.product_id as product_7_7_1_,
        orderitems0_.product_image_url as product_3_7_1_,
        orderitems0_.product_name as product_4_7_1_,
        orderitems0_.quantity as quantity5_7_1_ 
    from
        order_items orderitems0_ 
    where
        orderitems0_.order_id=?
2025-05-12 09:25:16,711 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:16,711 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-9] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:16,713 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] RESPONSE: Status=200, Time=670ms
2025-05-12 09:25:16,715 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        imageurls0_.refund_request_id as refund_r1_12_0_,
        imageurls0_.image_url as image_ur2_12_0_ 
    from
        refund_request_images imageurls0_ 
    where
        imageurls0_.refund_request_id=?
2025-05-12 09:25:16,715 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [8]
2025-05-12 09:25:16,721 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-10] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:16,722 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] RESPONSE: Status=200, Time=679ms
2025-05-12 09:25:19,567 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] REQUEST: OPTIONS /products/top
2025-05-12 09:25:19,568 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=*/*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, access-control-request-method=GET, access-control-request-headers=authorization, referer=http://localhost:3000/, origin=http://localhost:3000, connection=keep-alive, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=4
2025-05-12 09:25:19,568 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] RESPONSE: Status=200 (OK - CORS Preflight)
2025-05-12 09:25:19,569 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] REQUEST: OPTIONS /products/top
2025-05-12 09:25:19,569 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=*/*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, access-control-request-method=GET, access-control-request-headers=authorization, referer=http://localhost:3000/, origin=http://localhost:3000, connection=keep-alive, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=4
2025-05-12 09:25:19,569 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] RESPONSE: Status=200 (OK - CORS Preflight)
2025-05-12 09:25:19,570 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] REQUEST: OPTIONS /products/top
2025-05-12 09:25:19,571 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=*/*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, access-control-request-method=GET, access-control-request-headers=authorization, referer=http://localhost:3000/, origin=http://localhost:3000, connection=keep-alive, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=4
2025-05-12 09:25:19,571 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] REQUEST: OPTIONS /products/top
2025-05-12 09:25:19,571 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] RESPONSE: Status=200 (OK - CORS Preflight)
2025-05-12 09:25:19,571 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=*/*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, access-control-request-method=GET, access-control-request-headers=authorization, referer=http://localhost:3000/, origin=http://localhost:3000, connection=keep-alive, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=4
2025-05-12 09:25:19,571 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] RESPONSE: Status=200 (OK - CORS Preflight)
2025-05-12 09:25:19,572 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] REQUEST: GET /products/top
2025-05-12 09:25:19,573 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=0
2025-05-12 09:25:19,573 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-3] Securing GET /products/top?limit=4&currentUserId=1
2025-05-12 09:25:19,573 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-3] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:19,574 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Processing request to URL: /products/top, Method: GET
2025-05-12 09:25:19,574 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] REQUEST: OPTIONS /products/search
2025-05-12 09:25:19,574 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=*/*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, access-control-request-method=GET, access-control-request-headers=authorization, referer=http://localhost:3000/, origin=http://localhost:3000, connection=keep-alive, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=4
2025-05-12 09:25:19,574 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:19,575 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Found Authorization header with Bearer token
2025-05-12 09:25:19,575 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:19,575 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] REQUEST: OPTIONS /products
2025-05-12 09:25:19,576 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=*/*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, access-control-request-method=GET, access-control-request-headers=authorization, referer=http://localhost:3000/, origin=http://localhost:3000, connection=keep-alive, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=4
2025-05-12 09:25:19,576 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] RESPONSE: Status=200 (OK - CORS Preflight)
2025-05-12 09:25:19,577 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-3] JWT token validation successful
2025-05-12 09:25:19,577 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] REQUEST: OPTIONS /categories
2025-05-12 09:25:19,577 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=*/*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, access-control-request-method=GET, access-control-request-headers=authorization, referer=http://localhost:3000/, origin=http://localhost:3000, connection=keep-alive, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=4
2025-05-12 09:25:19,577 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] RESPONSE: Status=200 (OK - CORS Preflight)
2025-05-12 09:25:19,577 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] REQUEST: GET /products/top
2025-05-12 09:25:19,577 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] REQUEST: GET /products/top
2025-05-12 09:25:19,577 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-3] Extracted username from JWT token: a1234
2025-05-12 09:25:19,577 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=0
2025-05-12 09:25:19,575 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] RESPONSE: Status=200 (OK - CORS Preflight)
2025-05-12 09:25:19,577 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=0
2025-05-12 09:25:19,578 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-2] Securing GET /products/top?limit=4&currentUserId=1
2025-05-12 09:25:19,578 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-2] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:19,577 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Valid JWT token found for user: a1234
2025-05-12 09:25:19,577 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-9] Securing GET /products/top?limit=4&currentUserId=1
2025-05-12 09:25:19,578 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Processing request to URL: /products/top, Method: GET
2025-05-12 09:25:19,578 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-9] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:19,579 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] REQUEST: GET /products/top
2025-05-12 09:25:19,579 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:19,579 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=0
2025-05-12 09:25:19,579 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Found Authorization header with Bearer token
2025-05-12 09:25:19,579 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:19,579 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-6] Securing GET /products/top?limit=4&currentUserId=1
2025-05-12 09:25:19,579 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-6] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:19,579 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] REQUEST: GET /products/top
2025-05-12 09:25:19,579 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=0
2025-05-12 09:25:19,579 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-7] Securing GET /products/top?limit=4&currentUserId=1
2025-05-12 09:25:19,579 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Processing request to URL: /products/top, Method: GET
2025-05-12 09:25:19,579 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Processing request to URL: /products/top, Method: GET
2025-05-12 09:25:19,578 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] REQUEST: GET /products/top
2025-05-12 09:25:19,579 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-7] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:19,579 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:19,579 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=0
2025-05-12 09:25:19,580 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] REQUEST: GET /products/top
2025-05-12 09:25:19,580 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=0
2025-05-12 09:25:19,580 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-5] Securing GET /products/top?limit=4&currentUserId=1
2025-05-12 09:25:19,581 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-1] Securing GET /products/top?limit=4&currentUserId=1
2025-05-12 09:25:19,581 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-5] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:19,579 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:19,581 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-1] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:19,580 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Found Authorization header with Bearer token
2025-05-12 09:25:19,582 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:19,580 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-2] JWT token validation successful
2025-05-12 09:25:19,580 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] REQUEST: OPTIONS /products/recommended
2025-05-12 09:25:19,582 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=*/*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, access-control-request-method=GET, access-control-request-headers=authorization, referer=http://localhost:3000/, origin=http://localhost:3000, connection=keep-alive, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=4
2025-05-12 09:25:19,581 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Found Authorization header with Bearer token
2025-05-12 09:25:19,583 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:19,583 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] RESPONSE: Status=200 (OK - CORS Preflight)
2025-05-12 09:25:19,584 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Processing request to URL: /products/top, Method: GET
2025-05-12 09:25:19,584 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Processing request to URL: /products/top, Method: GET
2025-05-12 09:25:19,586 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:19,586 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:19,586 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Found Authorization header with Bearer token
2025-05-12 09:25:19,587 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:19,585 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] REQUEST: GET /products
2025-05-12 09:25:19,584 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-9] JWT token validation successful
2025-05-12 09:25:19,588 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=0
2025-05-12 09:25:19,588 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-4] Securing GET /products?keyword=&category=&page=0&size=12&sort=newest&currentUserId=1
2025-05-12 09:25:19,587 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-7] JWT token validation successful
2025-05-12 09:25:19,585 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] REQUEST: GET /products/top
2025-05-12 09:25:19,589 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-4] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:19,585 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-2] Extracted username from JWT token: a1234
2025-05-12 09:25:19,585 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-6] JWT token validation successful
2025-05-12 09:25:19,589 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Valid JWT token found for user: a1234
2025-05-12 09:25:19,589 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-6] Extracted username from JWT token: a1234
2025-05-12 09:25:19,590 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Valid JWT token found for user: a1234
2025-05-12 09:25:19,586 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Processing request to URL: /products/top, Method: GET
2025-05-12 09:25:19,590 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:19,586 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Found Authorization header with Bearer token
2025-05-12 09:25:19,586 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:19,588 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-7] Extracted username from JWT token: a1234
2025-05-12 09:25:19,592 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Valid JWT token found for user: a1234
2025-05-12 09:25:19,588 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=0
2025-05-12 09:25:19,592 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:19,592 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:19,592 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-8] Securing GET /products/top?limit=4&currentUserId=1
2025-05-12 09:25:19,593 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:19,593 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-8] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:19,588 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-9] Extracted username from JWT token: a1234
2025-05-12 09:25:19,591 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Found Authorization header with Bearer token
2025-05-12 09:25:19,594 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Valid JWT token found for user: a1234
2025-05-12 09:25:19,591 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Processing request to URL: /products, Method: GET
2025-05-12 09:25:19,595 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:19,596 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:19,592 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:19,596 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:19,593 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:19,596 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Found Authorization header with Bearer token
2025-05-12 09:25:19,597 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:19,599 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:19,597 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:19,594 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:19,599 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:19,600 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-5] JWT token validation successful
2025-05-12 09:25:19,601 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:19,595 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Processing request to URL: /products/top, Method: GET
2025-05-12 09:25:19,602 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:19,602 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Found Authorization header with Bearer token
2025-05-12 09:25:19,602 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:19,602 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:19,598 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-1] JWT token validation successful
2025-05-12 09:25:19,603 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-8] JWT token validation successful
2025-05-12 09:25:19,598 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:19,604 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-4] JWT token validation successful
2025-05-12 09:25:19,601 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:19,604 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-4] Extracted username from JWT token: a1234
2025-05-12 09:25:19,605 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Valid JWT token found for user: a1234
2025-05-12 09:25:19,605 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:19,606 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:19,602 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-5] Extracted username from JWT token: a1234
2025-05-12 09:25:19,603 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] User authorities: [ROLE_USER]
2025-05-12 09:25:19,604 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-8] Extracted username from JWT token: a1234
2025-05-12 09:25:19,607 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:19,607 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@36998963, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:19,607 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Valid JWT token found for user: a1234
2025-05-12 09:25:19,607 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:19,608 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-3] Secured GET /products/top?limit=4&currentUserId=1
2025-05-12 09:25:19,608 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:19,604 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-1] Extracted username from JWT token: a1234
2025-05-12 09:25:19,608 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] User authorities: [ROLE_USER]
2025-05-12 09:25:19,607 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Valid JWT token found for user: a1234
2025-05-12 09:25:19,608 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:19,608 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Valid JWT token found for user: a1234
2025-05-12 09:25:19,606 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:19,609 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:19,610 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:19,607 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:19,610 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:19,610 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:19,611 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:19,611 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:19,608 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@47e370a9, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:19,609 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] ENTERING getTopProducts with args: [4]
2025-05-12 09:25:19,611 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-2] Secured GET /products/top?limit=4&currentUserId=1
2025-05-12 09:25:19,612 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        product0_.id as id1_11_,
        product0_.average_rating as average_2_11_,
        product0_.category_id as categor14_11_,
        product0_.created_at as created_3_11_,
        product0_.description as descript4_11_,
        product0_.discount_percentage as discount5_11_,
        product0_.image_url as image_ur6_11_,
        product0_.is_featured as is_featu7_11_,
        product0_.name as name8_11_,
        product0_.price as price9_11_,
        product0_.review_count as review_10_11_,
        product0_.sold_count as sold_co11_11_,
        product0_.stock as stock12_11_,
        product0_.updated_at as updated13_11_ 
    from
        products product0_ 
    order by
        product0_.average_rating desc limit ?
2025-05-12 09:25:19,612 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] ENTERING getTopProducts with args: [4]
2025-05-12 09:25:19,613 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:19,614 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:19,614 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        product0_.id as id1_11_,
        product0_.average_rating as average_2_11_,
        product0_.category_id as categor14_11_,
        product0_.created_at as created_3_11_,
        product0_.description as descript4_11_,
        product0_.discount_percentage as discount5_11_,
        product0_.image_url as image_ur6_11_,
        product0_.is_featured as is_featu7_11_,
        product0_.name as name8_11_,
        product0_.price as price9_11_,
        product0_.review_count as review_10_11_,
        product0_.sold_count as sold_co11_11_,
        product0_.stock as stock12_11_,
        product0_.updated_at as updated13_11_ 
    from
        products product0_ 
    order by
        product0_.average_rating desc limit ?
2025-05-12 09:25:19,613 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:19,614 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:19,617 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] User authorities: [ROLE_USER]
2025-05-12 09:25:19,618 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:19,618 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@6256c369, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:19,618 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-6] Secured GET /products/top?limit=4&currentUserId=1
2025-05-12 09:25:19,617 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:19,615 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:19,621 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] User authorities: [ROLE_USER]
2025-05-12 09:25:19,616 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:19,620 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,616 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:19,622 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [6]
2025-05-12 09:25:19,621 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:19,622 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] User authorities: [ROLE_USER]
2025-05-12 09:25:19,622 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:19,622 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:19,622 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@5832fc5e, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:19,623 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-8] Secured GET /products/top?limit=4&currentUserId=1
2025-05-12 09:25:19,618 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:19,621 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:19,621 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] User authorities: [ROLE_USER]
2025-05-12 09:25:19,624 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:19,621 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] ENTERING getTopProducts with args: [4]
2025-05-12 09:25:19,625 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] ENTERING getTopProducts with args: [4]
2025-05-12 09:25:19,625 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        product0_.id as id1_11_,
        product0_.average_rating as average_2_11_,
        product0_.category_id as categor14_11_,
        product0_.created_at as created_3_11_,
        product0_.description as descript4_11_,
        product0_.discount_percentage as discount5_11_,
        product0_.image_url as image_ur6_11_,
        product0_.is_featured as is_featu7_11_,
        product0_.name as name8_11_,
        product0_.price as price9_11_,
        product0_.review_count as review_10_11_,
        product0_.sold_count as sold_co11_11_,
        product0_.stock as stock12_11_,
        product0_.updated_at as updated13_11_ 
    from
        products product0_ 
    order by
        product0_.average_rating desc limit ?
2025-05-12 09:25:19,624 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:19,624 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@ecfb75f, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:19,626 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@2b9b5552, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:19,627 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:19,624 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:19,627 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-7] Secured GET /products/top?limit=4&currentUserId=1
2025-05-12 09:25:19,627 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-9] Secured GET /products/top?limit=4&currentUserId=1
2025-05-12 09:25:19,629 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:19,627 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,629 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:19,627 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:19,626 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        product0_.id as id1_11_,
        product0_.average_rating as average_2_11_,
        product0_.category_id as categor14_11_,
        product0_.created_at as created_3_11_,
        product0_.description as descript4_11_,
        product0_.discount_percentage as discount5_11_,
        product0_.image_url as image_ur6_11_,
        product0_.is_featured as is_featu7_11_,
        product0_.name as name8_11_,
        product0_.price as price9_11_,
        product0_.review_count as review_10_11_,
        product0_.sold_count as sold_co11_11_,
        product0_.stock as stock12_11_,
        product0_.updated_at as updated13_11_ 
    from
        products product0_ 
    order by
        product0_.average_rating desc limit ?
2025-05-12 09:25:19,630 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] User authorities: [ROLE_USER]
2025-05-12 09:25:19,631 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:19,631 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@768733a7, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:19,631 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-7] ENTERING getTopProducts with args: [4]
2025-05-12 09:25:19,631 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-4] Secured GET /products?keyword=&category=&page=0&size=12&sort=newest&currentUserId=1
2025-05-12 09:25:19,631 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,633 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [6]
2025-05-12 09:25:19,628 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,633 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [6]
2025-05-12 09:25:19,634 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [10]
2025-05-12 09:25:19,632 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        product0_.id as id1_11_,
        product0_.average_rating as average_2_11_,
        product0_.category_id as categor14_11_,
        product0_.created_at as created_3_11_,
        product0_.description as descript4_11_,
        product0_.discount_percentage as discount5_11_,
        product0_.image_url as image_ur6_11_,
        product0_.is_featured as is_featu7_11_,
        product0_.name as name8_11_,
        product0_.price as price9_11_,
        product0_.review_count as review_10_11_,
        product0_.sold_count as sold_co11_11_,
        product0_.stock as stock12_11_,
        product0_.updated_at as updated13_11_ 
    from
        products product0_ 
    order by
        product0_.average_rating desc limit ?
2025-05-12 09:25:19,631 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-9] ENTERING getTopProducts with args: [4]
2025-05-12 09:25:19,636 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        product0_.id as id1_11_,
        product0_.average_rating as average_2_11_,
        product0_.category_id as categor14_11_,
        product0_.created_at as created_3_11_,
        product0_.description as descript4_11_,
        product0_.discount_percentage as discount5_11_,
        product0_.image_url as image_ur6_11_,
        product0_.is_featured as is_featu7_11_,
        product0_.name as name8_11_,
        product0_.price as price9_11_,
        product0_.review_count as review_10_11_,
        product0_.sold_count as sold_co11_11_,
        product0_.stock as stock12_11_,
        product0_.updated_at as updated13_11_ 
    from
        products product0_ 
    order by
        product0_.average_rating desc limit ?
2025-05-12 09:25:19,633 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-4] ENTERING getAllProducts
2025-05-12 09:25:19,636 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,636 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,638 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [10]
2025-05-12 09:25:19,639 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [7]
2025-05-12 09:25:19,639 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:19,640 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] User authorities: [ROLE_USER]
2025-05-12 09:25:19,640 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:19,641 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] User authorities: [ROLE_USER]
2025-05-12 09:25:19,641 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:19,641 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@44dbc4c5, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:19,641 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-5] Secured GET /products/top?limit=4&currentUserId=1
2025-05-12 09:25:19,641 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,641 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,642 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:19,642 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [7]
2025-05-12 09:25:19,642 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [10]
2025-05-12 09:25:19,642 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@7e13fe13, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:19,642 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] ENTERING getTopProducts with args: [4]
2025-05-12 09:25:19,641 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,643 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-1] Secured GET /products/top?limit=4&currentUserId=1
2025-05-12 09:25:19,643 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [14]
2025-05-12 09:25:19,644 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,645 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [14]
2025-05-12 09:25:19,645 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,644 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,647 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [6]
2025-05-12 09:25:19,647 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [7]
2025-05-12 09:25:19,647 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] ENTERING getTopProducts with args: [4]
2025-05-12 09:25:19,644 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,646 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        product0_.id as id1_11_,
        product0_.average_rating as average_2_11_,
        product0_.category_id as categor14_11_,
        product0_.created_at as created_3_11_,
        product0_.description as descript4_11_,
        product0_.discount_percentage as discount5_11_,
        product0_.image_url as image_ur6_11_,
        product0_.is_featured as is_featu7_11_,
        product0_.name as name8_11_,
        product0_.price as price9_11_,
        product0_.review_count as review_10_11_,
        product0_.sold_count as sold_co11_11_,
        product0_.stock as stock12_11_,
        product0_.updated_at as updated13_11_ 
    from
        products product0_ 
    order by
        product0_.average_rating desc limit ?
2025-05-12 09:25:19,650 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [6]
2025-05-12 09:25:19,653 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,649 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        product0_.id as id1_11_,
        product0_.average_rating as average_2_11_,
        product0_.category_id as categor14_11_,
        product0_.created_at as created_3_11_,
        product0_.description as descript4_11_,
        product0_.discount_percentage as discount5_11_,
        product0_.image_url as image_ur6_11_,
        product0_.is_featured as is_featu7_11_,
        product0_.name as name8_11_,
        product0_.price as price9_11_,
        product0_.review_count as review_10_11_,
        product0_.sold_count as sold_co11_11_,
        product0_.stock as stock12_11_,
        product0_.updated_at as updated13_11_ 
    from
        products product0_ 
    order by
        product0_.average_rating desc limit ?
2025-05-12 09:25:19,653 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,654 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [16]
2025-05-12 09:25:19,655 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [10]
2025-05-12 09:25:19,653 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,654 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,654 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,657 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [10]
2025-05-12 09:25:19,658 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [14]
2025-05-12 09:25:19,659 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [16]
2025-05-12 09:25:19,659 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] EXITING getTopProducts with result: [<200 OK OK,[Product(id=24, name=iPhone 14 Pro Max, description=iPhone 14 Pro Max 128GB, màn hình 6.7 inch Super Retina XDR, chip A16 Bionic, price=2.899E7, stock=50, imageUrl=https://example.com/images/products/iphone14promax.jpg, category=Category(id=6, name=Điện thoại iPhone, description=Các dòng điện thoại iPhone, imageUrl=https://example.com/images/categories/iphone.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=5.0, reviewCount=1, soldCount=200, isFeatured=true, discountPercentage=5.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-05-01T12:57:05), Product(id=37, name=MacBook Pro 16 M2 Max, description=MacBook Pro 16 inch M2 Max 32GB RAM, 1TB SSD, price=6.999E7, stock=8, imageUrl=https://example.com/images/products/macbookpro16.jpg, category=Category(id=10, name=Laptop Apple, description=Máy tính xách tay của Apple, imageUrl=https://example.com/images/categories/mac.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=5.0, reviewCount=15, soldCount=20, isFeatured=false, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-22T22:59:45), Product(id=28, name=Samsung Galaxy S23 Ultra, description=Samsung Galaxy S23 Ultra 256GB, màn hình 6.8 inch Dynamic AMOLED 2X, chip Snapdragon 8 Gen 2, price=2.599E7, stock=30, imageUrl=https://example.com/images/products/s23ultra.jpg, category=Category(id=7, name=Điện thoại Samsung, description=Các dòng điện thoại Samsung, imageUrl=https://example.com/images/categories/samsung.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.9, reviewCount=85, soldCount=120, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=35, name=MacBook Pro 14 M2 Pro, description=MacBook Pro 14 inch M2 Pro 16GB RAM, 512GB SSD, price=4.599E7, stock=15, imageUrl=https://example.com/images/products/macbookpro14.jpg, category=Category(id=10, name=Laptop Apple, description=Máy tính xách tay của Apple, imageUrl=https://example.com/images/categories/mac.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.9, reviewCount=25, soldCount=30, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33)],[]>]
2025-05-12 09:25:19,661 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] Method getTopProducts executed in 52 ms
2025-05-12 09:25:19,663 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,666 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [16]
2025-05-12 09:25:19,663 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,666 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,663 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,667 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [7]
2025-05-12 09:25:19,667 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [24]
2025-05-12 09:25:19,667 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [7]
2025-05-12 09:25:19,666 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] EXITING getTopProducts with result: [<200 OK OK,[Product(id=24, name=iPhone 14 Pro Max, description=iPhone 14 Pro Max 128GB, màn hình 6.7 inch Super Retina XDR, chip A16 Bionic, price=2.899E7, stock=50, imageUrl=https://example.com/images/products/iphone14promax.jpg, category=Category(id=6, name=Điện thoại iPhone, description=Các dòng điện thoại iPhone, imageUrl=https://example.com/images/categories/iphone.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=5.0, reviewCount=1, soldCount=200, isFeatured=true, discountPercentage=5.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-05-01T12:57:05), Product(id=37, name=MacBook Pro 16 M2 Max, description=MacBook Pro 16 inch M2 Max 32GB RAM, 1TB SSD, price=6.999E7, stock=8, imageUrl=https://example.com/images/products/macbookpro16.jpg, category=Category(id=10, name=Laptop Apple, description=Máy tính xách tay của Apple, imageUrl=https://example.com/images/categories/mac.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=5.0, reviewCount=15, soldCount=20, isFeatured=false, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-22T22:59:45), Product(id=28, name=Samsung Galaxy S23 Ultra, description=Samsung Galaxy S23 Ultra 256GB, màn hình 6.8 inch Dynamic AMOLED 2X, chip Snapdragon 8 Gen 2, price=2.599E7, stock=30, imageUrl=https://example.com/images/products/s23ultra.jpg, category=Category(id=7, name=Điện thoại Samsung, description=Các dòng điện thoại Samsung, imageUrl=https://example.com/images/categories/samsung.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.9, reviewCount=85, soldCount=120, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=35, name=MacBook Pro 14 M2 Pro, description=MacBook Pro 14 inch M2 Pro 16GB RAM, 512GB SSD, price=4.599E7, stock=15, imageUrl=https://example.com/images/products/macbookpro14.jpg, category=Category(id=10, name=Laptop Apple, description=Máy tính xách tay của Apple, imageUrl=https://example.com/images/categories/mac.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.9, reviewCount=25, soldCount=30, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33)],[]>]
2025-05-12 09:25:19,668 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] Method getTopProducts executed in 56 ms
2025-05-12 09:25:19,669 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,670 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,671 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [24]
2025-05-12 09:25:19,671 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [14]
2025-05-12 09:25:19,671 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,671 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] EXITING getTopProducts with result: [<200 OK OK,[Product(id=24, name=iPhone 14 Pro Max, description=iPhone 14 Pro Max 128GB, màn hình 6.7 inch Super Retina XDR, chip A16 Bionic, price=2.899E7, stock=50, imageUrl=https://example.com/images/products/iphone14promax.jpg, category=Category(id=6, name=Điện thoại iPhone, description=Các dòng điện thoại iPhone, imageUrl=https://example.com/images/categories/iphone.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=5.0, reviewCount=1, soldCount=200, isFeatured=true, discountPercentage=5.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-05-01T12:57:05), Product(id=37, name=MacBook Pro 16 M2 Max, description=MacBook Pro 16 inch M2 Max 32GB RAM, 1TB SSD, price=6.999E7, stock=8, imageUrl=https://example.com/images/products/macbookpro16.jpg, category=Category(id=10, name=Laptop Apple, description=Máy tính xách tay của Apple, imageUrl=https://example.com/images/categories/mac.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=5.0, reviewCount=15, soldCount=20, isFeatured=false, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-22T22:59:45), Product(id=28, name=Samsung Galaxy S23 Ultra, description=Samsung Galaxy S23 Ultra 256GB, màn hình 6.8 inch Dynamic AMOLED 2X, chip Snapdragon 8 Gen 2, price=2.599E7, stock=30, imageUrl=https://example.com/images/products/s23ultra.jpg, category=Category(id=7, name=Điện thoại Samsung, description=Các dòng điện thoại Samsung, imageUrl=https://example.com/images/categories/samsung.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.9, reviewCount=85, soldCount=120, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=35, name=MacBook Pro 14 M2 Pro, description=MacBook Pro 14 inch M2 Pro 16GB RAM, 512GB SSD, price=4.599E7, stock=15, imageUrl=https://example.com/images/products/macbookpro14.jpg, category=Category(id=10, name=Laptop Apple, description=Máy tính xách tay của Apple, imageUrl=https://example.com/images/categories/mac.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.9, reviewCount=25, soldCount=30, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33)],[]>]
2025-05-12 09:25:19,673 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] Method getTopProducts executed in 52 ms
2025-05-12 09:25:19,670 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,675 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [24]
2025-05-12 09:25:19,674 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [14]
2025-05-12 09:25:19,675 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,676 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [24]
2025-05-12 09:25:19,676 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,677 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:19,677 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,679 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [24]
2025-05-12 09:25:19,679 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [16]
2025-05-12 09:25:19,679 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:19,678 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,681 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [16]
2025-05-12 09:25:19,682 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,681 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:19,684 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [24]
2025-05-12 09:25:19,685 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:19,684 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] EXITING getTopProducts with result: [<200 OK OK,[Product(id=24, name=iPhone 14 Pro Max, description=iPhone 14 Pro Max 128GB, màn hình 6.7 inch Super Retina XDR, chip A16 Bionic, price=2.899E7, stock=50, imageUrl=https://example.com/images/products/iphone14promax.jpg, category=Category(id=6, name=Điện thoại iPhone, description=Các dòng điện thoại iPhone, imageUrl=https://example.com/images/categories/iphone.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=5.0, reviewCount=1, soldCount=200, isFeatured=true, discountPercentage=5.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-05-01T12:57:05), Product(id=37, name=MacBook Pro 16 M2 Max, description=MacBook Pro 16 inch M2 Max 32GB RAM, 1TB SSD, price=6.999E7, stock=8, imageUrl=https://example.com/images/products/macbookpro16.jpg, category=Category(id=10, name=Laptop Apple, description=Máy tính xách tay của Apple, imageUrl=https://example.com/images/categories/mac.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=5.0, reviewCount=15, soldCount=20, isFeatured=false, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-22T22:59:45), Product(id=28, name=Samsung Galaxy S23 Ultra, description=Samsung Galaxy S23 Ultra 256GB, màn hình 6.8 inch Dynamic AMOLED 2X, chip Snapdragon 8 Gen 2, price=2.599E7, stock=30, imageUrl=https://example.com/images/products/s23ultra.jpg, category=Category(id=7, name=Điện thoại Samsung, description=Các dòng điện thoại Samsung, imageUrl=https://example.com/images/categories/samsung.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.9, reviewCount=85, soldCount=120, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=35, name=MacBook Pro 14 M2 Pro, description=MacBook Pro 14 inch M2 Pro 16GB RAM, 512GB SSD, price=4.599E7, stock=15, imageUrl=https://example.com/images/products/macbookpro14.jpg, category=Category(id=10, name=Laptop Apple, description=Máy tính xách tay của Apple, imageUrl=https://example.com/images/categories/mac.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.9, reviewCount=25, soldCount=30, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33)],[]>]
2025-05-12 09:25:19,685 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] Method getTopProducts executed in 60 ms
2025-05-12 09:25:19,686 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:19,687 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:19,688 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,689 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [37]
2025-05-12 09:25:19,688 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-7] EXITING getTopProducts with result: [<200 OK OK,[Product(id=24, name=iPhone 14 Pro Max, description=iPhone 14 Pro Max 128GB, màn hình 6.7 inch Super Retina XDR, chip A16 Bionic, price=2.899E7, stock=50, imageUrl=https://example.com/images/products/iphone14promax.jpg, category=Category(id=6, name=Điện thoại iPhone, description=Các dòng điện thoại iPhone, imageUrl=https://example.com/images/categories/iphone.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=5.0, reviewCount=1, soldCount=200, isFeatured=true, discountPercentage=5.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-05-01T12:57:05), Product(id=37, name=MacBook Pro 16 M2 Max, description=MacBook Pro 16 inch M2 Max 32GB RAM, 1TB SSD, price=6.999E7, stock=8, imageUrl=https://example.com/images/products/macbookpro16.jpg, category=Category(id=10, name=Laptop Apple, description=Máy tính xách tay của Apple, imageUrl=https://example.com/images/categories/mac.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=5.0, reviewCount=15, soldCount=20, isFeatured=false, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-22T22:59:45), Product(id=28, name=Samsung Galaxy S23 Ultra, description=Samsung Galaxy S23 Ultra 256GB, màn hình 6.8 inch Dynamic AMOLED 2X, chip Snapdragon 8 Gen 2, price=2.599E7, stock=30, imageUrl=https://example.com/images/products/s23ultra.jpg, category=Category(id=7, name=Điện thoại Samsung, description=Các dòng điện thoại Samsung, imageUrl=https://example.com/images/categories/samsung.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.9, reviewCount=85, soldCount=120, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=35, name=MacBook Pro 14 M2 Pro, description=MacBook Pro 14 inch M2 Pro 16GB RAM, 512GB SSD, price=4.599E7, stock=15, imageUrl=https://example.com/images/products/macbookpro14.jpg, category=Category(id=10, name=Laptop Apple, description=Máy tính xách tay của Apple, imageUrl=https://example.com/images/categories/mac.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.9, reviewCount=25, soldCount=30, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33)],[]>]
2025-05-12 09:25:19,689 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-7] Method getTopProducts executed in 58 ms
2025-05-12 09:25:19,690 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,690 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [24]
2025-05-12 09:25:19,690 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,691 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,691 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [24]
2025-05-12 09:25:19,691 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [37]
2025-05-12 09:25:19,689 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,693 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,695 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,695 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [24]
2025-05-12 09:25:19,696 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [37]
2025-05-12 09:25:19,696 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [37]
2025-05-12 09:25:19,695 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,696 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,696 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [37]
2025-05-12 09:25:19,698 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [24]
2025-05-12 09:25:19,699 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,699 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,699 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,700 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:19,701 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:19,701 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [28]
2025-05-12 09:25:19,701 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [28]
2025-05-12 09:25:19,701 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [37]
2025-05-12 09:25:19,703 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,703 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,703 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:19,703 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,703 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,703 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [28]
2025-05-12 09:25:19,703 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [37]
2025-05-12 09:25:19,703 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:19,703 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [28]
2025-05-12 09:25:19,704 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [28]
2025-05-12 09:25:19,706 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,706 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,708 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:19,708 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [37]
2025-05-12 09:25:19,709 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,706 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,709 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [37]
2025-05-12 09:25:19,711 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:19,710 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,712 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,712 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [28]
2025-05-12 09:25:19,712 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [37]
2025-05-12 09:25:19,713 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,714 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:19,713 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,713 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,715 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [28]
2025-05-12 09:25:19,713 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,714 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,715 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:19,715 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:19,715 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [28]
2025-05-12 09:25:19,717 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,717 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,718 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,718 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [28]
2025-05-12 09:25:19,718 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-2] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:19,719 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] RESPONSE: Status=200, Time=141ms
2025-05-12 09:25:19,719 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [28]
2025-05-12 09:25:19,720 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-6] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:19,721 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:19,722 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] REQUEST: GET /products/search
2025-05-12 09:25:19,723 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] RESPONSE: Status=200, Time=144ms
2025-05-12 09:25:19,723 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=0
2025-05-12 09:25:19,724 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-10] Securing GET /products/search?page=0&size=12&sort=newest&currentUserId=1
2025-05-12 09:25:19,721 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,726 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-10] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:19,724 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        product0_.id as id1_11_,
        product0_.average_rating as average_2_11_,
        product0_.category_id as categor14_11_,
        product0_.created_at as created_3_11_,
        product0_.description as descript4_11_,
        product0_.discount_percentage as discount5_11_,
        product0_.image_url as image_ur6_11_,
        product0_.is_featured as is_featu7_11_,
        product0_.name as name8_11_,
        product0_.price as price9_11_,
        product0_.review_count as review_10_11_,
        product0_.sold_count as sold_co11_11_,
        product0_.stock as stock12_11_,
        product0_.updated_at as updated13_11_ 
    from
        products product0_
2025-05-12 09:25:19,726 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [6]
2025-05-12 09:25:19,723 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,728 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] REQUEST: GET /products/recommended
2025-05-12 09:25:19,728 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:19,729 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-3] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:19,728 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Processing request to URL: /products/search, Method: GET
2025-05-12 09:25:19,725 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,731 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:19,729 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=0
2025-05-12 09:25:19,732 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-2] Securing GET /products/recommended?currentUserId=1
2025-05-12 09:25:19,732 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-2] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:19,732 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,733 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [6]
2025-05-12 09:25:19,730 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:19,731 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,734 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Found Authorization header with Bearer token
2025-05-12 09:25:19,735 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:19,735 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:19,731 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,731 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] RESPONSE: Status=200, Time=158ms
2025-05-12 09:25:19,736 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [6]
2025-05-12 09:25:19,733 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Processing request to URL: /products/recommended, Method: GET
2025-05-12 09:25:19,738 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:19,739 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Found Authorization header with Bearer token
2025-05-12 09:25:19,739 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:19,737 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,742 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-8] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:19,743 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [10]
2025-05-12 09:25:19,744 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] RESPONSE: Status=200, Time=152ms
2025-05-12 09:25:19,741 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,742 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-2] JWT token validation successful
2025-05-12 09:25:19,745 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [10]
2025-05-12 09:25:19,744 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] REQUEST: GET /categories
2025-05-12 09:25:19,745 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=0
2025-05-12 09:25:19,743 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,745 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,746 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [6]
2025-05-12 09:25:19,747 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [7]
2025-05-12 09:25:19,747 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,748 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-6] Securing GET /categories?currentUserId=1
2025-05-12 09:25:19,747 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,750 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-2] Extracted username from JWT token: a1234
2025-05-12 09:25:19,750 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Valid JWT token found for user: a1234
2025-05-12 09:25:19,750 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:19,747 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,751 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [7]
2025-05-12 09:25:19,751 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [7]
2025-05-12 09:25:19,748 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,753 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-6] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:19,752 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [10]
2025-05-12 09:25:19,749 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-10] JWT token validation successful
2025-05-12 09:25:19,751 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,754 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [8]
2025-05-12 09:25:19,755 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-7] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:19,754 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-10] Extracted username from JWT token: a1234
2025-05-12 09:25:19,762 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Valid JWT token found for user: a1234
2025-05-12 09:25:19,757 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:19,758 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Processing request to URL: /categories, Method: GET
2025-05-12 09:25:19,760 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,763 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:19,764 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [14]
2025-05-12 09:25:19,762 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] RESPONSE: Status=200, Time=183ms
2025-05-12 09:25:19,764 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,762 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:19,765 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Found Authorization header with Bearer token
2025-05-12 09:25:19,765 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:19,765 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [10]
2025-05-12 09:25:19,765 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,764 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,766 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [7]
2025-05-12 09:25:19,766 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:19,767 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-6] JWT token validation successful
2025-05-12 09:25:19,767 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,767 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:19,768 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,770 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [16]
2025-05-12 09:25:19,771 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [14]
2025-05-12 09:25:19,773 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,774 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [14]
2025-05-12 09:25:19,774 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] EXITING getTopProducts with result: [<200 OK OK,[Product(id=24, name=iPhone 14 Pro Max, description=iPhone 14 Pro Max 128GB, màn hình 6.7 inch Super Retina XDR, chip A16 Bionic, price=2.899E7, stock=50, imageUrl=https://example.com/images/products/iphone14promax.jpg, category=Category(id=6, name=Điện thoại iPhone, description=Các dòng điện thoại iPhone, imageUrl=https://example.com/images/categories/iphone.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=5.0, reviewCount=1, soldCount=200, isFeatured=true, discountPercentage=5.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-05-01T12:57:05), Product(id=37, name=MacBook Pro 16 M2 Max, description=MacBook Pro 16 inch M2 Max 32GB RAM, 1TB SSD, price=6.999E7, stock=8, imageUrl=https://example.com/images/products/macbookpro16.jpg, category=Category(id=10, name=Laptop Apple, description=Máy tính xách tay của Apple, imageUrl=https://example.com/images/categories/mac.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=5.0, reviewCount=15, soldCount=20, isFeatured=false, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-22T22:59:45), Product(id=28, name=Samsung Galaxy S23 Ultra, description=Samsung Galaxy S23 Ultra 256GB, màn hình 6.8 inch Dynamic AMOLED 2X, chip Snapdragon 8 Gen 2, price=2.599E7, stock=30, imageUrl=https://example.com/images/products/s23ultra.jpg, category=Category(id=7, name=Điện thoại Samsung, description=Các dòng điện thoại Samsung, imageUrl=https://example.com/images/categories/samsung.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.9, reviewCount=85, soldCount=120, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=35, name=MacBook Pro 14 M2 Pro, description=MacBook Pro 14 inch M2 Pro 16GB RAM, 512GB SSD, price=4.599E7, stock=15, imageUrl=https://example.com/images/products/macbookpro14.jpg, category=Category(id=10, name=Laptop Apple, description=Máy tính xách tay của Apple, imageUrl=https://example.com/images/categories/mac.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.9, reviewCount=25, soldCount=30, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33)],[]>]
2025-05-12 09:25:19,776 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:19,775 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [14]
2025-05-12 09:25:19,776 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,777 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] User authorities: [ROLE_USER]
2025-05-12 09:25:19,778 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:19,777 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-6] Extracted username from JWT token: a1234
2025-05-12 09:25:19,778 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:19,777 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,778 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@210fb320, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:19,779 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-2] Secured GET /products/recommended?currentUserId=1
2025-05-12 09:25:19,779 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:19,779 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [16]
2025-05-12 09:25:19,778 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Valid JWT token found for user: a1234
2025-05-12 09:25:19,777 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] Method getTopProducts executed in 135 ms
2025-05-12 09:25:19,780 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [16]
2025-05-12 09:25:19,782 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] ENTERING getRecommendedProducts with args: [10]
2025-05-12 09:25:19,782 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,783 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,785 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [24]
2025-05-12 09:25:19,784 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [16]
2025-05-12 09:25:19,786 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-9] EXITING getTopProducts with result: [<200 OK OK,[Product(id=24, name=iPhone 14 Pro Max, description=iPhone 14 Pro Max 128GB, màn hình 6.7 inch Super Retina XDR, chip A16 Bionic, price=2.899E7, stock=50, imageUrl=https://example.com/images/products/iphone14promax.jpg, category=Category(id=6, name=Điện thoại iPhone, description=Các dòng điện thoại iPhone, imageUrl=https://example.com/images/categories/iphone.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=5.0, reviewCount=1, soldCount=200, isFeatured=true, discountPercentage=5.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-05-01T12:57:05), Product(id=37, name=MacBook Pro 16 M2 Max, description=MacBook Pro 16 inch M2 Max 32GB RAM, 1TB SSD, price=6.999E7, stock=8, imageUrl=https://example.com/images/products/macbookpro16.jpg, category=Category(id=10, name=Laptop Apple, description=Máy tính xách tay của Apple, imageUrl=https://example.com/images/categories/mac.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=5.0, reviewCount=15, soldCount=20, isFeatured=false, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-22T22:59:45), Product(id=28, name=Samsung Galaxy S23 Ultra, description=Samsung Galaxy S23 Ultra 256GB, màn hình 6.8 inch Dynamic AMOLED 2X, chip Snapdragon 8 Gen 2, price=2.599E7, stock=30, imageUrl=https://example.com/images/products/s23ultra.jpg, category=Category(id=7, name=Điện thoại Samsung, description=Các dòng điện thoại Samsung, imageUrl=https://example.com/images/categories/samsung.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.9, reviewCount=85, soldCount=120, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=35, name=MacBook Pro 14 M2 Pro, description=MacBook Pro 14 inch M2 Pro 16GB RAM, 512GB SSD, price=4.599E7, stock=15, imageUrl=https://example.com/images/products/macbookpro14.jpg, category=Category(id=10, name=Laptop Apple, description=Máy tính xách tay của Apple, imageUrl=https://example.com/images/categories/mac.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.9, reviewCount=25, soldCount=30, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33)],[]>]
2025-05-12 09:25:19,786 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-9] Method getTopProducts executed in 155 ms
2025-05-12 09:25:19,787 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:19,787 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,787 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        product0_.id as id1_11_,
        product0_.average_rating as average_2_11_,
        product0_.category_id as categor14_11_,
        product0_.created_at as created_3_11_,
        product0_.description as descript4_11_,
        product0_.discount_percentage as discount5_11_,
        product0_.image_url as image_ur6_11_,
        product0_.is_featured as is_featu7_11_,
        product0_.name as name8_11_,
        product0_.price as price9_11_,
        product0_.review_count as review_10_11_,
        product0_.sold_count as sold_co11_11_,
        product0_.stock as stock12_11_,
        product0_.updated_at as updated13_11_ 
    from
        products product0_ 
    order by
        product0_.average_rating desc limit ?
2025-05-12 09:25:19,787 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,792 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:19,792 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [24]
2025-05-12 09:25:19,788 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] EXITING getTopProducts with result: [<200 OK OK,[Product(id=24, name=iPhone 14 Pro Max, description=iPhone 14 Pro Max 128GB, màn hình 6.7 inch Super Retina XDR, chip A16 Bionic, price=2.899E7, stock=50, imageUrl=https://example.com/images/products/iphone14promax.jpg, category=Category(id=6, name=Điện thoại iPhone, description=Các dòng điện thoại iPhone, imageUrl=https://example.com/images/categories/iphone.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=5.0, reviewCount=1, soldCount=200, isFeatured=true, discountPercentage=5.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-05-01T12:57:05), Product(id=37, name=MacBook Pro 16 M2 Max, description=MacBook Pro 16 inch M2 Max 32GB RAM, 1TB SSD, price=6.999E7, stock=8, imageUrl=https://example.com/images/products/macbookpro16.jpg, category=Category(id=10, name=Laptop Apple, description=Máy tính xách tay của Apple, imageUrl=https://example.com/images/categories/mac.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=5.0, reviewCount=15, soldCount=20, isFeatured=false, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-22T22:59:45), Product(id=28, name=Samsung Galaxy S23 Ultra, description=Samsung Galaxy S23 Ultra 256GB, màn hình 6.8 inch Dynamic AMOLED 2X, chip Snapdragon 8 Gen 2, price=2.599E7, stock=30, imageUrl=https://example.com/images/products/s23ultra.jpg, category=Category(id=7, name=Điện thoại Samsung, description=Các dòng điện thoại Samsung, imageUrl=https://example.com/images/categories/samsung.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.9, reviewCount=85, soldCount=120, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=35, name=MacBook Pro 14 M2 Pro, description=MacBook Pro 14 inch M2 Pro 16GB RAM, 512GB SSD, price=4.599E7, stock=15, imageUrl=https://example.com/images/products/macbookpro14.jpg, category=Category(id=10, name=Laptop Apple, description=Máy tính xách tay của Apple, imageUrl=https://example.com/images/categories/mac.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.9, reviewCount=25, soldCount=30, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33)],[]>]
2025-05-12 09:25:19,790 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,793 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [18]
2025-05-12 09:25:19,793 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [24]
2025-05-12 09:25:19,793 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] Method getTopProducts executed in 146 ms
2025-05-12 09:25:19,795 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,795 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,796 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:19,796 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [24]
2025-05-12 09:25:19,796 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [24]
2025-05-12 09:25:19,796 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:19,797 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] User authorities: [ROLE_USER]
2025-05-12 09:25:19,797 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:19,797 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:19,798 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@100aabd5, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:19,799 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:19,800 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:19,802 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-10] Secured GET /products/search?page=0&size=12&sort=newest&currentUserId=1
2025-05-12 09:25:19,799 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-4] EXITING getAllProducts with result: [<200 OK OK,[Product(id=24, name=iPhone 14 Pro Max, description=iPhone 14 Pro Max 128GB, màn hình 6.7 inch Super Retina XDR, chip A16 Bionic, price=2.899E7, stock=50, imageUrl=https://example.com/images/products/iphone14promax.jpg, category=Category(id=6, name=Điện thoại iPhone, description=Các dòng điện thoại iPhone, imageUrl=https://example.com/images/categories/iphone.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=5.0, reviewCount=1, soldCount=200, isFeatured=true, discountPercentage=5.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-05-01T12:57:05), Product(id=25, name=iPhone 14 Pro, description=iPhone 14 Pro 256GB, màn hình 6.1 inch Super Retina XDR, chip A16 Bionic, price=2.699E7, stock=45, imageUrl=https://example.com/images/products/iphone14pro.jpg, category=Category(id=6, name=Điện thoại iPhone, description=Các dòng điện thoại iPhone, imageUrl=https://example.com/images/categories/iphone.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.7, reviewCount=95, soldCount=150, isFeatured=true, discountPercentage=3.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=26, name=iPhone 14, description=iPhone 14 128GB, màn hình 6.1 inch Super Retina XDR, chip A15 Bionic, price=1.999E7, stock=57, imageUrl=https://example.com/images/products/iphone14.jpg, category=Category(id=6, name=Điện thoại iPhone, description=Các dòng điện thoại iPhone, imageUrl=https://example.com/images/categories/iphone.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=0.0, reviewCount=0, soldCount=130, isFeatured=false, discountPercentage=2.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-19T19:22:05), Product(id=27, name=iPhone 13, description=iPhone 13 128GB, màn hình 6.1 inch Super Retina XDR, chip A15 Bionic, price=1.799E7, stock=36, imageUrl=https://example.com/images/products/iphone13.jpg, category=Category(id=6, name=Điện thoại iPhone, description=Các dòng điện thoại iPhone, imageUrl=https://example.com/images/categories/iphone.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.6, reviewCount=150, soldCount=300, isFeatured=false, discountPercentage=10.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-05-01T12:48:51), Product(id=28, name=Samsung Galaxy S23 Ultra, description=Samsung Galaxy S23 Ultra 256GB, màn hình 6.8 inch Dynamic AMOLED 2X, chip Snapdragon 8 Gen 2, price=2.599E7, stock=30, imageUrl=https://example.com/images/products/s23ultra.jpg, category=Category(id=7, name=Điện thoại Samsung, description=Các dòng điện thoại Samsung, imageUrl=https://example.com/images/categories/samsung.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.9, reviewCount=85, soldCount=120, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=29, name=Samsung Galaxy S23, description=Samsung Galaxy S23 128GB, màn hình 6.1 inch Dynamic AMOLED 2X, chip Snapdragon 8 Gen 2, price=1.999E7, stock=35, imageUrl=https://example.com/images/products/s23.jpg, category=Category(id=7, name=Điện thoại Samsung, description=Các dòng điện thoại Samsung, imageUrl=https://example.com/images/categories/samsung.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.7, reviewCount=70, soldCount=100, isFeatured=false, discountPercentage=5.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=30, name=Samsung Galaxy A54, description=Samsung Galaxy A54 128GB, màn hình 6.4 inch Super AMOLED, chip Exynos 1380, price=9990000.0, stock=69, imageUrl=https://example.com/images/products/a54.jpg, category=Category(id=7, name=Điện thoại Samsung, description=Các dòng điện thoại Samsung, imageUrl=https://example.com/images/categories/samsung.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.5, reviewCount=60, soldCount=200, isFeatured=false, discountPercentage=8.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-05-02T22:34:19), Product(id=31, name=Samsung Galaxy Z Fold4, description=Samsung Galaxy Z Fold4 256GB, màn hình 7.6 inch Dynamic AMOLED 2X, chip Snapdragon 8+ Gen 1, price=3.299E7, stock=18, imageUrl=https://example.com/images/products/zfold4.jpg, category=Category(id=7, name=Điện thoại Samsung, description=Các dòng điện thoại Samsung, imageUrl=https://example.com/images/categories/samsung.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.8, reviewCount=40, soldCount=50, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-05-01T12:51:55), Product(id=32, name=Xiaomi 13 Pro, description=Xiaomi 13 Pro 256GB, màn hình 6.73 inch AMOLED, chip Snapdragon 8 Gen 2, price=2.199E7, stock=25, imageUrl=https://example.com/images/products/xiaomi13pro.jpg, category=Category(id=8, name=Điện thoại Xiaomi, description=Các dòng điện thoại Xiaomi, imageUrl=https://example.com/images/categories/xiaomi.jpg, isActive=true, displayOrder=3, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.6, reviewCount=35, soldCount=60, isFeatured=false, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=33, name=Xiaomi 13, description=Xiaomi 13 128GB, màn hình 6.36 inch AMOLED, chip Snapdragon 8 Gen 2, price=1.799E7, stock=30, imageUrl=https://example.com/images/products/xiaomi13.jpg, category=Category(id=8, name=Điện thoại Xiaomi, description=Các dòng điện thoại Xiaomi, imageUrl=https://example.com/images/categories/xiaomi.jpg, isActive=true, displayOrder=3, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.5, reviewCount=30, soldCount=50, isFeatured=false, discountPercentage=5.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=34, name=Xiaomi Redmi Note 12 Pro, description=Xiaomi Redmi Note 12 Pro 128GB, màn hình 6.67 inch AMOLED, chip MediaTek Dimensity 1080, price=7990000.0, stock=80, imageUrl=https://example.com/images/products/redminote12pro.jpg, category=Category(id=8, name=Điện thoại Xiaomi, description=Các dòng điện thoại Xiaomi, imageUrl=https://example.com/images/categories/xiaomi.jpg, isActive=true, displayOrder=3, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.3, reviewCount=90, soldCount=250, isFeatured=false, discountPercentage=10.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=35, name=MacBook Pro 14 M2 Pro, description=MacBook Pro 14 inch M2 Pro 16GB RAM, 512GB SSD, price=4.599E7, stock=15, imageUrl=https://example.com/images/products/macbookpro14.jpg, category=Category(id=10, name=Laptop Apple, description=Máy tính xách tay của Apple, imageUrl=https://example.com/images/categories/mac.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.9, reviewCount=25, soldCount=30, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=36, name=MacBook Air M2, description=MacBook Air M2 8GB RAM, 256GB SSD, price=2.699E7, stock=19, imageUrl=https://example.com/images/products/macbookairm2.jpg, category=Category(id=10, name=Laptop Apple, description=Máy tính xách tay của Apple, imageUrl=https://example.com/images/categories/mac.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.8, reviewCount=40, soldCount=70, isFeatured=true, discountPercentage=5.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-05-01T12:46:55), Product(id=37, name=MacBook Pro 16 M2 Max, description=MacBook Pro 16 inch M2 Max 32GB RAM, 1TB SSD, price=6.999E7, stock=8, imageUrl=https://example.com/images/products/macbookpro16.jpg, category=Category(id=10, name=Laptop Apple, description=Máy tính xách tay của Apple, imageUrl=https://example.com/images/categories/mac.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=5.0, reviewCount=15, soldCount=20, isFeatured=false, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-22T22:59:45), Product(id=38, name=Asus ROG Strix G15, description=Asus ROG Strix G15 AMD Ryzen 7-6800H, 16GB RAM, RTX 3060, 512GB SSD, price=3.299E7, stock=17, imageUrl=https://example.com/images/products/rogg15.jpg, category=Category(id=14, name=Laptop Gaming, description=Máy tính xách tay dành cho game thủ, imageUrl=https://example.com/images/categories/gaming.jpg, isActive=true, displayOrder=5, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.7, reviewCount=55, soldCount=90, isFeatured=true, discountPercentage=3.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-05-02T22:33:52), Product(id=39, name=MSI Stealth 15M, description=MSI Stealth 15M Intel Core i7-11375H, 16GB RAM, RTX 3060, 512GB SSD, price=2.899E7, stock=14, imageUrl=https://example.com/images/products/stealth15m.jpg, category=Category(id=14, name=Laptop Gaming, description=Máy tính xách tay dành cho game thủ, imageUrl=https://example.com/images/categories/gaming.jpg, isActive=true, displayOrder=5, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.6, reviewCount=45, soldCount=80, isFeatured=false, discountPercentage=5.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-05-02T22:33:52), Product(id=40, name=Acer Predator Helios Neo, description=Acer Predator Helios Neo Intel Core i7-12700H, 16GB RAM, RTX 3070Ti, 1TB SSD, price=3.599E7, stock=12, imageUrl=https://example.com/images/products/heliosneo.jpg, category=Category(id=14, name=Laptop Gaming, description=Máy tính xách tay dành cho game thủ, imageUrl=https://example.com/images/categories/gaming.jpg, isActive=true, displayOrder=5, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.8, reviewCount=30, soldCount=50, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=41, name=AirPods Pro 2, description=Tai nghe không dây Apple AirPods Pro 2 với công nghệ chống ồn chủ động, price=5990000.0, stock=50, imageUrl=https://example.com/images/products/airpodspro2.jpg, category=Category(id=16, name=Cáp sạc, description=Các loại cáp sạc cho thiết bị, imageUrl=https://example.com/images/categories/cable.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.8, reviewCount=200, soldCount=350, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=42, name=Galaxy Buds 2 Pro, description=Tai nghe không dây Samsung Galaxy Buds 2 Pro với công nghệ Hi-Fi 24bit, price=3990000.0, stock=45, imageUrl=https://example.com/images/products/buds2pro.jpg, category=Category(id=16, name=Cáp sạc, description=Các loại cáp sạc cho thiết bị, imageUrl=https://example.com/images/categories/cable.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.5, reviewCount=150, soldCount=280, isFeatured=false, discountPercentage=10.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=43, name=Xiaomi Redmi Buds 4 Pro, description=Tai nghe không dây Xiaomi Redmi Buds 4 Pro với tính năng chống ồn, price=1690000.0, stock=80, imageUrl=https://example.com/images/products/redmibuds4pro.jpg, category=Category(id=16, name=Cáp sạc, description=Các loại cáp sạc cho thiết bị, imageUrl=https://example.com/images/categories/cable.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.3, reviewCount=100, soldCount=200, isFeatured=false, discountPercentage=15.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=44, name=Anker PowerCore Slim 10000, description=Pin dự phòng Anker PowerCore Slim 10000mAh với công nghệ PowerIQ, price=790000.0, stock=100, imageUrl=https://example.com/images/products/ankerpowercore.jpg, category=Category(id=18, name=Pin dự phòng, description=Pin sạc dự phòng, imageUrl=https://example.com/images/categories/powerbank.jpg, isActive=true, displayOrder=4, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.7, reviewCount=300, soldCount=500, isFeatured=true, discountPercentage=5.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=45, name=Mi Power Bank 3 20000, description=Pin dự phòng Xiaomi Mi Power Bank 3 20000mAh với 2 cổng USB-A và 1 cổng USB-C, price=890000.0, stock=90, imageUrl=https://example.com/images/products/mipowerbank3.jpg, category=Category(id=18, name=Pin dự phòng, description=Pin sạc dự phòng, imageUrl=https://example.com/images/categories/powerbank.jpg, isActive=true, displayOrder=4, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.6, reviewCount=250, soldCount=450, isFeatured=false, discountPercentage=10.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=46, name=Samsung Wireless Powerbank, description=Pin dự phòng Samsung Wireless 10000mAh với khả năng sạc không dây, price=1290000.0, stock=70, imageUrl=https://example.com/images/products/samsungpowerbank.jpg, category=Category(id=18, name=Pin dự phòng, description=Pin sạc dự phòng, imageUrl=https://example.com/images/categories/powerbank.jpg, isActive=true, displayOrder=4, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.4, reviewCount=180, soldCount=320, isFeatured=false, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33)],[]>]
2025-05-12 09:25:19,804 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-4] Method getAllProducts executed in 171 ms
2025-05-12 09:25:19,799 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:19,805 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:19,800 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,806 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,807 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [24]
2025-05-12 09:25:19,807 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [24]
2025-05-12 09:25:19,802 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,810 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [37]
2025-05-12 09:25:19,809 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:19,811 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:19,812 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:19,812 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,812 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,814 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [24]
2025-05-12 09:25:19,814 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [37]
2025-05-12 09:25:19,814 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:19,817 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:19,815 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,817 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:19,818 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [37]
2025-05-12 09:25:19,819 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:19,819 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] User authorities: [ROLE_USER]
2025-05-12 09:25:19,819 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:19,820 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@13603bbe, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:19,820 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-6] Secured GET /categories?currentUserId=1
2025-05-12 09:25:19,820 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,821 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] ENTERING getAllCategories
2025-05-12 09:25:19,821 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [37]
2025-05-12 09:25:19,818 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,822 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [37]
2025-05-12 09:25:19,821 ERROR com.example.tmdt.exception.GlobalExceptionHandler [http-nio-8080-exec-10] Unhandled exception occurred
org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'query' for method parameter type String is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValueInternal(RequestParamMethodArgumentResolver.java:218)
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:193)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:114)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:96)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.tmdt.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:78)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.example.tmdt.filter.RequestLoggingFilter.doFilterInternal(RequestLoggingFilter.java:58)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-05-12 09:25:19,823 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,826 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,827 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [28]
2025-05-12 09:25:19,824 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [25]
2025-05-12 09:25:19,826 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,830 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [6]
2025-05-12 09:25:19,827 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,828 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,833 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [37]
2025-05-12 09:25:19,833 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,834 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [28]
2025-05-12 09:25:19,833 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [28]
2025-05-12 09:25:19,835 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,833 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,837 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,837 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [25]
2025-05-12 09:25:19,837 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,838 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [28]
2025-05-12 09:25:19,838 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [10]
2025-05-12 09:25:19,837 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-10] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:19,838 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,838 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:19,838 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [28]
2025-05-12 09:25:19,841 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,839 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] RESPONSE: Status=500, Time=115ms
2025-05-12 09:25:19,842 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [26]
2025-05-12 09:25:19,841 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,843 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [7]
2025-05-12 09:25:19,842 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,842 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,844 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [28]
2025-05-12 09:25:19,844 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:19,846 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,846 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:19,846 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,848 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:19,846 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,848 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-5] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:19,847 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,849 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] RESPONSE: Status=200, Time=269ms
2025-05-12 09:25:19,850 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,851 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:19,851 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [14]
2025-05-12 09:25:19,849 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [26]
2025-05-12 09:25:19,852 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,853 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] REQUEST: OPTIONS /products/max-price
2025-05-12 09:25:19,854 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=*/*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, access-control-request-method=GET, access-control-request-headers=authorization, referer=http://localhost:3000/, origin=http://localhost:3000, connection=keep-alive, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=4
2025-05-12 09:25:19,854 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] RESPONSE: Status=200 (OK - CORS Preflight)
2025-05-12 09:25:19,853 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:19,854 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,855 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [27]
2025-05-12 09:25:19,854 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:19,858 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-1] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:19,858 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [16]
2025-05-12 09:25:19,859 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] RESPONSE: Status=200, Time=279ms
2025-05-12 09:25:19,858 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] REQUEST: OPTIONS /products/search
2025-05-12 09:25:19,860 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-9] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:19,862 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        category0_.id as id1_1_,
        category0_.created_at as created_2_1_,
        category0_.description as descript3_1_,
        category0_.display_order as display_4_1_,
        category0_.image_url as image_ur5_1_,
        category0_.is_active as is_activ6_1_,
        category0_.name as name7_1_,
        category0_.parent_id as parent_i9_1_,
        category0_.updated_at as updated_8_1_ 
    from
        categories category0_
2025-05-12 09:25:19,860 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=*/*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, access-control-request-method=GET, access-control-request-headers=authorization, referer=http://localhost:3000/, origin=http://localhost:3000, connection=keep-alive, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=4
2025-05-12 09:25:19,861 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,863 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] RESPONSE: Status=200 (OK - CORS Preflight)
2025-05-12 09:25:19,862 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] RESPONSE: Status=200, Time=285ms
2025-05-12 09:25:19,863 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [27]
2025-05-12 09:25:19,865 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] REQUEST: OPTIONS /products
2025-05-12 09:25:19,865 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] REQUEST: GET /products/max-price
2025-05-12 09:25:19,865 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=0
2025-05-12 09:25:19,865 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=*/*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, access-control-request-method=GET, access-control-request-headers=authorization, referer=http://localhost:3000/, origin=http://localhost:3000, connection=keep-alive, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=4
2025-05-12 09:25:19,865 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,866 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-7] Securing GET /products/max-price?currentUserId=1
2025-05-12 09:25:19,866 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] REQUEST: OPTIONS /categories
2025-05-12 09:25:19,866 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=*/*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, access-control-request-method=GET, access-control-request-headers=authorization, referer=http://localhost:3000/, origin=http://localhost:3000, connection=keep-alive, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=4
2025-05-12 09:25:19,866 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-7] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:19,866 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [28]
2025-05-12 09:25:19,867 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Processing request to URL: /products/max-price, Method: GET
2025-05-12 09:25:19,867 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] REQUEST: GET /products/search
2025-05-12 09:25:19,867 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:19,867 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=0
2025-05-12 09:25:19,867 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-3] Securing GET /products/search?page=0&size=12&sort=newest&currentUserId=1
2025-05-12 09:25:19,867 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Found Authorization header with Bearer token
2025-05-12 09:25:19,868 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:19,868 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] RESPONSE: Status=200 (OK - CORS Preflight)
2025-05-12 09:25:19,868 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,869 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-3] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:19,869 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [28]
2025-05-12 09:25:19,868 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] EXITING getRecommendedProducts with result: [<200 OK OK,[Product(id=24, name=iPhone 14 Pro Max, description=iPhone 14 Pro Max 128GB, màn hình 6.7 inch Super Retina XDR, chip A16 Bionic, price=2.899E7, stock=50, imageUrl=https://example.com/images/products/iphone14promax.jpg, category=Category(id=6, name=Điện thoại iPhone, description=Các dòng điện thoại iPhone, imageUrl=https://example.com/images/categories/iphone.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=5.0, reviewCount=1, soldCount=200, isFeatured=true, discountPercentage=5.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-05-01T12:57:05), Product(id=37, name=MacBook Pro 16 M2 Max, description=MacBook Pro 16 inch M2 Max 32GB RAM, 1TB SSD, price=6.999E7, stock=8, imageUrl=https://example.com/images/products/macbookpro16.jpg, category=Category(id=10, name=Laptop Apple, description=Máy tính xách tay của Apple, imageUrl=https://example.com/images/categories/mac.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=5.0, reviewCount=15, soldCount=20, isFeatured=false, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-22T22:59:45), Product(id=28, name=Samsung Galaxy S23 Ultra, description=Samsung Galaxy S23 Ultra 256GB, màn hình 6.8 inch Dynamic AMOLED 2X, chip Snapdragon 8 Gen 2, price=2.599E7, stock=30, imageUrl=https://example.com/images/products/s23ultra.jpg, category=Category(id=7, name=Điện thoại Samsung, description=Các dòng điện thoại Samsung, imageUrl=https://example.com/images/categories/samsung.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.9, reviewCount=85, soldCount=120, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=35, name=MacBook Pro 14 M2 Pro, description=MacBook Pro 14 inch M2 Pro 16GB RAM, 512GB SSD, price=4.599E7, stock=15, imageUrl=https://example.com/images/products/macbookpro14.jpg, category=Category(id=10, name=Laptop Apple, description=Máy tính xách tay của Apple, imageUrl=https://example.com/images/categories/mac.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.9, reviewCount=25, soldCount=30, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=31, name=Samsung Galaxy Z Fold4, description=Samsung Galaxy Z Fold4 256GB, màn hình 7.6 inch Dynamic AMOLED 2X, chip Snapdragon 8+ Gen 1, price=3.299E7, stock=18, imageUrl=https://example.com/images/products/zfold4.jpg, category=Category(id=7, name=Điện thoại Samsung, description=Các dòng điện thoại Samsung, imageUrl=https://example.com/images/categories/samsung.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.8, reviewCount=40, soldCount=50, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-05-01T12:51:55), Product(id=36, name=MacBook Air M2, description=MacBook Air M2 8GB RAM, 256GB SSD, price=2.699E7, stock=19, imageUrl=https://example.com/images/products/macbookairm2.jpg, category=Category(id=10, name=Laptop Apple, description=Máy tính xách tay của Apple, imageUrl=https://example.com/images/categories/mac.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.8, reviewCount=40, soldCount=70, isFeatured=true, discountPercentage=5.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-05-01T12:46:55), Product(id=40, name=Acer Predator Helios Neo, description=Acer Predator Helios Neo Intel Core i7-12700H, 16GB RAM, RTX 3070Ti, 1TB SSD, price=3.599E7, stock=12, imageUrl=https://example.com/images/products/heliosneo.jpg, category=Category(id=14, name=Laptop Gaming, description=Máy tính xách tay dành cho game thủ, imageUrl=https://example.com/images/categories/gaming.jpg, isActive=true, displayOrder=5, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.8, reviewCount=30, soldCount=50, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=41, name=AirPods Pro 2, description=Tai nghe không dây Apple AirPods Pro 2 với công nghệ chống ồn chủ động, price=5990000.0, stock=50, imageUrl=https://example.com/images/products/airpodspro2.jpg, category=Category(id=16, name=Cáp sạc, description=Các loại cáp sạc cho thiết bị, imageUrl=https://example.com/images/categories/cable.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.8, reviewCount=200, soldCount=350, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=25, name=iPhone 14 Pro, description=iPhone 14 Pro 256GB, màn hình 6.1 inch Super Retina XDR, chip A16 Bionic, price=2.699E7, stock=45, imageUrl=https://example.com/images/products/iphone14pro.jpg, category=Category(id=6, name=Điện thoại iPhone, description=Các dòng điện thoại iPhone, imageUrl=https://example.com/images/categories/iphone.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.7, reviewCount=95, soldCount=150, isFeatured=true, discountPercentage=3.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=29, name=Samsung Galaxy S23, description=Samsung Galaxy S23 128GB, màn hình 6.1 inch Dynamic AMOLED 2X, chip Snapdragon 8 Gen 2, price=1.999E7, stock=35, imageUrl=https://example.com/images/products/s23.jpg, category=Category(id=7, name=Điện thoại Samsung, description=Các dòng điện thoại Samsung, imageUrl=https://example.com/images/categories/samsung.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.7, reviewCount=70, soldCount=100, isFeatured=false, discountPercentage=5.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33)],[]>]
2025-05-12 09:25:19,870 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Processing request to URL: /products/search, Method: GET
2025-05-12 09:25:19,870 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] Method getRecommendedProducts executed in 88 ms
2025-05-12 09:25:19,870 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:19,870 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Found Authorization header with Bearer token
2025-05-12 09:25:19,870 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:19,871 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-3] JWT token validation successful
2025-05-12 09:25:19,869 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-7] JWT token validation successful
2025-05-12 09:25:19,869 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] RESPONSE: Status=200 (OK - CORS Preflight)
2025-05-12 09:25:19,871 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,876 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-7] Extracted username from JWT token: a1234
2025-05-12 09:25:19,876 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [24]
2025-05-12 09:25:19,876 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Valid JWT token found for user: a1234
2025-05-12 09:25:19,872 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,872 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-3] Extracted username from JWT token: a1234
2025-05-12 09:25:19,873 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] REQUEST: GET /products
2025-05-12 09:25:19,877 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [29]
2025-05-12 09:25:19,873 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] EXITING getAllCategories with result: [<200 OK OK,[Category(id=1, name=Điện thoại, description=Các loại điện thoại di động, imageUrl=https://example.com/images/categories/phone.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), Category(id=2, name=Laptop, description=Máy tính xách tay các loại, imageUrl=https://example.com/images/categories/laptop.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), Category(id=3, name=Máy tính bảng, description=Các loại máy tính bảng, imageUrl=https://example.com/images/categories/tablet.jpg, isActive=true, displayOrder=3, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), Category(id=4, name=Phụ kiện, description=Phụ kiện công nghệ, imageUrl=https://example.com/images/categories/accessories.jpg, isActive=true, displayOrder=4, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), Category(id=5, name=TV & Thiết bị điện tử, description=Tivi và các thiết bị điện tử, imageUrl=https://example.com/images/categories/tv.jpg, isActive=true, displayOrder=5, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), Category(id=6, name=Điện thoại iPhone, description=Các dòng điện thoại iPhone, imageUrl=https://example.com/images/categories/iphone.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), Category(id=7, name=Điện thoại Samsung, description=Các dòng điện thoại Samsung, imageUrl=https://example.com/images/categories/samsung.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), Category(id=8, name=Điện thoại Xiaomi, description=Các dòng điện thoại Xiaomi, imageUrl=https://example.com/images/categories/xiaomi.jpg, isActive=true, displayOrder=3, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), Category(id=9, name=Điện thoại Oppo, description=Các dòng điện thoại Oppo, imageUrl=https://example.com/images/categories/oppo.jpg, isActive=true, displayOrder=4, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), Category(id=10, name=Laptop Apple, description=Máy tính xách tay của Apple, imageUrl=https://example.com/images/categories/mac.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), Category(id=11, name=Laptop Dell, description=Máy tính xách tay của Dell, imageUrl=https://example.com/images/categories/dell.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), Category(id=12, name=Laptop HP, description=Máy tính xách tay của HP, imageUrl=https://example.com/images/categories/hp.jpg, isActive=true, displayOrder=3, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), Category(id=13, name=Laptop Asus, description=Máy tính xách tay của Asus, imageUrl=https://example.com/images/categories/asus.jpg, isActive=true, displayOrder=4, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), Category(id=14, name=Laptop Gaming, description=Máy tính xách tay dành cho game thủ, imageUrl=https://example.com/images/categories/gaming.jpg, isActive=true, displayOrder=5, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), Category(id=15, name=Tai nghe, description=Các loại tai nghe, imageUrl=https://example.com/images/categories/headphone.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), Category(id=16, name=Cáp sạc, description=Các loại cáp sạc cho thiết bị, imageUrl=https://example.com/images/categories/cable.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), Category(id=17, name=Ốp lưng, description=Ốp lưng bảo vệ điện thoại, imageUrl=https://example.com/images/categories/case.jpg, isActive=true, displayOrder=3, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), Category(id=18, name=Pin dự phòng, description=Pin sạc dự phòng, imageUrl=https://example.com/images/categories/powerbank.jpg, isActive=true, displayOrder=4, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13)],[]>]
2025-05-12 09:25:19,877 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Valid JWT token found for user: a1234
2025-05-12 09:25:19,877 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=0
2025-05-12 09:25:19,880 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] Method getAllCategories executed in 59 ms
2025-05-12 09:25:19,881 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-1] Securing GET /products?keyword=&category=&page=0&size=12&sort=newest&currentUserId=1
2025-05-12 09:25:19,878 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:19,878 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] REQUEST: GET /categories
2025-05-12 09:25:19,882 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        subcategor0_.parent_id as parent_i9_1_0_,
        subcategor0_.id as id1_1_0_,
        subcategor0_.id as id1_1_1_,
        subcategor0_.created_at as created_2_1_1_,
        subcategor0_.description as descript3_1_1_,
        subcategor0_.display_order as display_4_1_1_,
        subcategor0_.image_url as image_ur5_1_1_,
        subcategor0_.is_active as is_activ6_1_1_,
        subcategor0_.name as name7_1_1_,
        subcategor0_.parent_id as parent_i9_1_1_,
        subcategor0_.updated_at as updated_8_1_1_ 
    from
        categories subcategor0_ 
    where
        subcategor0_.parent_id=?
2025-05-12 09:25:19,942 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-1] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:19,942 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:19,942 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:19,941 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=0
2025-05-12 09:25:19,882 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,882 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,943 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-9] Securing GET /categories?currentUserId=1
2025-05-12 09:25:19,943 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [24]
2025-05-12 09:25:19,943 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [29]
2025-05-12 09:25:19,943 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-9] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:19,884 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:19,944 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Processing request to URL: /categories, Method: GET
2025-05-12 09:25:19,945 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:19,944 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Processing request to URL: /products, Method: GET
2025-05-12 09:25:19,945 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Found Authorization header with Bearer token
2025-05-12 09:25:19,946 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:19,946 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:19,945 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:19,947 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Found Authorization header with Bearer token
2025-05-12 09:25:19,947 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:19,947 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        subcategor0_.parent_id as parent_i9_1_0_,
        subcategor0_.id as id1_1_0_,
        subcategor0_.id as id1_1_1_,
        subcategor0_.created_at as created_2_1_1_,
        subcategor0_.description as descript3_1_1_,
        subcategor0_.display_order as display_4_1_1_,
        subcategor0_.image_url as image_ur5_1_1_,
        subcategor0_.is_active as is_activ6_1_1_,
        subcategor0_.name as name7_1_1_,
        subcategor0_.parent_id as parent_i9_1_1_,
        subcategor0_.updated_at as updated_8_1_1_ 
    from
        categories subcategor0_ 
    where
        subcategor0_.parent_id=?
2025-05-12 09:25:19,947 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,947 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [6]
2025-05-12 09:25:19,946 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:19,947 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [30]
2025-05-12 09:25:19,947 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:19,948 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:19,948 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:19,949 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:19,947 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-1] JWT token validation successful
2025-05-12 09:25:19,949 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:19,948 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-9] JWT token validation successful
2025-05-12 09:25:19,951 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        subcategor0_.parent_id as parent_i9_1_0_,
        subcategor0_.id as id1_1_0_,
        subcategor0_.id as id1_1_1_,
        subcategor0_.created_at as created_2_1_1_,
        subcategor0_.description as descript3_1_1_,
        subcategor0_.display_order as display_4_1_1_,
        subcategor0_.image_url as image_ur5_1_1_,
        subcategor0_.is_active as is_activ6_1_1_,
        subcategor0_.name as name7_1_1_,
        subcategor0_.parent_id as parent_i9_1_1_,
        subcategor0_.updated_at as updated_8_1_1_ 
    from
        categories subcategor0_ 
    where
        subcategor0_.parent_id=?
2025-05-12 09:25:19,952 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,952 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [7]
2025-05-12 09:25:19,951 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,953 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [37]
2025-05-12 09:25:19,954 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [30]
2025-05-12 09:25:19,954 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        subcategor0_.parent_id as parent_i9_1_0_,
        subcategor0_.id as id1_1_0_,
        subcategor0_.id as id1_1_1_,
        subcategor0_.created_at as created_2_1_1_,
        subcategor0_.description as descript3_1_1_,
        subcategor0_.display_order as display_4_1_1_,
        subcategor0_.image_url as image_ur5_1_1_,
        subcategor0_.is_active as is_activ6_1_1_,
        subcategor0_.name as name7_1_1_,
        subcategor0_.parent_id as parent_i9_1_1_,
        subcategor0_.updated_at as updated_8_1_1_ 
    from
        categories subcategor0_ 
    where
        subcategor0_.parent_id=?
2025-05-12 09:25:19,955 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:19,955 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:19,956 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] User authorities: [ROLE_USER]
2025-05-12 09:25:19,953 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-9] Extracted username from JWT token: a1234
2025-05-12 09:25:19,954 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-1] Extracted username from JWT token: a1234
2025-05-12 09:25:19,956 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [8]
2025-05-12 09:25:19,957 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] User authorities: [ROLE_USER]
2025-05-12 09:25:19,957 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:19,958 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:19,958 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@5c603426, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:19,958 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-3] Secured GET /products/search?page=0&size=12&sort=newest&currentUserId=1
2025-05-12 09:25:19,958 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@13e8d251, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:19,958 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-7] Secured GET /products/max-price?currentUserId=1
2025-05-12 09:25:19,957 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Valid JWT token found for user: a1234
2025-05-12 09:25:19,959 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,957 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Valid JWT token found for user: a1234
2025-05-12 09:25:19,960 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [37]
2025-05-12 09:25:19,958 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,961 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [31]
2025-05-12 09:25:19,960 ERROR com.example.tmdt.exception.GlobalExceptionHandler [http-nio-8080-exec-3] Unhandled exception occurred
org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'query' for method parameter type String is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValueInternal(RequestParamMethodArgumentResolver.java:218)
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:193)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:114)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:96)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.tmdt.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:78)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.example.tmdt.filter.RequestLoggingFilter.doFilterInternal(RequestLoggingFilter.java:58)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-05-12 09:25:19,962 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        subcategor0_.parent_id as parent_i9_1_0_,
        subcategor0_.id as id1_1_0_,
        subcategor0_.id as id1_1_1_,
        subcategor0_.created_at as created_2_1_1_,
        subcategor0_.description as descript3_1_1_,
        subcategor0_.display_order as display_4_1_1_,
        subcategor0_.image_url as image_ur5_1_1_,
        subcategor0_.is_active as is_activ6_1_1_,
        subcategor0_.name as name7_1_1_,
        subcategor0_.parent_id as parent_i9_1_1_,
        subcategor0_.updated_at as updated_8_1_1_ 
    from
        categories subcategor0_ 
    where
        subcategor0_.parent_id=?
2025-05-12 09:25:19,962 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,969 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [28]
2025-05-12 09:25:19,963 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:19,968 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [9]
2025-05-12 09:25:19,970 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:19,967 ERROR com.example.tmdt.exception.GlobalExceptionHandler [http-nio-8080-exec-7] Unhandled exception occurred
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "max-price"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:96)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.tmdt.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:78)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.example.tmdt.filter.RequestLoggingFilter.doFilterInternal(RequestLoggingFilter.java:58)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.NumberFormatException: For input string: "max-price"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Long.parseLong(Long.java:711)
	at java.base/java.lang.Long.valueOf(Long.java:1163)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:214)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:729)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:125)
	... 100 common frames omitted
2025-05-12 09:25:19,963 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:19,972 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:19,970 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,972 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [31]
2025-05-12 09:25:19,974 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-3] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:19,975 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-7] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:19,975 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        subcategor0_.parent_id as parent_i9_1_0_,
        subcategor0_.id as id1_1_0_,
        subcategor0_.id as id1_1_1_,
        subcategor0_.created_at as created_2_1_1_,
        subcategor0_.description as descript3_1_1_,
        subcategor0_.display_order as display_4_1_1_,
        subcategor0_.image_url as image_ur5_1_1_,
        subcategor0_.is_active as is_activ6_1_1_,
        subcategor0_.name as name7_1_1_,
        subcategor0_.parent_id as parent_i9_1_1_,
        subcategor0_.updated_at as updated_8_1_1_ 
    from
        categories subcategor0_ 
    where
        subcategor0_.parent_id=?
2025-05-12 09:25:19,975 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] RESPONSE: Status=500, Time=108ms
2025-05-12 09:25:19,976 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,977 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [2]
2025-05-12 09:25:19,978 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [32]
2025-05-12 09:25:19,976 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:19,979 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] RESPONSE: Status=500, Time=113ms
2025-05-12 09:25:19,979 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:19,980 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:19,981 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:19,979 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,981 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        subcategor0_.parent_id as parent_i9_1_0_,
        subcategor0_.id as id1_1_0_,
        subcategor0_.id as id1_1_1_,
        subcategor0_.created_at as created_2_1_1_,
        subcategor0_.description as descript3_1_1_,
        subcategor0_.display_order as display_4_1_1_,
        subcategor0_.image_url as image_ur5_1_1_,
        subcategor0_.is_active as is_activ6_1_1_,
        subcategor0_.name as name7_1_1_,
        subcategor0_.parent_id as parent_i9_1_1_,
        subcategor0_.updated_at as updated_8_1_1_ 
    from
        categories subcategor0_ 
    where
        subcategor0_.parent_id=?
2025-05-12 09:25:19,985 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [28]
2025-05-12 09:25:19,980 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,981 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] REQUEST: OPTIONS /products/max-price
2025-05-12 09:25:19,986 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=*/*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, access-control-request-method=GET, access-control-request-headers=authorization, referer=http://localhost:3000/, origin=http://localhost:3000, connection=keep-alive, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=4
2025-05-12 09:25:19,986 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [10]
2025-05-12 09:25:19,985 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:19,986 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [32]
2025-05-12 09:25:19,986 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] RESPONSE: Status=200 (OK - CORS Preflight)
2025-05-12 09:25:19,986 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] User authorities: [ROLE_USER]
2025-05-12 09:25:19,987 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:19,988 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@6fe27a81, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:19,989 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-9] Secured GET /categories?currentUserId=1
2025-05-12 09:25:19,989 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        subcategor0_.parent_id as parent_i9_1_0_,
        subcategor0_.id as id1_1_0_,
        subcategor0_.id as id1_1_1_,
        subcategor0_.created_at as created_2_1_1_,
        subcategor0_.description as descript3_1_1_,
        subcategor0_.display_order as display_4_1_1_,
        subcategor0_.image_url as image_ur5_1_1_,
        subcategor0_.is_active as is_activ6_1_1_,
        subcategor0_.name as name7_1_1_,
        subcategor0_.parent_id as parent_i9_1_1_,
        subcategor0_.updated_at as updated_8_1_1_ 
    from
        categories subcategor0_ 
    where
        subcategor0_.parent_id=?
2025-05-12 09:25:19,988 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,990 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [11]
2025-05-12 09:25:19,989 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:19,992 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:19,992 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] User authorities: [ROLE_USER]
2025-05-12 09:25:19,992 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [33]
2025-05-12 09:25:19,992 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:19,992 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@77f4a5df, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:19,993 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-1] Secured GET /products?keyword=&category=&page=0&size=12&sort=newest&currentUserId=1
2025-05-12 09:25:19,993 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:19,991 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-9] ENTERING getAllCategories
2025-05-12 09:25:19,994 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] REQUEST: OPTIONS /products/recommended
2025-05-12 09:25:19,994 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=*/*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, access-control-request-method=GET, access-control-request-headers=authorization, referer=http://localhost:3000/, origin=http://localhost:3000, connection=keep-alive, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=4
2025-05-12 09:25:19,994 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] RESPONSE: Status=200 (OK - CORS Preflight)
2025-05-12 09:25:19,994 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        subcategor0_.parent_id as parent_i9_1_0_,
        subcategor0_.id as id1_1_0_,
        subcategor0_.id as id1_1_1_,
        subcategor0_.created_at as created_2_1_1_,
        subcategor0_.description as descript3_1_1_,
        subcategor0_.display_order as display_4_1_1_,
        subcategor0_.image_url as image_ur5_1_1_,
        subcategor0_.is_active as is_activ6_1_1_,
        subcategor0_.name as name7_1_1_,
        subcategor0_.parent_id as parent_i9_1_1_,
        subcategor0_.updated_at as updated_8_1_1_ 
    from
        categories subcategor0_ 
    where
        subcategor0_.parent_id=?
2025-05-12 09:25:19,993 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] ENTERING getAllProducts
2025-05-12 09:25:19,997 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        category0_.id as id1_1_,
        category0_.created_at as created_2_1_,
        category0_.description as descript3_1_,
        category0_.display_order as display_4_1_,
        category0_.image_url as image_ur5_1_,
        category0_.is_active as is_activ6_1_,
        category0_.name as name7_1_,
        category0_.parent_id as parent_i9_1_,
        category0_.updated_at as updated_8_1_ 
    from
        categories category0_
2025-05-12 09:25:19,997 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [12]
2025-05-12 09:25:19,995 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,994 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:19,999 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:19,996 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] REQUEST: GET /products/max-price
2025-05-12 09:25:19,999 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [33]
2025-05-12 09:25:19,997 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] REQUEST: GET /products/recommended
2025-05-12 09:25:19,999 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=0
2025-05-12 09:25:20,000 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-5] Securing GET /products/max-price?currentUserId=1
2025-05-12 09:25:19,999 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=0
2025-05-12 09:25:20,000 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-3] Securing GET /products/recommended?currentUserId=1
2025-05-12 09:25:19,999 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        subcategor0_.parent_id as parent_i9_1_0_,
        subcategor0_.id as id1_1_0_,
        subcategor0_.id as id1_1_1_,
        subcategor0_.created_at as created_2_1_1_,
        subcategor0_.description as descript3_1_1_,
        subcategor0_.display_order as display_4_1_1_,
        subcategor0_.image_url as image_ur5_1_1_,
        subcategor0_.is_active as is_activ6_1_1_,
        subcategor0_.name as name7_1_1_,
        subcategor0_.parent_id as parent_i9_1_1_,
        subcategor0_.updated_at as updated_8_1_1_ 
    from
        categories subcategor0_ 
    where
        subcategor0_.parent_id=?
2025-05-12 09:25:20,001 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-3] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:20,001 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [13]
2025-05-12 09:25:20,002 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Processing request to URL: /products/recommended, Method: GET
2025-05-12 09:25:20,004 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:20,004 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Found Authorization header with Bearer token
2025-05-12 09:25:20,005 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:20,004 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-5] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:20,003 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,003 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        product0_.id as id1_11_,
        product0_.average_rating as average_2_11_,
        product0_.category_id as categor14_11_,
        product0_.created_at as created_3_11_,
        product0_.description as descript4_11_,
        product0_.discount_percentage as discount5_11_,
        product0_.image_url as image_ur6_11_,
        product0_.is_featured as is_featu7_11_,
        product0_.name as name8_11_,
        product0_.price as price9_11_,
        product0_.review_count as review_10_11_,
        product0_.sold_count as sold_co11_11_,
        product0_.stock as stock12_11_,
        product0_.updated_at as updated13_11_ 
    from
        products product0_
2025-05-12 09:25:20,003 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        subcategor0_.parent_id as parent_i9_1_0_,
        subcategor0_.id as id1_1_0_,
        subcategor0_.id as id1_1_1_,
        subcategor0_.created_at as created_2_1_1_,
        subcategor0_.description as descript3_1_1_,
        subcategor0_.display_order as display_4_1_1_,
        subcategor0_.image_url as image_ur5_1_1_,
        subcategor0_.is_active as is_activ6_1_1_,
        subcategor0_.name as name7_1_1_,
        subcategor0_.parent_id as parent_i9_1_1_,
        subcategor0_.updated_at as updated_8_1_1_ 
    from
        categories subcategor0_ 
    where
        subcategor0_.parent_id=?
2025-05-12 09:25:20,006 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [14]
2025-05-12 09:25:20,008 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [31]
2025-05-12 09:25:20,006 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Processing request to URL: /products/max-price, Method: GET
2025-05-12 09:25:20,006 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-9] EXITING getAllCategories with result: [<200 OK OK,[Category(id=1, name=Điện thoại, description=Các loại điện thoại di động, imageUrl=https://example.com/images/categories/phone.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), Category(id=2, name=Laptop, description=Máy tính xách tay các loại, imageUrl=https://example.com/images/categories/laptop.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), Category(id=3, name=Máy tính bảng, description=Các loại máy tính bảng, imageUrl=https://example.com/images/categories/tablet.jpg, isActive=true, displayOrder=3, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), Category(id=4, name=Phụ kiện, description=Phụ kiện công nghệ, imageUrl=https://example.com/images/categories/accessories.jpg, isActive=true, displayOrder=4, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), Category(id=5, name=TV & Thiết bị điện tử, description=Tivi và các thiết bị điện tử, imageUrl=https://example.com/images/categories/tv.jpg, isActive=true, displayOrder=5, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), Category(id=6, name=Điện thoại iPhone, description=Các dòng điện thoại iPhone, imageUrl=https://example.com/images/categories/iphone.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), Category(id=7, name=Điện thoại Samsung, description=Các dòng điện thoại Samsung, imageUrl=https://example.com/images/categories/samsung.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), Category(id=8, name=Điện thoại Xiaomi, description=Các dòng điện thoại Xiaomi, imageUrl=https://example.com/images/categories/xiaomi.jpg, isActive=true, displayOrder=3, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), Category(id=9, name=Điện thoại Oppo, description=Các dòng điện thoại Oppo, imageUrl=https://example.com/images/categories/oppo.jpg, isActive=true, displayOrder=4, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), Category(id=10, name=Laptop Apple, description=Máy tính xách tay của Apple, imageUrl=https://example.com/images/categories/mac.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), Category(id=11, name=Laptop Dell, description=Máy tính xách tay của Dell, imageUrl=https://example.com/images/categories/dell.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), Category(id=12, name=Laptop HP, description=Máy tính xách tay của HP, imageUrl=https://example.com/images/categories/hp.jpg, isActive=true, displayOrder=3, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), Category(id=13, name=Laptop Asus, description=Máy tính xách tay của Asus, imageUrl=https://example.com/images/categories/asus.jpg, isActive=true, displayOrder=4, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), Category(id=14, name=Laptop Gaming, description=Máy tính xách tay dành cho game thủ, imageUrl=https://example.com/images/categories/gaming.jpg, isActive=true, displayOrder=5, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), Category(id=15, name=Tai nghe, description=Các loại tai nghe, imageUrl=https://example.com/images/categories/headphone.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), Category(id=16, name=Cáp sạc, description=Các loại cáp sạc cho thiết bị, imageUrl=https://example.com/images/categories/cable.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), Category(id=17, name=Ốp lưng, description=Ốp lưng bảo vệ điện thoại, imageUrl=https://example.com/images/categories/case.jpg, isActive=true, displayOrder=3, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), Category(id=18, name=Pin dự phòng, description=Pin sạc dự phòng, imageUrl=https://example.com/images/categories/powerbank.jpg, isActive=true, displayOrder=4, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13)],[]>]
2025-05-12 09:25:20,009 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-9] Method getAllCategories executed in 18 ms
2025-05-12 09:25:20,009 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:20,009 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-3] JWT token validation successful
2025-05-12 09:25:20,010 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [6]
2025-05-12 09:25:20,007 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,012 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [34]
2025-05-12 09:25:20,011 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-3] Extracted username from JWT token: a1234
2025-05-12 09:25:20,012 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Valid JWT token found for user: a1234
2025-05-12 09:25:20,012 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:20,008 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:20,012 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Found Authorization header with Bearer token
2025-05-12 09:25:20,013 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:20,011 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        subcategor0_.parent_id as parent_i9_1_0_,
        subcategor0_.id as id1_1_0_,
        subcategor0_.id as id1_1_1_,
        subcategor0_.created_at as created_2_1_1_,
        subcategor0_.description as descript3_1_1_,
        subcategor0_.display_order as display_4_1_1_,
        subcategor0_.image_url as image_ur5_1_1_,
        subcategor0_.is_active as is_activ6_1_1_,
        subcategor0_.name as name7_1_1_,
        subcategor0_.parent_id as parent_i9_1_1_,
        subcategor0_.updated_at as updated_8_1_1_ 
    from
        categories subcategor0_ 
    where
        subcategor0_.parent_id=?
2025-05-12 09:25:20,013 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [3]
2025-05-12 09:25:20,013 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [7]
2025-05-12 09:25:20,010 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        subcategor0_.parent_id as parent_i9_1_0_,
        subcategor0_.id as id1_1_0_,
        subcategor0_.id as id1_1_1_,
        subcategor0_.created_at as created_2_1_1_,
        subcategor0_.description as descript3_1_1_,
        subcategor0_.display_order as display_4_1_1_,
        subcategor0_.image_url as image_ur5_1_1_,
        subcategor0_.is_active as is_activ6_1_1_,
        subcategor0_.name as name7_1_1_,
        subcategor0_.parent_id as parent_i9_1_1_,
        subcategor0_.updated_at as updated_8_1_1_ 
    from
        categories subcategor0_ 
    where
        subcategor0_.parent_id=?
2025-05-12 09:25:20,014 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,014 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:20,014 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [34]
2025-05-12 09:25:20,015 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        subcategor0_.parent_id as parent_i9_1_0_,
        subcategor0_.id as id1_1_0_,
        subcategor0_.id as id1_1_1_,
        subcategor0_.created_at as created_2_1_1_,
        subcategor0_.description as descript3_1_1_,
        subcategor0_.display_order as display_4_1_1_,
        subcategor0_.image_url as image_ur5_1_1_,
        subcategor0_.is_active as is_activ6_1_1_,
        subcategor0_.name as name7_1_1_,
        subcategor0_.parent_id as parent_i9_1_1_,
        subcategor0_.updated_at as updated_8_1_1_ 
    from
        categories subcategor0_ 
    where
        subcategor0_.parent_id=?
2025-05-12 09:25:20,015 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [4]
2025-05-12 09:25:20,015 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-5] JWT token validation successful
2025-05-12 09:25:20,016 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,016 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        subcategor0_.parent_id as parent_i9_1_0_,
        subcategor0_.id as id1_1_0_,
        subcategor0_.id as id1_1_1_,
        subcategor0_.created_at as created_2_1_1_,
        subcategor0_.description as descript3_1_1_,
        subcategor0_.display_order as display_4_1_1_,
        subcategor0_.image_url as image_ur5_1_1_,
        subcategor0_.is_active as is_activ6_1_1_,
        subcategor0_.name as name7_1_1_,
        subcategor0_.parent_id as parent_i9_1_1_,
        subcategor0_.updated_at as updated_8_1_1_ 
    from
        categories subcategor0_ 
    where
        subcategor0_.parent_id=?
2025-05-12 09:25:20,017 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [15]
2025-05-12 09:25:20,017 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-5] Extracted username from JWT token: a1234
2025-05-12 09:25:20,018 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Valid JWT token found for user: a1234
2025-05-12 09:25:20,017 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:20,017 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,018 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [31]
2025-05-12 09:25:20,018 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:20,018 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        subcategor0_.parent_id as parent_i9_1_0_,
        subcategor0_.id as id1_1_0_,
        subcategor0_.id as id1_1_1_,
        subcategor0_.created_at as created_2_1_1_,
        subcategor0_.description as descript3_1_1_,
        subcategor0_.display_order as display_4_1_1_,
        subcategor0_.image_url as image_ur5_1_1_,
        subcategor0_.is_active as is_activ6_1_1_,
        subcategor0_.name as name7_1_1_,
        subcategor0_.parent_id as parent_i9_1_1_,
        subcategor0_.updated_at as updated_8_1_1_ 
    from
        categories subcategor0_ 
    where
        subcategor0_.parent_id=?
2025-05-12 09:25:20,019 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [6]
2025-05-12 09:25:20,019 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [8]
2025-05-12 09:25:20,021 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,022 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        subcategor0_.parent_id as parent_i9_1_0_,
        subcategor0_.id as id1_1_0_,
        subcategor0_.id as id1_1_1_,
        subcategor0_.created_at as created_2_1_1_,
        subcategor0_.description as descript3_1_1_,
        subcategor0_.display_order as display_4_1_1_,
        subcategor0_.image_url as image_ur5_1_1_,
        subcategor0_.is_active as is_activ6_1_1_,
        subcategor0_.name as name7_1_1_,
        subcategor0_.parent_id as parent_i9_1_1_,
        subcategor0_.updated_at as updated_8_1_1_ 
    from
        categories subcategor0_ 
    where
        subcategor0_.parent_id=?
2025-05-12 09:25:20,023 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [7]
2025-05-12 09:25:20,022 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:20,023 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [36]
2025-05-12 09:25:20,021 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        subcategor0_.parent_id as parent_i9_1_0_,
        subcategor0_.id as id1_1_0_,
        subcategor0_.id as id1_1_1_,
        subcategor0_.created_at as created_2_1_1_,
        subcategor0_.description as descript3_1_1_,
        subcategor0_.display_order as display_4_1_1_,
        subcategor0_.image_url as image_ur5_1_1_,
        subcategor0_.is_active as is_activ6_1_1_,
        subcategor0_.name as name7_1_1_,
        subcategor0_.parent_id as parent_i9_1_1_,
        subcategor0_.updated_at as updated_8_1_1_ 
    from
        categories subcategor0_ 
    where
        subcategor0_.parent_id=?
2025-05-12 09:25:20,023 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [10]
2025-05-12 09:25:20,021 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,024 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [16]
2025-05-12 09:25:20,025 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:20,027 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,027 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:20,027 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        subcategor0_.parent_id as parent_i9_1_0_,
        subcategor0_.id as id1_1_0_,
        subcategor0_.id as id1_1_1_,
        subcategor0_.created_at as created_2_1_1_,
        subcategor0_.description as descript3_1_1_,
        subcategor0_.display_order as display_4_1_1_,
        subcategor0_.image_url as image_ur5_1_1_,
        subcategor0_.is_active as is_activ6_1_1_,
        subcategor0_.name as name7_1_1_,
        subcategor0_.parent_id as parent_i9_1_1_,
        subcategor0_.updated_at as updated_8_1_1_ 
    from
        categories subcategor0_ 
    where
        subcategor0_.parent_id=?
2025-05-12 09:25:20,027 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [36]
2025-05-12 09:25:20,028 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [17]
2025-05-12 09:25:20,027 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        subcategor0_.parent_id as parent_i9_1_0_,
        subcategor0_.id as id1_1_0_,
        subcategor0_.id as id1_1_1_,
        subcategor0_.created_at as created_2_1_1_,
        subcategor0_.description as descript3_1_1_,
        subcategor0_.display_order as display_4_1_1_,
        subcategor0_.image_url as image_ur5_1_1_,
        subcategor0_.is_active as is_activ6_1_1_,
        subcategor0_.name as name7_1_1_,
        subcategor0_.parent_id as parent_i9_1_1_,
        subcategor0_.updated_at as updated_8_1_1_ 
    from
        categories subcategor0_ 
    where
        subcategor0_.parent_id=?
2025-05-12 09:25:20,028 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [14]
2025-05-12 09:25:20,028 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [8]
2025-05-12 09:25:20,028 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,029 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [36]
2025-05-12 09:25:20,030 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        subcategor0_.parent_id as parent_i9_1_0_,
        subcategor0_.id as id1_1_0_,
        subcategor0_.id as id1_1_1_,
        subcategor0_.created_at as created_2_1_1_,
        subcategor0_.description as descript3_1_1_,
        subcategor0_.display_order as display_4_1_1_,
        subcategor0_.image_url as image_ur5_1_1_,
        subcategor0_.is_active as is_activ6_1_1_,
        subcategor0_.name as name7_1_1_,
        subcategor0_.parent_id as parent_i9_1_1_,
        subcategor0_.updated_at as updated_8_1_1_ 
    from
        categories subcategor0_ 
    where
        subcategor0_.parent_id=?
2025-05-12 09:25:20,033 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [9]
2025-05-12 09:25:20,030 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:20,031 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        subcategor0_.parent_id as parent_i9_1_0_,
        subcategor0_.id as id1_1_0_,
        subcategor0_.id as id1_1_1_,
        subcategor0_.created_at as created_2_1_1_,
        subcategor0_.description as descript3_1_1_,
        subcategor0_.display_order as display_4_1_1_,
        subcategor0_.image_url as image_ur5_1_1_,
        subcategor0_.is_active as is_activ6_1_1_,
        subcategor0_.name as name7_1_1_,
        subcategor0_.parent_id as parent_i9_1_1_,
        subcategor0_.updated_at as updated_8_1_1_ 
    from
        categories subcategor0_ 
    where
        subcategor0_.parent_id=?
2025-05-12 09:25:20,035 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [18]
2025-05-12 09:25:20,032 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,034 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,036 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [40]
2025-05-12 09:25:20,035 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [16]
2025-05-12 09:25:20,036 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [36]
2025-05-12 09:25:20,037 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,037 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:20,038 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        subcategor0_.parent_id as parent_i9_1_0_,
        subcategor0_.id as id1_1_0_,
        subcategor0_.id as id1_1_1_,
        subcategor0_.created_at as created_2_1_1_,
        subcategor0_.description as descript3_1_1_,
        subcategor0_.display_order as display_4_1_1_,
        subcategor0_.image_url as image_ur5_1_1_,
        subcategor0_.is_active as is_activ6_1_1_,
        subcategor0_.name as name7_1_1_,
        subcategor0_.parent_id as parent_i9_1_1_,
        subcategor0_.updated_at as updated_8_1_1_ 
    from
        categories subcategor0_ 
    where
        subcategor0_.parent_id=?
2025-05-12 09:25:20,039 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [37]
2025-05-12 09:25:20,039 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [5]
2025-05-12 09:25:20,037 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,037 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        subcategor0_.parent_id as parent_i9_1_0_,
        subcategor0_.id as id1_1_0_,
        subcategor0_.id as id1_1_1_,
        subcategor0_.created_at as created_2_1_1_,
        subcategor0_.description as descript3_1_1_,
        subcategor0_.display_order as display_4_1_1_,
        subcategor0_.image_url as image_ur5_1_1_,
        subcategor0_.is_active as is_activ6_1_1_,
        subcategor0_.name as name7_1_1_,
        subcategor0_.parent_id as parent_i9_1_1_,
        subcategor0_.updated_at as updated_8_1_1_ 
    from
        categories subcategor0_ 
    where
        subcategor0_.parent_id=?
2025-05-12 09:25:20,040 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [2]
2025-05-12 09:25:20,040 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [18]
2025-05-12 09:25:20,041 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [40]
2025-05-12 09:25:20,042 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        subcategor0_.parent_id as parent_i9_1_0_,
        subcategor0_.id as id1_1_0_,
        subcategor0_.id as id1_1_1_,
        subcategor0_.created_at as created_2_1_1_,
        subcategor0_.description as descript3_1_1_,
        subcategor0_.display_order as display_4_1_1_,
        subcategor0_.image_url as image_ur5_1_1_,
        subcategor0_.is_active as is_activ6_1_1_,
        subcategor0_.name as name7_1_1_,
        subcategor0_.parent_id as parent_i9_1_1_,
        subcategor0_.updated_at as updated_8_1_1_ 
    from
        categories subcategor0_ 
    where
        subcategor0_.parent_id=?
2025-05-12 09:25:20,042 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,043 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [37]
2025-05-12 09:25:20,044 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-6] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:20,043 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [10]
2025-05-12 09:25:20,047 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] RESPONSE: Status=200, Time=301ms
2025-05-12 09:25:20,047 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,045 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,050 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [41]
2025-05-12 09:25:20,050 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [38]
2025-05-12 09:25:20,047 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:20,052 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,053 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:20,053 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [41]
2025-05-12 09:25:20,049 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        subcategor0_.parent_id as parent_i9_1_0_,
        subcategor0_.id as id1_1_0_,
        subcategor0_.id as id1_1_1_,
        subcategor0_.created_at as created_2_1_1_,
        subcategor0_.description as descript3_1_1_,
        subcategor0_.display_order as display_4_1_1_,
        subcategor0_.image_url as image_ur5_1_1_,
        subcategor0_.is_active as is_activ6_1_1_,
        subcategor0_.name as name7_1_1_,
        subcategor0_.parent_id as parent_i9_1_1_,
        subcategor0_.updated_at as updated_8_1_1_ 
    from
        categories subcategor0_ 
    where
        subcategor0_.parent_id=?
2025-05-12 09:25:20,054 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [11]
2025-05-12 09:25:20,050 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] EXITING getAllProducts with result: [<200 OK OK,[Product(id=24, name=iPhone 14 Pro Max, description=iPhone 14 Pro Max 128GB, màn hình 6.7 inch Super Retina XDR, chip A16 Bionic, price=2.899E7, stock=50, imageUrl=https://example.com/images/products/iphone14promax.jpg, category=Category(id=6, name=Điện thoại iPhone, description=Các dòng điện thoại iPhone, imageUrl=https://example.com/images/categories/iphone.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=5.0, reviewCount=1, soldCount=200, isFeatured=true, discountPercentage=5.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-05-01T12:57:05), Product(id=25, name=iPhone 14 Pro, description=iPhone 14 Pro 256GB, màn hình 6.1 inch Super Retina XDR, chip A16 Bionic, price=2.699E7, stock=45, imageUrl=https://example.com/images/products/iphone14pro.jpg, category=Category(id=6, name=Điện thoại iPhone, description=Các dòng điện thoại iPhone, imageUrl=https://example.com/images/categories/iphone.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.7, reviewCount=95, soldCount=150, isFeatured=true, discountPercentage=3.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=26, name=iPhone 14, description=iPhone 14 128GB, màn hình 6.1 inch Super Retina XDR, chip A15 Bionic, price=1.999E7, stock=57, imageUrl=https://example.com/images/products/iphone14.jpg, category=Category(id=6, name=Điện thoại iPhone, description=Các dòng điện thoại iPhone, imageUrl=https://example.com/images/categories/iphone.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=0.0, reviewCount=0, soldCount=130, isFeatured=false, discountPercentage=2.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-19T19:22:05), Product(id=27, name=iPhone 13, description=iPhone 13 128GB, màn hình 6.1 inch Super Retina XDR, chip A15 Bionic, price=1.799E7, stock=36, imageUrl=https://example.com/images/products/iphone13.jpg, category=Category(id=6, name=Điện thoại iPhone, description=Các dòng điện thoại iPhone, imageUrl=https://example.com/images/categories/iphone.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.6, reviewCount=150, soldCount=300, isFeatured=false, discountPercentage=10.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-05-01T12:48:51), Product(id=28, name=Samsung Galaxy S23 Ultra, description=Samsung Galaxy S23 Ultra 256GB, màn hình 6.8 inch Dynamic AMOLED 2X, chip Snapdragon 8 Gen 2, price=2.599E7, stock=30, imageUrl=https://example.com/images/products/s23ultra.jpg, category=Category(id=7, name=Điện thoại Samsung, description=Các dòng điện thoại Samsung, imageUrl=https://example.com/images/categories/samsung.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.9, reviewCount=85, soldCount=120, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=29, name=Samsung Galaxy S23, description=Samsung Galaxy S23 128GB, màn hình 6.1 inch Dynamic AMOLED 2X, chip Snapdragon 8 Gen 2, price=1.999E7, stock=35, imageUrl=https://example.com/images/products/s23.jpg, category=Category(id=7, name=Điện thoại Samsung, description=Các dòng điện thoại Samsung, imageUrl=https://example.com/images/categories/samsung.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.7, reviewCount=70, soldCount=100, isFeatured=false, discountPercentage=5.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=30, name=Samsung Galaxy A54, description=Samsung Galaxy A54 128GB, màn hình 6.4 inch Super AMOLED, chip Exynos 1380, price=9990000.0, stock=69, imageUrl=https://example.com/images/products/a54.jpg, category=Category(id=7, name=Điện thoại Samsung, description=Các dòng điện thoại Samsung, imageUrl=https://example.com/images/categories/samsung.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.5, reviewCount=60, soldCount=200, isFeatured=false, discountPercentage=8.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-05-02T22:34:19), Product(id=31, name=Samsung Galaxy Z Fold4, description=Samsung Galaxy Z Fold4 256GB, màn hình 7.6 inch Dynamic AMOLED 2X, chip Snapdragon 8+ Gen 1, price=3.299E7, stock=18, imageUrl=https://example.com/images/products/zfold4.jpg, category=Category(id=7, name=Điện thoại Samsung, description=Các dòng điện thoại Samsung, imageUrl=https://example.com/images/categories/samsung.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.8, reviewCount=40, soldCount=50, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-05-01T12:51:55), Product(id=32, name=Xiaomi 13 Pro, description=Xiaomi 13 Pro 256GB, màn hình 6.73 inch AMOLED, chip Snapdragon 8 Gen 2, price=2.199E7, stock=25, imageUrl=https://example.com/images/products/xiaomi13pro.jpg, category=Category(id=8, name=Điện thoại Xiaomi, description=Các dòng điện thoại Xiaomi, imageUrl=https://example.com/images/categories/xiaomi.jpg, isActive=true, displayOrder=3, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.6, reviewCount=35, soldCount=60, isFeatured=false, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=33, name=Xiaomi 13, description=Xiaomi 13 128GB, màn hình 6.36 inch AMOLED, chip Snapdragon 8 Gen 2, price=1.799E7, stock=30, imageUrl=https://example.com/images/products/xiaomi13.jpg, category=Category(id=8, name=Điện thoại Xiaomi, description=Các dòng điện thoại Xiaomi, imageUrl=https://example.com/images/categories/xiaomi.jpg, isActive=true, displayOrder=3, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.5, reviewCount=30, soldCount=50, isFeatured=false, discountPercentage=5.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=34, name=Xiaomi Redmi Note 12 Pro, description=Xiaomi Redmi Note 12 Pro 128GB, màn hình 6.67 inch AMOLED, chip MediaTek Dimensity 1080, price=7990000.0, stock=80, imageUrl=https://example.com/images/products/redminote12pro.jpg, category=Category(id=8, name=Điện thoại Xiaomi, description=Các dòng điện thoại Xiaomi, imageUrl=https://example.com/images/categories/xiaomi.jpg, isActive=true, displayOrder=3, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.3, reviewCount=90, soldCount=250, isFeatured=false, discountPercentage=10.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=35, name=MacBook Pro 14 M2 Pro, description=MacBook Pro 14 inch M2 Pro 16GB RAM, 512GB SSD, price=4.599E7, stock=15, imageUrl=https://example.com/images/products/macbookpro14.jpg, category=Category(id=10, name=Laptop Apple, description=Máy tính xách tay của Apple, imageUrl=https://example.com/images/categories/mac.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.9, reviewCount=25, soldCount=30, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=36, name=MacBook Air M2, description=MacBook Air M2 8GB RAM, 256GB SSD, price=2.699E7, stock=19, imageUrl=https://example.com/images/products/macbookairm2.jpg, category=Category(id=10, name=Laptop Apple, description=Máy tính xách tay của Apple, imageUrl=https://example.com/images/categories/mac.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.8, reviewCount=40, soldCount=70, isFeatured=true, discountPercentage=5.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-05-01T12:46:55), Product(id=37, name=MacBook Pro 16 M2 Max, description=MacBook Pro 16 inch M2 Max 32GB RAM, 1TB SSD, price=6.999E7, stock=8, imageUrl=https://example.com/images/products/macbookpro16.jpg, category=Category(id=10, name=Laptop Apple, description=Máy tính xách tay của Apple, imageUrl=https://example.com/images/categories/mac.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=5.0, reviewCount=15, soldCount=20, isFeatured=false, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-22T22:59:45), Product(id=38, name=Asus ROG Strix G15, description=Asus ROG Strix G15 AMD Ryzen 7-6800H, 16GB RAM, RTX 3060, 512GB SSD, price=3.299E7, stock=17, imageUrl=https://example.com/images/products/rogg15.jpg, category=Category(id=14, name=Laptop Gaming, description=Máy tính xách tay dành cho game thủ, imageUrl=https://example.com/images/categories/gaming.jpg, isActive=true, displayOrder=5, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.7, reviewCount=55, soldCount=90, isFeatured=true, discountPercentage=3.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-05-02T22:33:52), Product(id=39, name=MSI Stealth 15M, description=MSI Stealth 15M Intel Core i7-11375H, 16GB RAM, RTX 3060, 512GB SSD, price=2.899E7, stock=14, imageUrl=https://example.com/images/products/stealth15m.jpg, category=Category(id=14, name=Laptop Gaming, description=Máy tính xách tay dành cho game thủ, imageUrl=https://example.com/images/categories/gaming.jpg, isActive=true, displayOrder=5, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.6, reviewCount=45, soldCount=80, isFeatured=false, discountPercentage=5.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-05-02T22:33:52), Product(id=40, name=Acer Predator Helios Neo, description=Acer Predator Helios Neo Intel Core i7-12700H, 16GB RAM, RTX 3070Ti, 1TB SSD, price=3.599E7, stock=12, imageUrl=https://example.com/images/products/heliosneo.jpg, category=Category(id=14, name=Laptop Gaming, description=Máy tính xách tay dành cho game thủ, imageUrl=https://example.com/images/categories/gaming.jpg, isActive=true, displayOrder=5, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.8, reviewCount=30, soldCount=50, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=41, name=AirPods Pro 2, description=Tai nghe không dây Apple AirPods Pro 2 với công nghệ chống ồn chủ động, price=5990000.0, stock=50, imageUrl=https://example.com/images/products/airpodspro2.jpg, category=Category(id=16, name=Cáp sạc, description=Các loại cáp sạc cho thiết bị, imageUrl=https://example.com/images/categories/cable.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.8, reviewCount=200, soldCount=350, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=42, name=Galaxy Buds 2 Pro, description=Tai nghe không dây Samsung Galaxy Buds 2 Pro với công nghệ Hi-Fi 24bit, price=3990000.0, stock=45, imageUrl=https://example.com/images/products/buds2pro.jpg, category=Category(id=16, name=Cáp sạc, description=Các loại cáp sạc cho thiết bị, imageUrl=https://example.com/images/categories/cable.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.5, reviewCount=150, soldCount=280, isFeatured=false, discountPercentage=10.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=43, name=Xiaomi Redmi Buds 4 Pro, description=Tai nghe không dây Xiaomi Redmi Buds 4 Pro với tính năng chống ồn, price=1690000.0, stock=80, imageUrl=https://example.com/images/products/redmibuds4pro.jpg, category=Category(id=16, name=Cáp sạc, description=Các loại cáp sạc cho thiết bị, imageUrl=https://example.com/images/categories/cable.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.3, reviewCount=100, soldCount=200, isFeatured=false, discountPercentage=15.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=44, name=Anker PowerCore Slim 10000, description=Pin dự phòng Anker PowerCore Slim 10000mAh với công nghệ PowerIQ, price=790000.0, stock=100, imageUrl=https://example.com/images/products/ankerpowercore.jpg, category=Category(id=18, name=Pin dự phòng, description=Pin sạc dự phòng, imageUrl=https://example.com/images/categories/powerbank.jpg, isActive=true, displayOrder=4, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.7, reviewCount=300, soldCount=500, isFeatured=true, discountPercentage=5.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=45, name=Mi Power Bank 3 20000, description=Pin dự phòng Xiaomi Mi Power Bank 3 20000mAh với 2 cổng USB-A và 1 cổng USB-C, price=890000.0, stock=90, imageUrl=https://example.com/images/products/mipowerbank3.jpg, category=Category(id=18, name=Pin dự phòng, description=Pin sạc dự phòng, imageUrl=https://example.com/images/categories/powerbank.jpg, isActive=true, displayOrder=4, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.6, reviewCount=250, soldCount=450, isFeatured=false, discountPercentage=10.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=46, name=Samsung Wireless Powerbank, description=Pin dự phòng Samsung Wireless 10000mAh với khả năng sạc không dây, price=1290000.0, stock=70, imageUrl=https://example.com/images/products/samsungpowerbank.jpg, category=Category(id=18, name=Pin dự phòng, description=Pin sạc dự phòng, imageUrl=https://example.com/images/categories/powerbank.jpg, isActive=true, displayOrder=4, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.4, reviewCount=180, soldCount=320, isFeatured=false, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33)],[]>]
2025-05-12 09:25:20,052 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,056 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] Method getAllProducts executed in 63 ms
2025-05-12 09:25:20,056 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [38]
2025-05-12 09:25:20,056 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        subcategor0_.parent_id as parent_i9_1_0_,
        subcategor0_.id as id1_1_0_,
        subcategor0_.id as id1_1_1_,
        subcategor0_.created_at as created_2_1_1_,
        subcategor0_.description as descript3_1_1_,
        subcategor0_.display_order as display_4_1_1_,
        subcategor0_.image_url as image_ur5_1_1_,
        subcategor0_.is_active as is_activ6_1_1_,
        subcategor0_.name as name7_1_1_,
        subcategor0_.parent_id as parent_i9_1_1_,
        subcategor0_.updated_at as updated_8_1_1_ 
    from
        categories subcategor0_ 
    where
        subcategor0_.parent_id=?
2025-05-12 09:25:20,057 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [12]
2025-05-12 09:25:20,057 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,058 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [25]
2025-05-12 09:25:20,057 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,058 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [39]
2025-05-12 09:25:20,058 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        subcategor0_.parent_id as parent_i9_1_0_,
        subcategor0_.id as id1_1_0_,
        subcategor0_.id as id1_1_1_,
        subcategor0_.created_at as created_2_1_1_,
        subcategor0_.description as descript3_1_1_,
        subcategor0_.display_order as display_4_1_1_,
        subcategor0_.image_url as image_ur5_1_1_,
        subcategor0_.is_active as is_activ6_1_1_,
        subcategor0_.name as name7_1_1_,
        subcategor0_.parent_id as parent_i9_1_1_,
        subcategor0_.updated_at as updated_8_1_1_ 
    from
        categories subcategor0_ 
    where
        subcategor0_.parent_id=?
2025-05-12 09:25:20,058 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,058 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:20,059 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,060 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [13]
2025-05-12 09:25:20,060 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [24]
2025-05-12 09:25:20,061 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [39]
2025-05-12 09:25:20,061 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:20,060 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,061 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [25]
2025-05-12 09:25:20,062 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,063 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [29]
2025-05-12 09:25:20,064 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,065 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [40]
2025-05-12 09:25:20,064 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,067 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [24]
2025-05-12 09:25:20,065 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        subcategor0_.parent_id as parent_i9_1_0_,
        subcategor0_.id as id1_1_0_,
        subcategor0_.id as id1_1_1_,
        subcategor0_.created_at as created_2_1_1_,
        subcategor0_.description as descript3_1_1_,
        subcategor0_.display_order as display_4_1_1_,
        subcategor0_.image_url as image_ur5_1_1_,
        subcategor0_.is_active as is_activ6_1_1_,
        subcategor0_.name as name7_1_1_,
        subcategor0_.parent_id as parent_i9_1_1_,
        subcategor0_.updated_at as updated_8_1_1_ 
    from
        categories subcategor0_ 
    where
        subcategor0_.parent_id=?
2025-05-12 09:25:20,067 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [14]
2025-05-12 09:25:20,066 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,068 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [29]
2025-05-12 09:25:20,068 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:20,068 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,070 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [40]
2025-05-12 09:25:20,073 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-2] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:20,068 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] User authorities: [ROLE_USER]
2025-05-12 09:25:20,074 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:20,074 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@551e7d1, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:20,074 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-3] Secured GET /products/recommended?currentUserId=1
2025-05-12 09:25:20,070 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        subcategor0_.parent_id as parent_i9_1_0_,
        subcategor0_.id as id1_1_0_,
        subcategor0_.id as id1_1_1_,
        subcategor0_.created_at as created_2_1_1_,
        subcategor0_.description as descript3_1_1_,
        subcategor0_.display_order as display_4_1_1_,
        subcategor0_.image_url as image_ur5_1_1_,
        subcategor0_.is_active as is_activ6_1_1_,
        subcategor0_.name as name7_1_1_,
        subcategor0_.parent_id as parent_i9_1_1_,
        subcategor0_.updated_at as updated_8_1_1_ 
    from
        categories subcategor0_ 
    where
        subcategor0_.parent_id=?
2025-05-12 09:25:20,070 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:20,071 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:20,076 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [3]
2025-05-12 09:25:20,077 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:20,077 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:20,077 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] RESPONSE: Status=200, Time=346ms
2025-05-12 09:25:20,077 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,080 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [41]
2025-05-12 09:25:20,081 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] ENTERING getRecommendedProducts with args: [10]
2025-05-12 09:25:20,082 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:20,080 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        subcategor0_.parent_id as parent_i9_1_0_,
        subcategor0_.id as id1_1_0_,
        subcategor0_.id as id1_1_1_,
        subcategor0_.created_at as created_2_1_1_,
        subcategor0_.description as descript3_1_1_,
        subcategor0_.display_order as display_4_1_1_,
        subcategor0_.image_url as image_ur5_1_1_,
        subcategor0_.is_active as is_activ6_1_1_,
        subcategor0_.name as name7_1_1_,
        subcategor0_.parent_id as parent_i9_1_1_,
        subcategor0_.updated_at as updated_8_1_1_ 
    from
        categories subcategor0_ 
    where
        subcategor0_.parent_id=?
2025-05-12 09:25:20,083 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:20,083 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [4]
2025-05-12 09:25:20,082 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        product0_.id as id1_11_,
        product0_.average_rating as average_2_11_,
        product0_.category_id as categor14_11_,
        product0_.created_at as created_3_11_,
        product0_.description as descript4_11_,
        product0_.discount_percentage as discount5_11_,
        product0_.image_url as image_ur6_11_,
        product0_.is_featured as is_featu7_11_,
        product0_.name as name8_11_,
        product0_.price as price9_11_,
        product0_.review_count as review_10_11_,
        product0_.sold_count as sold_co11_11_,
        product0_.stock as stock12_11_,
        product0_.updated_at as updated13_11_ 
    from
        products product0_ 
    order by
        product0_.average_rating desc limit ?
2025-05-12 09:25:20,082 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,084 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [25]
2025-05-12 09:25:20,085 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,086 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [25]
2025-05-12 09:25:20,085 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        subcategor0_.parent_id as parent_i9_1_0_,
        subcategor0_.id as id1_1_0_,
        subcategor0_.id as id1_1_1_,
        subcategor0_.created_at as created_2_1_1_,
        subcategor0_.description as descript3_1_1_,
        subcategor0_.display_order as display_4_1_1_,
        subcategor0_.image_url as image_ur5_1_1_,
        subcategor0_.is_active as is_activ6_1_1_,
        subcategor0_.name as name7_1_1_,
        subcategor0_.parent_id as parent_i9_1_1_,
        subcategor0_.updated_at as updated_8_1_1_ 
    from
        categories subcategor0_ 
    where
        subcategor0_.parent_id=?
2025-05-12 09:25:20,086 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:20,087 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [6]
2025-05-12 09:25:20,085 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,087 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [15]
2025-05-12 09:25:20,087 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [41]
2025-05-12 09:25:20,087 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,088 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [26]
2025-05-12 09:25:20,088 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        subcategor0_.parent_id as parent_i9_1_0_,
        subcategor0_.id as id1_1_0_,
        subcategor0_.id as id1_1_1_,
        subcategor0_.created_at as created_2_1_1_,
        subcategor0_.description as descript3_1_1_,
        subcategor0_.display_order as display_4_1_1_,
        subcategor0_.image_url as image_ur5_1_1_,
        subcategor0_.is_active as is_activ6_1_1_,
        subcategor0_.name as name7_1_1_,
        subcategor0_.parent_id as parent_i9_1_1_,
        subcategor0_.updated_at as updated_8_1_1_ 
    from
        categories subcategor0_ 
    where
        subcategor0_.parent_id=?
2025-05-12 09:25:20,089 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [16]
2025-05-12 09:25:20,088 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:20,089 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:20,090 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [10]
2025-05-12 09:25:20,089 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] User authorities: [ROLE_USER]
2025-05-12 09:25:20,091 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:20,091 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@67b7521c, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:20,091 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-5] Secured GET /products/max-price?currentUserId=1
2025-05-12 09:25:20,090 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,090 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,090 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        subcategor0_.parent_id as parent_i9_1_0_,
        subcategor0_.id as id1_1_0_,
        subcategor0_.id as id1_1_1_,
        subcategor0_.created_at as created_2_1_1_,
        subcategor0_.description as descript3_1_1_,
        subcategor0_.display_order as display_4_1_1_,
        subcategor0_.image_url as image_ur5_1_1_,
        subcategor0_.is_active as is_activ6_1_1_,
        subcategor0_.name as name7_1_1_,
        subcategor0_.parent_id as parent_i9_1_1_,
        subcategor0_.updated_at as updated_8_1_1_ 
    from
        categories subcategor0_ 
    where
        subcategor0_.parent_id=?
2025-05-12 09:25:20,092 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [42]
2025-05-12 09:25:20,093 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [26]
2025-05-12 09:25:20,094 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [17]
2025-05-12 09:25:20,096 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,095 ERROR com.example.tmdt.exception.GlobalExceptionHandler [http-nio-8080-exec-5] Unhandled exception occurred
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "max-price"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:96)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.tmdt.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:78)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.example.tmdt.filter.RequestLoggingFilter.doFilterInternal(RequestLoggingFilter.java:58)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.NumberFormatException: For input string: "max-price"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Long.parseLong(Long.java:711)
	at java.base/java.lang.Long.valueOf(Long.java:1163)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:214)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:729)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:125)
	... 100 common frames omitted
2025-05-12 09:25:20,098 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [42]
2025-05-12 09:25:20,099 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        subcategor0_.parent_id as parent_i9_1_0_,
        subcategor0_.id as id1_1_0_,
        subcategor0_.id as id1_1_1_,
        subcategor0_.created_at as created_2_1_1_,
        subcategor0_.description as descript3_1_1_,
        subcategor0_.display_order as display_4_1_1_,
        subcategor0_.image_url as image_ur5_1_1_,
        subcategor0_.is_active as is_activ6_1_1_,
        subcategor0_.name as name7_1_1_,
        subcategor0_.parent_id as parent_i9_1_1_,
        subcategor0_.updated_at as updated_8_1_1_ 
    from
        categories subcategor0_ 
    where
        subcategor0_.parent_id=?
2025-05-12 09:25:20,100 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [18]
2025-05-12 09:25:20,099 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,100 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [27]
2025-05-12 09:25:20,101 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-5] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:20,099 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:20,103 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [7]
2025-05-12 09:25:20,101 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,106 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [43]
2025-05-12 09:25:20,104 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] RESPONSE: Status=500, Time=104ms
2025-05-12 09:25:20,104 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        subcategor0_.parent_id as parent_i9_1_0_,
        subcategor0_.id as id1_1_0_,
        subcategor0_.id as id1_1_1_,
        subcategor0_.created_at as created_2_1_1_,
        subcategor0_.description as descript3_1_1_,
        subcategor0_.display_order as display_4_1_1_,
        subcategor0_.image_url as image_ur5_1_1_,
        subcategor0_.is_active as is_activ6_1_1_,
        subcategor0_.name as name7_1_1_,
        subcategor0_.parent_id as parent_i9_1_1_,
        subcategor0_.updated_at as updated_8_1_1_ 
    from
        categories subcategor0_ 
    where
        subcategor0_.parent_id=?
2025-05-12 09:25:20,105 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,109 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [27]
2025-05-12 09:25:20,108 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [5]
2025-05-12 09:25:20,109 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:20,109 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,110 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [14]
2025-05-12 09:25:20,110 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [43]
2025-05-12 09:25:20,110 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,111 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,112 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [44]
2025-05-12 09:25:20,113 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [28]
2025-05-12 09:25:20,113 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:20,115 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-9] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:20,115 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,116 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [44]
2025-05-12 09:25:20,116 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [16]
2025-05-12 09:25:20,115 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,117 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] RESPONSE: Status=200, Time=174ms
2025-05-12 09:25:20,119 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [28]
2025-05-12 09:25:20,118 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,123 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] EXITING getRecommendedProducts with result: [<200 OK OK,[Product(id=24, name=iPhone 14 Pro Max, description=iPhone 14 Pro Max 128GB, màn hình 6.7 inch Super Retina XDR, chip A16 Bionic, price=2.899E7, stock=50, imageUrl=https://example.com/images/products/iphone14promax.jpg, category=Category(id=6, name=Điện thoại iPhone, description=Các dòng điện thoại iPhone, imageUrl=https://example.com/images/categories/iphone.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=5.0, reviewCount=1, soldCount=200, isFeatured=true, discountPercentage=5.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-05-01T12:57:05), Product(id=37, name=MacBook Pro 16 M2 Max, description=MacBook Pro 16 inch M2 Max 32GB RAM, 1TB SSD, price=6.999E7, stock=8, imageUrl=https://example.com/images/products/macbookpro16.jpg, category=Category(id=10, name=Laptop Apple, description=Máy tính xách tay của Apple, imageUrl=https://example.com/images/categories/mac.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=5.0, reviewCount=15, soldCount=20, isFeatured=false, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-22T22:59:45), Product(id=28, name=Samsung Galaxy S23 Ultra, description=Samsung Galaxy S23 Ultra 256GB, màn hình 6.8 inch Dynamic AMOLED 2X, chip Snapdragon 8 Gen 2, price=2.599E7, stock=30, imageUrl=https://example.com/images/products/s23ultra.jpg, category=Category(id=7, name=Điện thoại Samsung, description=Các dòng điện thoại Samsung, imageUrl=https://example.com/images/categories/samsung.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.9, reviewCount=85, soldCount=120, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=35, name=MacBook Pro 14 M2 Pro, description=MacBook Pro 14 inch M2 Pro 16GB RAM, 512GB SSD, price=4.599E7, stock=15, imageUrl=https://example.com/images/products/macbookpro14.jpg, category=Category(id=10, name=Laptop Apple, description=Máy tính xách tay của Apple, imageUrl=https://example.com/images/categories/mac.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.9, reviewCount=25, soldCount=30, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=31, name=Samsung Galaxy Z Fold4, description=Samsung Galaxy Z Fold4 256GB, màn hình 7.6 inch Dynamic AMOLED 2X, chip Snapdragon 8+ Gen 1, price=3.299E7, stock=18, imageUrl=https://example.com/images/products/zfold4.jpg, category=Category(id=7, name=Điện thoại Samsung, description=Các dòng điện thoại Samsung, imageUrl=https://example.com/images/categories/samsung.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.8, reviewCount=40, soldCount=50, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-05-01T12:51:55), Product(id=36, name=MacBook Air M2, description=MacBook Air M2 8GB RAM, 256GB SSD, price=2.699E7, stock=19, imageUrl=https://example.com/images/products/macbookairm2.jpg, category=Category(id=10, name=Laptop Apple, description=Máy tính xách tay của Apple, imageUrl=https://example.com/images/categories/mac.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.8, reviewCount=40, soldCount=70, isFeatured=true, discountPercentage=5.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-05-01T12:46:55), Product(id=40, name=Acer Predator Helios Neo, description=Acer Predator Helios Neo Intel Core i7-12700H, 16GB RAM, RTX 3070Ti, 1TB SSD, price=3.599E7, stock=12, imageUrl=https://example.com/images/products/heliosneo.jpg, category=Category(id=14, name=Laptop Gaming, description=Máy tính xách tay dành cho game thủ, imageUrl=https://example.com/images/categories/gaming.jpg, isActive=true, displayOrder=5, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.8, reviewCount=30, soldCount=50, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=41, name=AirPods Pro 2, description=Tai nghe không dây Apple AirPods Pro 2 với công nghệ chống ồn chủ động, price=5990000.0, stock=50, imageUrl=https://example.com/images/products/airpodspro2.jpg, category=Category(id=16, name=Cáp sạc, description=Các loại cáp sạc cho thiết bị, imageUrl=https://example.com/images/categories/cable.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.8, reviewCount=200, soldCount=350, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=25, name=iPhone 14 Pro, description=iPhone 14 Pro 256GB, màn hình 6.1 inch Super Retina XDR, chip A16 Bionic, price=2.699E7, stock=45, imageUrl=https://example.com/images/products/iphone14pro.jpg, category=Category(id=6, name=Điện thoại iPhone, description=Các dòng điện thoại iPhone, imageUrl=https://example.com/images/categories/iphone.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.7, reviewCount=95, soldCount=150, isFeatured=true, discountPercentage=3.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=29, name=Samsung Galaxy S23, description=Samsung Galaxy S23 128GB, màn hình 6.1 inch Dynamic AMOLED 2X, chip Snapdragon 8 Gen 2, price=1.999E7, stock=35, imageUrl=https://example.com/images/products/s23.jpg, category=Category(id=7, name=Điện thoại Samsung, description=Các dòng điện thoại Samsung, imageUrl=https://example.com/images/categories/samsung.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.7, reviewCount=70, soldCount=100, isFeatured=false, discountPercentage=5.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33)],[]>]
2025-05-12 09:25:20,125 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [45]
2025-05-12 09:25:20,125 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] Method getRecommendedProducts executed in 44 ms
2025-05-12 09:25:20,126 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,126 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,127 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [29]
2025-05-12 09:25:20,127 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [45]
2025-05-12 09:25:20,128 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,128 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [24]
2025-05-12 09:25:20,128 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,129 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [29]
2025-05-12 09:25:20,129 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,129 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [46]
2025-05-12 09:25:20,129 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,130 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [24]
2025-05-12 09:25:20,130 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,130 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,130 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [30]
2025-05-12 09:25:20,131 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [46]
2025-05-12 09:25:20,131 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:20,131 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,131 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:20,132 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [30]
2025-05-12 09:25:20,132 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-4] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:20,133 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] RESPONSE: Status=200, Time=545ms
2025-05-12 09:25:20,134 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,135 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,136 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [31]
2025-05-12 09:25:20,137 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [37]
2025-05-12 09:25:20,140 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,141 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,142 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [37]
2025-05-12 09:25:20,142 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [31]
2025-05-12 09:25:20,144 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,145 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [32]
2025-05-12 09:25:20,145 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,146 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [28]
2025-05-12 09:25:20,146 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,147 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,148 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [32]
2025-05-12 09:25:20,148 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [28]
2025-05-12 09:25:20,150 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,150 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,153 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [33]
2025-05-12 09:25:20,152 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:20,155 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,155 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,156 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [33]
2025-05-12 09:25:20,156 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:20,160 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,159 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,161 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [34]
2025-05-12 09:25:20,161 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [31]
2025-05-12 09:25:20,163 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,163 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,164 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [34]
2025-05-12 09:25:20,165 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [31]
2025-05-12 09:25:20,169 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,170 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,172 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:20,172 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [36]
2025-05-12 09:25:20,174 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,174 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,175 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:20,175 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [36]
2025-05-12 09:25:20,176 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,176 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,177 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [36]
2025-05-12 09:25:20,177 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [40]
2025-05-12 09:25:20,179 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,179 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,180 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [36]
2025-05-12 09:25:20,180 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [40]
2025-05-12 09:25:20,182 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,182 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,183 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [37]
2025-05-12 09:25:20,183 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [41]
2025-05-12 09:25:20,186 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,186 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,188 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [41]
2025-05-12 09:25:20,188 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [37]
2025-05-12 09:25:20,190 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,190 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,191 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [38]
2025-05-12 09:25:20,191 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [25]
2025-05-12 09:25:20,192 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,193 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [38]
2025-05-12 09:25:20,192 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,194 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [25]
2025-05-12 09:25:20,196 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,197 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [39]
2025-05-12 09:25:20,197 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,197 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [29]
2025-05-12 09:25:20,199 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,199 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,200 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [29]
2025-05-12 09:25:20,200 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [39]
2025-05-12 09:25:20,203 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-3] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:20,204 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] RESPONSE: Status=200, Time=203ms
2025-05-12 09:25:20,202 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,204 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [40]
2025-05-12 09:25:20,206 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,208 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [40]
2025-05-12 09:25:20,211 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,211 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [41]
2025-05-12 09:25:20,214 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,215 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [41]
2025-05-12 09:25:20,217 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,218 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [42]
2025-05-12 09:25:20,220 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,222 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [42]
2025-05-12 09:25:20,224 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,225 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [43]
2025-05-12 09:25:20,228 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,228 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [43]
2025-05-12 09:25:20,230 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,231 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [44]
2025-05-12 09:25:20,232 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,233 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [44]
2025-05-12 09:25:20,236 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,238 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [45]
2025-05-12 09:25:20,240 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,241 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [45]
2025-05-12 09:25:20,243 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:20,244 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [46]
2025-05-12 09:25:20,246 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:20,247 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [46]
2025-05-12 09:25:20,250 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-1] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:20,251 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] RESPONSE: Status=200, Time=371ms
2025-05-12 09:25:21,071 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] REQUEST: OPTIONS /wishlist
2025-05-12 09:25:21,071 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=*/*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, access-control-request-method=GET, access-control-request-headers=authorization, referer=http://localhost:3000/, origin=http://localhost:3000, connection=keep-alive, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=4
2025-05-12 09:25:21,071 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] RESPONSE: Status=200 (OK - CORS Preflight)
2025-05-12 09:25:21,074 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] REQUEST: OPTIONS /wishlist
2025-05-12 09:25:21,075 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=*/*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, access-control-request-method=GET, access-control-request-headers=authorization, referer=http://localhost:3000/, origin=http://localhost:3000, connection=keep-alive, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=4
2025-05-12 09:25:21,075 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] RESPONSE: Status=200 (OK - CORS Preflight)
2025-05-12 09:25:21,075 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] REQUEST: GET /wishlist
2025-05-12 09:25:21,076 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,076 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-8] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,076 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-8] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,076 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,077 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] REQUEST: OPTIONS /wishlist
2025-05-12 09:25:21,077 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,077 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Found Authorization header with Bearer token
2025-05-12 09:25:21,077 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,077 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] REQUEST: OPTIONS /wishlist
2025-05-12 09:25:21,078 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=*/*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, access-control-request-method=GET, access-control-request-headers=authorization, referer=http://localhost:3000/, origin=http://localhost:3000, connection=keep-alive, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=4
2025-05-12 09:25:21,078 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] RESPONSE: Status=200 (OK - CORS Preflight)
2025-05-12 09:25:21,078 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-8] JWT token validation successful
2025-05-12 09:25:21,077 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=*/*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, access-control-request-method=GET, access-control-request-headers=authorization, referer=http://localhost:3000/, origin=http://localhost:3000, connection=keep-alive, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=4
2025-05-12 09:25:21,078 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] RESPONSE: Status=200 (OK - CORS Preflight)
2025-05-12 09:25:21,079 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] REQUEST: GET /wishlist
2025-05-12 09:25:21,079 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] REQUEST: GET /wishlist
2025-05-12 09:25:21,080 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,080 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-8] Extracted username from JWT token: a1234
2025-05-12 09:25:21,080 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,081 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Valid JWT token found for user: a1234
2025-05-12 09:25:21,081 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-9] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,081 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-6] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,082 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-9] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,083 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] REQUEST: GET /wishlist
2025-05-12 09:25:21,086 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,086 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-3] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,086 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-3] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,086 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,086 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,086 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Found Authorization header with Bearer token
2025-05-12 09:25:21,087 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,089 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-6] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,089 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] REQUEST: GET /wishlist
2025-05-12 09:25:21,083 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,090 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,083 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] REQUEST: OPTIONS /wishlist
2025-05-12 09:25:21,091 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=*/*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, access-control-request-method=GET, access-control-request-headers=authorization, referer=http://localhost:3000/, origin=http://localhost:3000, connection=keep-alive, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site, priority=u=4
2025-05-12 09:25:21,091 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] RESPONSE: Status=200 (OK - CORS Preflight)
2025-05-12 09:25:21,089 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,092 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,092 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Found Authorization header with Bearer token
2025-05-12 09:25:21,092 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,089 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,090 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,090 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-3] JWT token validation successful
2025-05-12 09:25:21,093 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Found Authorization header with Bearer token
2025-05-12 09:25:21,093 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,093 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,093 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-3] Extracted username from JWT token: a1234
2025-05-12 09:25:21,094 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Valid JWT token found for user: a1234
2025-05-12 09:25:21,098 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-1] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,098 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,098 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] REQUEST: GET /wishlist
2025-05-12 09:25:21,100 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,100 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,100 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-7] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,099 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,101 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,101 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-7] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,098 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-6] JWT token validation successful
2025-05-12 09:25:21,100 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-9] JWT token validation successful
2025-05-12 09:25:21,103 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-1] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,102 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,105 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,104 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,106 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,104 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-6] Extracted username from JWT token: a1234
2025-05-12 09:25:21,104 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-9] Extracted username from JWT token: a1234
2025-05-12 09:25:21,106 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Valid JWT token found for user: a1234
2025-05-12 09:25:21,106 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Valid JWT token found for user: a1234
2025-05-12 09:25:21,108 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,108 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] User authorities: [ROLE_USER]
2025-05-12 09:25:21,108 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,105 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,108 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@4ccedaa7, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,109 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Found Authorization header with Bearer token
2025-05-12 09:25:21,109 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,109 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-8] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,106 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,109 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Found Authorization header with Bearer token
2025-05-12 09:25:21,109 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,111 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,111 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] User authorities: [ROLE_USER]
2025-05-12 09:25:21,111 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,111 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@232d5246, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,111 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-3] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,111 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,110 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-7] JWT token validation successful
2025-05-12 09:25:21,113 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,113 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-7] Extracted username from JWT token: a1234
2025-05-12 09:25:21,110 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,115 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,114 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Valid JWT token found for user: a1234
2025-05-12 09:25:21,117 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,111 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-1] JWT token validation successful
2025-05-12 09:25:21,120 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,112 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,121 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,121 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,123 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,117 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,119 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,125 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,125 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,122 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-1] Extracted username from JWT token: a1234
2025-05-12 09:25:21,126 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Valid JWT token found for user: a1234
2025-05-12 09:25:21,129 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,130 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,131 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,132 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] User authorities: [ROLE_USER]
2025-05-12 09:25:21,133 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,134 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,134 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@4730866f, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,135 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-9] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,135 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-8] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,134 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,135 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,135 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] User authorities: [ROLE_USER]
2025-05-12 09:25:21,136 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,136 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@658635a0, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,139 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-6] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,140 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-8] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,142 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-8] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,141 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,145 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,145 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,144 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,145 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,147 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-3] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,148 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-3] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,148 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-8] Get wishlist request for user: 1
2025-05-12 09:25:21,149 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,148 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-3] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,149 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,149 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] User authorities: [ROLE_USER]
2025-05-12 09:25:21,149 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-9] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,149 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] User authorities: [ROLE_USER]
2025-05-12 09:25:21,150 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,150 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@5c6bb29a, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,150 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-1] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,149 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,150 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@536c0c0c, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,150 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,150 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-7] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,151 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-9] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,151 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-9] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,151 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,151 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-9] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,151 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-9] Get wishlist request for user: 1
2025-05-12 09:25:21,149 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,152 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-3] Get wishlist request for user: 1
2025-05-12 09:25:21,154 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,155 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,153 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,158 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-6] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,156 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,160 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,154 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,161 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,161 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,164 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-6] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,167 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-6] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,170 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-7] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,170 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,171 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-6] Get wishlist request for user: 1
2025-05-12 09:25:21,174 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-7] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,175 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-7] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,177 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-7] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,177 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,178 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,178 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-7] Get wishlist request for user: 1
2025-05-12 09:25:21,181 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,181 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,182 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,182 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,182 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,182 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,182 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,183 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,184 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,184 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,185 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,184 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,186 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,186 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,186 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,186 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,187 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,186 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,187 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,187 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,187 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@5c45bab1],[]>]
2025-05-12 09:25:21,187 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,188 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] Method getWishlist executed in 43 ms
2025-05-12 09:25:21,189 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@2ab830c0],[]>]
2025-05-12 09:25:21,189 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,189 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@c9a70b8],[]>]
2025-05-12 09:25:21,189 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] Method getWishlist executed in 19 ms
2025-05-12 09:25:21,189 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] Method getWishlist executed in 40 ms
2025-05-12 09:25:21,189 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-9] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@66090cbc],[]>]
2025-05-12 09:25:21,190 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-9] Method getWishlist executed in 39 ms
2025-05-12 09:25:21,191 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-6] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,191 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-8] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,192 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] RESPONSE: Status=200, Time=116ms
2025-05-12 09:25:21,192 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] RESPONSE: Status=200, Time=112ms
2025-05-12 09:25:21,193 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-3] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,193 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] RESPONSE: Status=200, Time=107ms
2025-05-12 09:25:21,193 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-9] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,194 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] RESPONSE: Status=200, Time=113ms
2025-05-12 09:25:21,194 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,196 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] REQUEST: GET /wishlist
2025-05-12 09:25:21,196 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,196 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] REQUEST: GET /wishlist
2025-05-12 09:25:21,196 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,196 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,197 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-2] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,197 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-9] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,194 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-7] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@232c0ee7],[]>]
2025-05-12 09:25:21,196 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] REQUEST: GET /wishlist
2025-05-12 09:25:21,197 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-2] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,198 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,197 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] REQUEST: GET /wishlist
2025-05-12 09:25:21,198 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-9] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,198 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-5] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,198 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-7] Method getWishlist executed in 21 ms
2025-05-12 09:25:21,199 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,199 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,199 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Found Authorization header with Bearer token
2025-05-12 09:25:21,199 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,198 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,200 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-9] JWT token validation successful
2025-05-12 09:25:21,200 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,200 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Found Authorization header with Bearer token
2025-05-12 09:25:21,200 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,200 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-5] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,200 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-2] JWT token validation successful
2025-05-12 09:25:21,200 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-9] Extracted username from JWT token: a1234
2025-05-12 09:25:21,200 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Valid JWT token found for user: a1234
2025-05-12 09:25:21,198 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,200 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-7] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,200 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] RESPONSE: Status=200, Time=100ms
2025-05-12 09:25:21,200 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-4] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,201 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-4] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,200 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,201 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,201 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Found Authorization header with Bearer token
2025-05-12 09:25:21,202 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,202 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] REQUEST: GET /wishlist
2025-05-12 09:25:21,201 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-2] Extracted username from JWT token: a1234
2025-05-12 09:25:21,202 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Valid JWT token found for user: a1234
2025-05-12 09:25:21,202 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,202 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,203 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-1] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,202 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,203 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,203 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,203 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Found Authorization header with Bearer token
2025-05-12 09:25:21,204 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,204 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,204 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-8] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,204 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,204 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-8] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,203 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-5] JWT token validation successful
2025-05-12 09:25:21,205 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,204 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-4] JWT token validation successful
2025-05-12 09:25:21,205 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-1] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,205 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,206 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-4] Extracted username from JWT token: a1234
2025-05-12 09:25:21,206 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,206 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,206 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,205 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,205 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-5] Extracted username from JWT token: a1234
2025-05-12 09:25:21,206 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Valid JWT token found for user: a1234
2025-05-12 09:25:21,206 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Valid JWT token found for user: a1234
2025-05-12 09:25:21,206 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Found Authorization header with Bearer token
2025-05-12 09:25:21,206 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,207 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-1] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,208 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,209 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,209 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,209 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-1] Get wishlist request for user: 1
2025-05-12 09:25:21,210 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,208 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-8] JWT token validation successful
2025-05-12 09:25:21,211 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,208 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,213 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,210 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,216 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,216 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,216 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] User authorities: [ROLE_USER]
2025-05-12 09:25:21,216 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,217 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@6145fdff, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,212 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-8] Extracted username from JWT token: a1234
2025-05-12 09:25:21,219 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Valid JWT token found for user: a1234
2025-05-12 09:25:21,219 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-2] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,212 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,223 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] User authorities: [ROLE_USER]
2025-05-12 09:25:21,224 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,224 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@c352fed, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,224 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-9] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,224 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,225 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,217 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,226 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,228 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,226 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,218 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,227 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,230 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] User authorities: [ROLE_USER]
2025-05-12 09:25:21,231 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,231 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,231 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,231 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,230 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,231 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,231 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@28605f38, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,233 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] User authorities: [ROLE_USER]
2025-05-12 09:25:21,233 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,233 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,233 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-4] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,233 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@278a2911, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,233 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-5] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,234 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,236 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,235 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,236 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] User authorities: [ROLE_USER]
2025-05-12 09:25:21,236 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,236 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-9] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,236 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@692d5360, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,236 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-2] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,236 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-8] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,236 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-9] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,236 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-9] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,236 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-2] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,236 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,237 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@37e61622],[]>]
2025-05-12 09:25:21,238 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] Method getWishlist executed in 29 ms
2025-05-12 09:25:21,238 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-2] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,238 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,238 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,239 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-1] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,238 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-9] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,239 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,239 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-9] Get wishlist request for user: 1
2025-05-12 09:25:21,238 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,239 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-2] Get wishlist request for user: 1
2025-05-12 09:25:21,240 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] RESPONSE: Status=200, Time=149ms
2025-05-12 09:25:21,240 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,241 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,243 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-5] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,242 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,243 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,243 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,243 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] REQUEST: GET /wishlist
2025-05-12 09:25:21,244 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-5] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,244 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,243 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,245 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-5] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,245 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-4] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,246 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,247 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-8] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,244 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,249 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-4] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,249 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-6] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,249 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-6] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,249 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-4] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,250 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-4] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,246 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,250 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-4] Get wishlist request for user: 1
2025-05-12 09:25:21,250 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-5] Get wishlist request for user: 1
2025-05-12 09:25:21,250 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,250 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,250 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,250 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Found Authorization header with Bearer token
2025-05-12 09:25:21,250 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,251 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,251 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,251 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,251 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,252 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,252 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-8] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,253 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-6] JWT token validation successful
2025-05-12 09:25:21,253 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,254 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,254 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,254 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,253 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-8] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,253 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,255 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,253 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,255 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@11fb48eb],[]>]
2025-05-12 09:25:21,256 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] Method getWishlist executed in 18 ms
2025-05-12 09:25:21,256 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,256 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,254 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-6] Extracted username from JWT token: a1234
2025-05-12 09:25:21,257 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,256 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,257 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Valid JWT token found for user: a1234
2025-05-12 09:25:21,257 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-8] Get wishlist request for user: 1
2025-05-12 09:25:21,259 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,259 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-2] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,259 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,259 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-9] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@4041d949],[]>]
2025-05-12 09:25:21,259 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-4] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@2d1a573],[]>]
2025-05-12 09:25:21,260 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-4] Method getWishlist executed in 10 ms
2025-05-12 09:25:21,260 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-9] Method getWishlist executed in 22 ms
2025-05-12 09:25:21,260 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,261 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,262 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-4] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,262 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,262 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-9] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,263 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] RESPONSE: Status=200, Time=63ms
2025-05-12 09:25:21,263 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,260 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] RESPONSE: Status=200, Time=64ms
2025-05-12 09:25:21,263 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] RESPONSE: Status=200, Time=66ms
2025-05-12 09:25:21,263 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@74ce75b9],[]>]
2025-05-12 09:25:21,264 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] Method getWishlist executed in 18 ms
2025-05-12 09:25:21,264 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] REQUEST: GET /wishlist
2025-05-12 09:25:21,264 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,265 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-9] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,265 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-9] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,265 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,265 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,265 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,266 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,266 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,266 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,267 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Found Authorization header with Bearer token
2025-05-12 09:25:21,267 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,267 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] REQUEST: GET /wishlist
2025-05-12 09:25:21,268 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-9] JWT token validation successful
2025-05-12 09:25:21,268 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,268 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-5] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,268 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-10] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,269 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-10] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,268 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] RESPONSE: Status=200, Time=70ms
2025-05-12 09:25:21,270 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] REQUEST: GET /wishlist
2025-05-12 09:25:21,270 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,271 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-5] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,271 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-5] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,272 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-9] Extracted username from JWT token: a1234
2025-05-12 09:25:21,271 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,272 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Valid JWT token found for user: a1234
2025-05-12 09:25:21,272 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,273 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,273 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Found Authorization header with Bearer token
2025-05-12 09:25:21,273 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,273 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,273 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] REQUEST: GET /wishlist
2025-05-12 09:25:21,272 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,275 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-10] JWT token validation successful
2025-05-12 09:25:21,277 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,277 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Found Authorization header with Bearer token
2025-05-12 09:25:21,276 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,278 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,278 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,274 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,277 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,279 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-10] Extracted username from JWT token: a1234
2025-05-12 09:25:21,279 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] User authorities: [ROLE_USER]
2025-05-12 09:25:21,279 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,279 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@3be08fd9, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,279 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-1] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,279 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Valid JWT token found for user: a1234
2025-05-12 09:25:21,279 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-1] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,279 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-6] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,280 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,280 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,280 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Found Authorization header with Bearer token
2025-05-12 09:25:21,280 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,281 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-5] JWT token validation successful
2025-05-12 09:25:21,281 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-5] Extracted username from JWT token: a1234
2025-05-12 09:25:21,281 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-1] JWT token validation successful
2025-05-12 09:25:21,281 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@7e1204bb],[]>]
2025-05-12 09:25:21,281 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] Method getWishlist executed in 25 ms
2025-05-12 09:25:21,281 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,281 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Valid JWT token found for user: a1234
2025-05-12 09:25:21,282 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,282 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-8] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,283 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] RESPONSE: Status=200, Time=80ms
2025-05-12 09:25:21,282 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-1] Extracted username from JWT token: a1234
2025-05-12 09:25:21,284 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] REQUEST: GET /wishlist
2025-05-12 09:25:21,284 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Valid JWT token found for user: a1234
2025-05-12 09:25:21,285 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,284 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,284 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,286 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,286 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,285 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,285 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,287 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,287 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-4] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,288 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,288 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-4] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,287 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] User authorities: [ROLE_USER]
2025-05-12 09:25:21,288 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,288 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,288 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,288 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@417625c6, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,289 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,289 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-9] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,289 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,288 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,289 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,290 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Found Authorization header with Bearer token
2025-05-12 09:25:21,290 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,290 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,290 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,291 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,292 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-6] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,293 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-4] JWT token validation successful
2025-05-12 09:25:21,293 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,293 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] User authorities: [ROLE_USER]
2025-05-12 09:25:21,293 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,293 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@7823fa10, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,293 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-5] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,294 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-4] Extracted username from JWT token: a1234
2025-05-12 09:25:21,294 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Valid JWT token found for user: a1234
2025-05-12 09:25:21,294 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-6] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,294 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-6] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,295 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,295 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-6] Get wishlist request for user: 1
2025-05-12 09:25:21,296 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,295 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,296 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,297 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,298 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,298 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,299 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,297 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] User authorities: [ROLE_USER]
2025-05-12 09:25:21,297 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,298 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,299 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] User authorities: [ROLE_USER]
2025-05-12 09:25:21,300 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,300 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,300 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@7249fcae, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,300 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-10] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,299 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,300 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@47ccbe4e, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,301 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-1] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,300 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,301 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,301 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,302 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,302 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,302 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,303 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-5] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,303 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,305 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-9] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,305 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-9] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,306 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-10] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,305 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,304 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-5] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,307 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-9] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,307 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-10] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,307 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-5] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,307 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-9] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,307 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-9] Get wishlist request for user: 1
2025-05-12 09:25:21,307 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,307 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-5] Get wishlist request for user: 1
2025-05-12 09:25:21,308 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-10] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,308 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,308 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,308 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-10] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,308 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] User authorities: [ROLE_USER]
2025-05-12 09:25:21,309 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,309 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-10] Get wishlist request for user: 1
2025-05-12 09:25:21,309 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@5b91d0c, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,309 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,310 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-4] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,310 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,308 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@f312241],[]>]
2025-05-12 09:25:21,310 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,309 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,311 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] Method getWishlist executed in 16 ms
2025-05-12 09:25:21,311 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,311 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,312 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,312 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,313 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,313 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,314 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-6] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,314 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] RESPONSE: Status=200, Time=65ms
2025-05-12 09:25:21,314 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,314 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,314 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,314 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,315 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,315 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] REQUEST: GET /wishlist
2025-05-12 09:25:21,316 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,316 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-2] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,316 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@76c5c33a],[]>]
2025-05-12 09:25:21,316 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-2] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,316 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] Method getWishlist executed in 9 ms
2025-05-12 09:25:21,316 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,317 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,317 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,318 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-5] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,317 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,318 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,318 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,318 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,318 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Found Authorization header with Bearer token
2025-05-12 09:25:21,318 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,319 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-1] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,319 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,319 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-1] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,319 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-2] JWT token validation successful
2025-05-12 09:25:21,319 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] RESPONSE: Status=200, Time=48ms
2025-05-12 09:25:21,319 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-9] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@344d0399],[]>]
2025-05-12 09:25:21,320 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-1] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,321 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,320 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-9] Method getWishlist executed in 13 ms
2025-05-12 09:25:21,321 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-2] Extracted username from JWT token: a1234
2025-05-12 09:25:21,321 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Valid JWT token found for user: a1234
2025-05-12 09:25:21,321 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-1] Get wishlist request for user: 1
2025-05-12 09:25:21,321 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-10] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@5952b70f],[]>]
2025-05-12 09:25:21,322 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,323 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,323 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] REQUEST: GET /wishlist
2025-05-12 09:25:21,324 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-9] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,324 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,324 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,324 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-10] Method getWishlist executed in 16 ms
2025-05-12 09:25:21,324 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,325 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-3] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,325 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-3] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,326 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-4] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,326 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-10] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,326 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,327 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,327 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Found Authorization header with Bearer token
2025-05-12 09:25:21,327 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,327 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,327 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-4] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,327 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,328 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] RESPONSE: Status=200, Time=60ms
2025-05-12 09:25:21,328 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-4] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,328 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,328 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,328 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-4] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,327 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-3] JWT token validation successful
2025-05-12 09:25:21,328 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] RESPONSE: Status=200, Time=60ms
2025-05-12 09:25:21,328 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-4] Get wishlist request for user: 1
2025-05-12 09:25:21,329 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] REQUEST: GET /wishlist
2025-05-12 09:25:21,329 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,330 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-7] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,330 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-7] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,329 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,330 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,330 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,330 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-3] Extracted username from JWT token: a1234
2025-05-12 09:25:21,330 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,330 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,330 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Valid JWT token found for user: a1234
2025-05-12 09:25:21,331 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Found Authorization header with Bearer token
2025-05-12 09:25:21,331 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,331 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,332 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] REQUEST: GET /wishlist
2025-05-12 09:25:21,332 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-7] JWT token validation successful
2025-05-12 09:25:21,332 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,332 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-8] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,332 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,333 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-8] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,333 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@11ce51aa],[]>]
2025-05-12 09:25:21,333 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] Method getWishlist executed in 12 ms
2025-05-12 09:25:21,333 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-7] Extracted username from JWT token: a1234
2025-05-12 09:25:21,333 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,333 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,333 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Found Authorization header with Bearer token
2025-05-12 09:25:21,333 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Valid JWT token found for user: a1234
2025-05-12 09:25:21,332 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,333 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,334 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,332 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,334 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] User authorities: [ROLE_USER]
2025-05-12 09:25:21,336 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-1] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,335 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,336 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@173c682c, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,336 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-2] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,336 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,333 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,337 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,335 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,338 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-8] JWT token validation successful
2025-05-12 09:25:21,338 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,339 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] RESPONSE: Status=200, Time=60ms
2025-05-12 09:25:21,340 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-8] Extracted username from JWT token: a1234
2025-05-12 09:25:21,337 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,340 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Valid JWT token found for user: a1234
2025-05-12 09:25:21,340 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,342 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-4] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@24393f44],[]>]
2025-05-12 09:25:21,342 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] REQUEST: GET /wishlist
2025-05-12 09:25:21,343 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,342 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,343 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-6] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,343 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-6] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,343 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,344 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,344 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,344 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,344 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Found Authorization header with Bearer token
2025-05-12 09:25:21,344 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,343 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-4] Method getWishlist executed in 15 ms
2025-05-12 09:25:21,345 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,345 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-6] JWT token validation successful
2025-05-12 09:25:21,345 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,346 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-6] Extracted username from JWT token: a1234
2025-05-12 09:25:21,347 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Valid JWT token found for user: a1234
2025-05-12 09:25:21,347 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,347 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-4] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,348 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] RESPONSE: Status=200, Time=61ms
2025-05-12 09:25:21,348 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,348 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] User authorities: [ROLE_USER]
2025-05-12 09:25:21,349 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,349 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@683091d0, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,349 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,349 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-3] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,349 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,350 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-2] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,350 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-2] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,350 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-2] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,350 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,350 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-2] Get wishlist request for user: 1
2025-05-12 09:25:21,351 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,349 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,352 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,352 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] REQUEST: GET /wishlist
2025-05-12 09:25:21,352 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,352 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,353 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,352 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,353 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,354 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-5] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,354 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-5] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,353 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] User authorities: [ROLE_USER]
2025-05-12 09:25:21,354 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,354 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@6bad53f4, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,355 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-7] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,355 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,354 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,354 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,355 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,356 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Found Authorization header with Bearer token
2025-05-12 09:25:21,355 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,356 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,356 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] User authorities: [ROLE_USER]
2025-05-12 09:25:21,356 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,358 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,358 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,357 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,358 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,358 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-5] JWT token validation successful
2025-05-12 09:25:21,358 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@1aea85f, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,359 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-8] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,359 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,360 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] User authorities: [ROLE_USER]
2025-05-12 09:25:21,360 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,361 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-3] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,360 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-5] Extracted username from JWT token: a1234
2025-05-12 09:25:21,361 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-7] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,361 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-3] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,361 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,362 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-7] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,361 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Valid JWT token found for user: a1234
2025-05-12 09:25:21,361 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,362 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,362 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@359ae9d3, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,362 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-6] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,362 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-3] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,362 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-7] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,362 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,363 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-7] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,363 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@16b9e033],[]>]
2025-05-12 09:25:21,363 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-7] Get wishlist request for user: 1
2025-05-12 09:25:21,363 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,363 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,363 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-3] Get wishlist request for user: 1
2025-05-12 09:25:21,363 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,363 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] Method getWishlist executed in 13 ms
2025-05-12 09:25:21,364 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,364 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,365 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-2] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,364 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,366 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] RESPONSE: Status=200, Time=50ms
2025-05-12 09:25:21,366 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,367 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,366 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,367 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,368 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,368 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-8] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,367 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,368 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] REQUEST: GET /products/search
2025-05-12 09:25:21,368 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,369 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,369 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,369 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,369 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,370 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,369 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-8] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,371 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-10] Securing GET /products/search?page=0&size=12&sort=newest&currentUserId=1
2025-05-12 09:25:21,371 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-7] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@42c72bfb],[]>]
2025-05-12 09:25:21,372 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-8] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,372 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-7] Method getWishlist executed in 9 ms
2025-05-12 09:25:21,372 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-10] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,372 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,372 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-8] Get wishlist request for user: 1
2025-05-12 09:25:21,372 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Processing request to URL: /products/search, Method: GET
2025-05-12 09:25:21,373 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,374 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-7] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,374 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] RESPONSE: Status=200, Time=45ms
2025-05-12 09:25:21,374 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,374 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,374 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Found Authorization header with Bearer token
2025-05-12 09:25:21,374 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-6] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,374 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,374 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-6] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,374 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,375 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] User authorities: [ROLE_USER]
2025-05-12 09:25:21,375 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-6] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,375 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,374 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,375 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@56889d2d, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,375 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] REQUEST: GET /products
2025-05-12 09:25:21,375 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,375 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,376 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-5] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,376 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-9] Securing GET /products?keyword=&category=&page=0&size=12&sort=newest&currentUserId=1
2025-05-12 09:25:21,376 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-9] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,376 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,376 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@155cb738],[]>]
2025-05-12 09:25:21,377 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Processing request to URL: /products, Method: GET
2025-05-12 09:25:21,377 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] Method getWishlist executed in 14 ms
2025-05-12 09:25:21,376 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-6] Get wishlist request for user: 1
2025-05-12 09:25:21,377 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-10] JWT token validation successful
2025-05-12 09:25:21,377 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,377 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Found Authorization header with Bearer token
2025-05-12 09:25:21,378 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,378 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,378 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-9] JWT token validation successful
2025-05-12 09:25:21,378 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-10] Extracted username from JWT token: a1234
2025-05-12 09:25:21,378 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,378 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,378 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-9] Extracted username from JWT token: a1234
2025-05-12 09:25:21,378 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,378 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Valid JWT token found for user: a1234
2025-05-12 09:25:21,379 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-3] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,378 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Valid JWT token found for user: a1234
2025-05-12 09:25:21,379 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,379 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] RESPONSE: Status=200, Time=54ms
2025-05-12 09:25:21,380 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,380 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,381 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] REQUEST: GET /wishlist
2025-05-12 09:25:21,382 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,382 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-1] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,382 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-1] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,382 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,382 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,382 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-5] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,382 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Found Authorization header with Bearer token
2025-05-12 09:25:21,382 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,382 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-5] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,382 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,383 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-1] JWT token validation successful
2025-05-12 09:25:21,383 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-5] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,383 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-1] Extracted username from JWT token: a1234
2025-05-12 09:25:21,383 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Valid JWT token found for user: a1234
2025-05-12 09:25:21,383 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,380 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,383 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-5] Get wishlist request for user: 1
2025-05-12 09:25:21,384 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,380 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,384 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,381 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,384 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,385 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,385 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,385 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,386 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,386 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,386 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,387 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,387 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@7da266cd],[]>]
2025-05-12 09:25:21,387 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,387 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,387 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] Method getWishlist executed in 11 ms
2025-05-12 09:25:21,388 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,389 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,389 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] User authorities: [ROLE_USER]
2025-05-12 09:25:21,389 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@77e739b8],[]>]
2025-05-12 09:25:21,389 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] Method getWishlist executed in 17 ms
2025-05-12 09:25:21,390 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-6] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,390 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,390 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@801cf9e, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,390 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-10] Secured GET /products/search?page=0&size=12&sort=newest&currentUserId=1
2025-05-12 09:25:21,390 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-8] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,391 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] RESPONSE: Status=200, Time=48ms
2025-05-12 09:25:21,390 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,392 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] User authorities: [ROLE_USER]
2025-05-12 09:25:21,392 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,392 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@58092d7, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,392 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-9] Secured GET /products?keyword=&category=&page=0&size=12&sort=newest&currentUserId=1
2025-05-12 09:25:21,392 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] RESPONSE: Status=200, Time=60ms
2025-05-12 09:25:21,391 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,393 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,391 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,392 ERROR com.example.tmdt.exception.GlobalExceptionHandler [http-nio-8080-exec-10] Unhandled exception occurred
org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'query' for method parameter type String is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValueInternal(RequestParamMethodArgumentResolver.java:218)
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:193)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:114)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:96)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.example.tmdt.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:78)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at com.example.tmdt.filter.RequestLoggingFilter.doFilterInternal(RequestLoggingFilter.java:58)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-05-12 09:25:21,393 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] REQUEST: GET /wishlist
2025-05-12 09:25:21,393 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,393 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,394 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-8] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,393 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-9] ENTERING getAllProducts
2025-05-12 09:25:21,394 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-10] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,393 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] REQUEST: GET /wishlist
2025-05-12 09:25:21,394 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] RESPONSE: Status=500, Time=24ms
2025-05-12 09:25:21,395 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-8] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,395 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,395 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,395 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,395 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@4494e81c],[]>]
2025-05-12 09:25:21,395 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-4] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,395 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] Method getWishlist executed in 12 ms
2025-05-12 09:25:21,395 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Found Authorization header with Bearer token
2025-05-12 09:25:21,395 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-4] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,395 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,396 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,396 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,396 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Found Authorization header with Bearer token
2025-05-12 09:25:21,396 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,396 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-5] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,396 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        product0_.id as id1_11_,
        product0_.average_rating as average_2_11_,
        product0_.category_id as categor14_11_,
        product0_.created_at as created_3_11_,
        product0_.description as descript4_11_,
        product0_.discount_percentage as discount5_11_,
        product0_.image_url as image_ur6_11_,
        product0_.is_featured as is_featu7_11_,
        product0_.name as name8_11_,
        product0_.price as price9_11_,
        product0_.review_count as review_10_11_,
        product0_.sold_count as sold_co11_11_,
        product0_.stock as stock12_11_,
        product0_.updated_at as updated13_11_ 
    from
        products product0_
2025-05-12 09:25:21,396 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] RESPONSE: Status=200, Time=43ms
2025-05-12 09:25:21,397 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-8] JWT token validation successful
2025-05-12 09:25:21,396 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,397 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,398 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-4] JWT token validation successful
2025-05-12 09:25:21,398 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-4] Extracted username from JWT token: a1234
2025-05-12 09:25:21,398 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Valid JWT token found for user: a1234
2025-05-12 09:25:21,398 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-8] Extracted username from JWT token: a1234
2025-05-12 09:25:21,399 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Valid JWT token found for user: a1234
2025-05-12 09:25:21,400 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,400 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:21,401 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] REQUEST: GET /wishlist
2025-05-12 09:25:21,401 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,401 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,402 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,402 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-7] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,402 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [6]
2025-05-12 09:25:21,402 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-7] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,402 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] REQUEST: GET /wishlist
2025-05-12 09:25:21,402 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,402 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-3] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,402 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,402 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-3] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,402 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,403 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Found Authorization header with Bearer token
2025-05-12 09:25:21,403 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,403 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,403 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,403 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Found Authorization header with Bearer token
2025-05-12 09:25:21,403 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,403 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,403 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,403 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] User authorities: [ROLE_USER]
2025-05-12 09:25:21,404 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,404 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:21,404 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-3] JWT token validation successful
2025-05-12 09:25:21,404 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-7] JWT token validation successful
2025-05-12 09:25:21,404 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,405 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [7]
2025-05-12 09:25:21,404 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,405 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-3] Extracted username from JWT token: a1234
2025-05-12 09:25:21,406 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Valid JWT token found for user: a1234
2025-05-12 09:25:21,405 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-7] Extracted username from JWT token: a1234
2025-05-12 09:25:21,406 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@d580ccc, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,407 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-1] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,407 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,406 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Valid JWT token found for user: a1234
2025-05-12 09:25:21,407 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:21,408 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [8]
2025-05-12 09:25:21,408 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,408 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,409 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] User authorities: [ROLE_USER]
2025-05-12 09:25:21,409 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,409 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,409 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@6395b5e4, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,409 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,408 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,409 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-8] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,410 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,410 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,411 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,411 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:21,412 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [10]
2025-05-12 09:25:21,412 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,413 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,412 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,413 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,413 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] User authorities: [ROLE_USER]
2025-05-12 09:25:21,413 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,413 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:21,413 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,414 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@70157bd5, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,414 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-4] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,414 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [14]
2025-05-12 09:25:21,414 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-1] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,414 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,415 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:21,415 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,415 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-1] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,415 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [16]
2025-05-12 09:25:21,416 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-1] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,416 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,416 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,416 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] User authorities: [ROLE_USER]
2025-05-12 09:25:21,416 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-1] Get wishlist request for user: 1
2025-05-12 09:25:21,417 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,417 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,417 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] User authorities: [ROLE_USER]
2025-05-12 09:25:21,417 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@6bea52ae, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,417 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,417 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-7] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,417 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@453a9ef6, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,417 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-3] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,418 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        category0_.id as id1_1_0_,
        category0_.created_at as created_2_1_0_,
        category0_.description as descript3_1_0_,
        category0_.display_order as display_4_1_0_,
        category0_.image_url as image_ur5_1_0_,
        category0_.is_active as is_activ6_1_0_,
        category0_.name as name7_1_0_,
        category0_.parent_id as parent_i9_1_0_,
        category0_.updated_at as updated_8_1_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
2025-05-12 09:25:21,419 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [18]
2025-05-12 09:25:21,420 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-8] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,420 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-8] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,420 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,420 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-8] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,420 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,420 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,420 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,420 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,420 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,421 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,422 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,421 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-8] Get wishlist request for user: 1
2025-05-12 09:25:21,424 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-4] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,424 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,423 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-9] EXITING getAllProducts with result: [<200 OK OK,[Product(id=24, name=iPhone 14 Pro Max, description=iPhone 14 Pro Max 128GB, màn hình 6.7 inch Super Retina XDR, chip A16 Bionic, price=2.899E7, stock=50, imageUrl=https://example.com/images/products/iphone14promax.jpg, category=Category(id=6, name=Điện thoại iPhone, description=Các dòng điện thoại iPhone, imageUrl=https://example.com/images/categories/iphone.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=5.0, reviewCount=1, soldCount=200, isFeatured=true, discountPercentage=5.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-05-01T12:57:05), Product(id=25, name=iPhone 14 Pro, description=iPhone 14 Pro 256GB, màn hình 6.1 inch Super Retina XDR, chip A16 Bionic, price=2.699E7, stock=45, imageUrl=https://example.com/images/products/iphone14pro.jpg, category=Category(id=6, name=Điện thoại iPhone, description=Các dòng điện thoại iPhone, imageUrl=https://example.com/images/categories/iphone.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.7, reviewCount=95, soldCount=150, isFeatured=true, discountPercentage=3.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=26, name=iPhone 14, description=iPhone 14 128GB, màn hình 6.1 inch Super Retina XDR, chip A15 Bionic, price=1.999E7, stock=57, imageUrl=https://example.com/images/products/iphone14.jpg, category=Category(id=6, name=Điện thoại iPhone, description=Các dòng điện thoại iPhone, imageUrl=https://example.com/images/categories/iphone.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=0.0, reviewCount=0, soldCount=130, isFeatured=false, discountPercentage=2.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-19T19:22:05), Product(id=27, name=iPhone 13, description=iPhone 13 128GB, màn hình 6.1 inch Super Retina XDR, chip A15 Bionic, price=1.799E7, stock=36, imageUrl=https://example.com/images/products/iphone13.jpg, category=Category(id=6, name=Điện thoại iPhone, description=Các dòng điện thoại iPhone, imageUrl=https://example.com/images/categories/iphone.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.6, reviewCount=150, soldCount=300, isFeatured=false, discountPercentage=10.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-05-01T12:48:51), Product(id=28, name=Samsung Galaxy S23 Ultra, description=Samsung Galaxy S23 Ultra 256GB, màn hình 6.8 inch Dynamic AMOLED 2X, chip Snapdragon 8 Gen 2, price=2.599E7, stock=30, imageUrl=https://example.com/images/products/s23ultra.jpg, category=Category(id=7, name=Điện thoại Samsung, description=Các dòng điện thoại Samsung, imageUrl=https://example.com/images/categories/samsung.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.9, reviewCount=85, soldCount=120, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=29, name=Samsung Galaxy S23, description=Samsung Galaxy S23 128GB, màn hình 6.1 inch Dynamic AMOLED 2X, chip Snapdragon 8 Gen 2, price=1.999E7, stock=35, imageUrl=https://example.com/images/products/s23.jpg, category=Category(id=7, name=Điện thoại Samsung, description=Các dòng điện thoại Samsung, imageUrl=https://example.com/images/categories/samsung.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.7, reviewCount=70, soldCount=100, isFeatured=false, discountPercentage=5.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=30, name=Samsung Galaxy A54, description=Samsung Galaxy A54 128GB, màn hình 6.4 inch Super AMOLED, chip Exynos 1380, price=9990000.0, stock=69, imageUrl=https://example.com/images/products/a54.jpg, category=Category(id=7, name=Điện thoại Samsung, description=Các dòng điện thoại Samsung, imageUrl=https://example.com/images/categories/samsung.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.5, reviewCount=60, soldCount=200, isFeatured=false, discountPercentage=8.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-05-02T22:34:19), Product(id=31, name=Samsung Galaxy Z Fold4, description=Samsung Galaxy Z Fold4 256GB, màn hình 7.6 inch Dynamic AMOLED 2X, chip Snapdragon 8+ Gen 1, price=3.299E7, stock=18, imageUrl=https://example.com/images/products/zfold4.jpg, category=Category(id=7, name=Điện thoại Samsung, description=Các dòng điện thoại Samsung, imageUrl=https://example.com/images/categories/samsung.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.8, reviewCount=40, soldCount=50, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-05-01T12:51:55), Product(id=32, name=Xiaomi 13 Pro, description=Xiaomi 13 Pro 256GB, màn hình 6.73 inch AMOLED, chip Snapdragon 8 Gen 2, price=2.199E7, stock=25, imageUrl=https://example.com/images/products/xiaomi13pro.jpg, category=Category(id=8, name=Điện thoại Xiaomi, description=Các dòng điện thoại Xiaomi, imageUrl=https://example.com/images/categories/xiaomi.jpg, isActive=true, displayOrder=3, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.6, reviewCount=35, soldCount=60, isFeatured=false, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=33, name=Xiaomi 13, description=Xiaomi 13 128GB, màn hình 6.36 inch AMOLED, chip Snapdragon 8 Gen 2, price=1.799E7, stock=30, imageUrl=https://example.com/images/products/xiaomi13.jpg, category=Category(id=8, name=Điện thoại Xiaomi, description=Các dòng điện thoại Xiaomi, imageUrl=https://example.com/images/categories/xiaomi.jpg, isActive=true, displayOrder=3, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.5, reviewCount=30, soldCount=50, isFeatured=false, discountPercentage=5.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=34, name=Xiaomi Redmi Note 12 Pro, description=Xiaomi Redmi Note 12 Pro 128GB, màn hình 6.67 inch AMOLED, chip MediaTek Dimensity 1080, price=7990000.0, stock=80, imageUrl=https://example.com/images/products/redminote12pro.jpg, category=Category(id=8, name=Điện thoại Xiaomi, description=Các dòng điện thoại Xiaomi, imageUrl=https://example.com/images/categories/xiaomi.jpg, isActive=true, displayOrder=3, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.3, reviewCount=90, soldCount=250, isFeatured=false, discountPercentage=10.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=35, name=MacBook Pro 14 M2 Pro, description=MacBook Pro 14 inch M2 Pro 16GB RAM, 512GB SSD, price=4.599E7, stock=15, imageUrl=https://example.com/images/products/macbookpro14.jpg, category=Category(id=10, name=Laptop Apple, description=Máy tính xách tay của Apple, imageUrl=https://example.com/images/categories/mac.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.9, reviewCount=25, soldCount=30, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=36, name=MacBook Air M2, description=MacBook Air M2 8GB RAM, 256GB SSD, price=2.699E7, stock=19, imageUrl=https://example.com/images/products/macbookairm2.jpg, category=Category(id=10, name=Laptop Apple, description=Máy tính xách tay của Apple, imageUrl=https://example.com/images/categories/mac.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.8, reviewCount=40, soldCount=70, isFeatured=true, discountPercentage=5.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-05-01T12:46:55), Product(id=37, name=MacBook Pro 16 M2 Max, description=MacBook Pro 16 inch M2 Max 32GB RAM, 1TB SSD, price=6.999E7, stock=8, imageUrl=https://example.com/images/products/macbookpro16.jpg, category=Category(id=10, name=Laptop Apple, description=Máy tính xách tay của Apple, imageUrl=https://example.com/images/categories/mac.jpg, isActive=true, displayOrder=1, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=5.0, reviewCount=15, soldCount=20, isFeatured=false, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-22T22:59:45), Product(id=38, name=Asus ROG Strix G15, description=Asus ROG Strix G15 AMD Ryzen 7-6800H, 16GB RAM, RTX 3060, 512GB SSD, price=3.299E7, stock=17, imageUrl=https://example.com/images/products/rogg15.jpg, category=Category(id=14, name=Laptop Gaming, description=Máy tính xách tay dành cho game thủ, imageUrl=https://example.com/images/categories/gaming.jpg, isActive=true, displayOrder=5, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.7, reviewCount=55, soldCount=90, isFeatured=true, discountPercentage=3.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-05-02T22:33:52), Product(id=39, name=MSI Stealth 15M, description=MSI Stealth 15M Intel Core i7-11375H, 16GB RAM, RTX 3060, 512GB SSD, price=2.899E7, stock=14, imageUrl=https://example.com/images/products/stealth15m.jpg, category=Category(id=14, name=Laptop Gaming, description=Máy tính xách tay dành cho game thủ, imageUrl=https://example.com/images/categories/gaming.jpg, isActive=true, displayOrder=5, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.6, reviewCount=45, soldCount=80, isFeatured=false, discountPercentage=5.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-05-02T22:33:52), Product(id=40, name=Acer Predator Helios Neo, description=Acer Predator Helios Neo Intel Core i7-12700H, 16GB RAM, RTX 3070Ti, 1TB SSD, price=3.599E7, stock=12, imageUrl=https://example.com/images/products/heliosneo.jpg, category=Category(id=14, name=Laptop Gaming, description=Máy tính xách tay dành cho game thủ, imageUrl=https://example.com/images/categories/gaming.jpg, isActive=true, displayOrder=5, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.8, reviewCount=30, soldCount=50, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=41, name=AirPods Pro 2, description=Tai nghe không dây Apple AirPods Pro 2 với công nghệ chống ồn chủ động, price=5990000.0, stock=50, imageUrl=https://example.com/images/products/airpodspro2.jpg, category=Category(id=16, name=Cáp sạc, description=Các loại cáp sạc cho thiết bị, imageUrl=https://example.com/images/categories/cable.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.8, reviewCount=200, soldCount=350, isFeatured=true, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=42, name=Galaxy Buds 2 Pro, description=Tai nghe không dây Samsung Galaxy Buds 2 Pro với công nghệ Hi-Fi 24bit, price=3990000.0, stock=45, imageUrl=https://example.com/images/products/buds2pro.jpg, category=Category(id=16, name=Cáp sạc, description=Các loại cáp sạc cho thiết bị, imageUrl=https://example.com/images/categories/cable.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.5, reviewCount=150, soldCount=280, isFeatured=false, discountPercentage=10.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=43, name=Xiaomi Redmi Buds 4 Pro, description=Tai nghe không dây Xiaomi Redmi Buds 4 Pro với tính năng chống ồn, price=1690000.0, stock=80, imageUrl=https://example.com/images/products/redmibuds4pro.jpg, category=Category(id=16, name=Cáp sạc, description=Các loại cáp sạc cho thiết bị, imageUrl=https://example.com/images/categories/cable.jpg, isActive=true, displayOrder=2, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.3, reviewCount=100, soldCount=200, isFeatured=false, discountPercentage=15.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=44, name=Anker PowerCore Slim 10000, description=Pin dự phòng Anker PowerCore Slim 10000mAh với công nghệ PowerIQ, price=790000.0, stock=100, imageUrl=https://example.com/images/products/ankerpowercore.jpg, category=Category(id=18, name=Pin dự phòng, description=Pin sạc dự phòng, imageUrl=https://example.com/images/categories/powerbank.jpg, isActive=true, displayOrder=4, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.7, reviewCount=300, soldCount=500, isFeatured=true, discountPercentage=5.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=45, name=Mi Power Bank 3 20000, description=Pin dự phòng Xiaomi Mi Power Bank 3 20000mAh với 2 cổng USB-A và 1 cổng USB-C, price=890000.0, stock=90, imageUrl=https://example.com/images/products/mipowerbank3.jpg, category=Category(id=18, name=Pin dự phòng, description=Pin sạc dự phòng, imageUrl=https://example.com/images/categories/powerbank.jpg, isActive=true, displayOrder=4, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.6, reviewCount=250, soldCount=450, isFeatured=false, discountPercentage=10.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33), Product(id=46, name=Samsung Wireless Powerbank, description=Pin dự phòng Samsung Wireless 10000mAh với khả năng sạc không dây, price=1290000.0, stock=70, imageUrl=https://example.com/images/products/samsungpowerbank.jpg, category=Category(id=18, name=Pin dự phòng, description=Pin sạc dự phòng, imageUrl=https://example.com/images/categories/powerbank.jpg, isActive=true, displayOrder=4, createdAt=2025-04-20T01:47:13, updatedAt=2025-04-20T01:47:13), averageRating=4.4, reviewCount=180, soldCount=320, isFeatured=false, discountPercentage=0.0, createdAt=2025-04-20T01:49:33, updatedAt=2025-04-20T01:49:33)],[]>]
2025-05-12 09:25:21,424 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,424 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-9] Method getAllProducts executed in 31 ms
2025-05-12 09:25:21,425 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,425 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-4] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,424 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-3] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,426 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,428 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-4] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,426 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,428 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-3] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,428 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,428 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [24]
2025-05-12 09:25:21,427 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,429 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-4] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,430 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@760ee520],[]>]
2025-05-12 09:25:21,439 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-4] Get wishlist request for user: 1
2025-05-12 09:25:21,429 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-3] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,431 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:21,439 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,440 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,440 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-3] Get wishlist request for user: 1
2025-05-12 09:25:21,440 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,440 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [24]
2025-05-12 09:25:21,440 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,439 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] Method getWishlist executed in 23 ms
2025-05-12 09:25:21,441 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,442 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-1] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,442 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] RESPONSE: Status=200, Time=60ms
2025-05-12 09:25:21,442 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,443 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,443 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,444 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] REQUEST: GET /wishlist
2025-05-12 09:25:21,444 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,444 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-6] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,444 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-6] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,445 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,445 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,445 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Found Authorization header with Bearer token
2025-05-12 09:25:21,445 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,446 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-6] JWT token validation successful
2025-05-12 09:25:21,447 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-6] Extracted username from JWT token: a1234
2025-05-12 09:25:21,447 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,447 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,447 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Valid JWT token found for user: a1234
2025-05-12 09:25:21,447 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,448 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,448 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,446 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,447 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,448 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,449 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,449 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [25]
2025-05-12 09:25:21,450 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@1175ffb],[]>]
2025-05-12 09:25:21,451 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] Method getWishlist executed in 30 ms
2025-05-12 09:25:21,451 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,451 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,452 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-8] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,452 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] RESPONSE: Status=200, Time=59ms
2025-05-12 09:25:21,453 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:21,454 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [25]
2025-05-12 09:25:21,454 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-4] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@7578eb0c],[]>]
2025-05-12 09:25:21,454 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-4] Method getWishlist executed in 25 ms
2025-05-12 09:25:21,455 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] REQUEST: GET /wishlist
2025-05-12 09:25:21,455 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,455 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-2] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,455 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-2] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,456 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,453 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,455 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-7] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,456 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,457 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-4] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,456 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,458 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [26]
2025-05-12 09:25:21,456 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,456 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,458 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-7] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,458 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Found Authorization header with Bearer token
2025-05-12 09:25:21,458 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,459 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-7] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,458 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] RESPONSE: Status=200, Time=63ms
2025-05-12 09:25:21,459 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-7] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,459 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-7] Get wishlist request for user: 1
2025-05-12 09:25:21,460 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,460 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,459 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,461 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@40398b69],[]>]
2025-05-12 09:25:21,461 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] Method getWishlist executed in 21 ms
2025-05-12 09:25:21,460 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:21,462 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-2] JWT token validation successful
2025-05-12 09:25:21,463 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-2] Extracted username from JWT token: a1234
2025-05-12 09:25:21,464 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Valid JWT token found for user: a1234
2025-05-12 09:25:21,464 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,463 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] REQUEST: GET /wishlist
2025-05-12 09:25:21,463 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [26]
2025-05-12 09:25:21,462 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,465 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-3] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,465 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,464 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,465 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,466 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-10] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,466 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-10] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,465 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] RESPONSE: Status=200, Time=63ms
2025-05-12 09:25:21,466 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,467 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,467 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Found Authorization header with Bearer token
2025-05-12 09:25:21,467 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,467 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-10] JWT token validation successful
2025-05-12 09:25:21,468 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-10] Extracted username from JWT token: a1234
2025-05-12 09:25:21,468 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Valid JWT token found for user: a1234
2025-05-12 09:25:21,466 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,470 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,470 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,471 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,472 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,472 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,471 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,472 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,472 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] REQUEST: GET /wishlist
2025-05-12 09:25:21,473 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,473 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-5] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,473 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-5] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,473 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,474 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,470 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,474 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,474 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [27]
2025-05-12 09:25:21,472 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,473 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-7] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@4e00684c],[]>]
2025-05-12 09:25:21,474 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] User authorities: [ROLE_USER]
2025-05-12 09:25:21,474 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-7] Method getWishlist executed in 15 ms
2025-05-12 09:25:21,474 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,475 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:21,476 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Found Authorization header with Bearer token
2025-05-12 09:25:21,476 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,477 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-7] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,477 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,477 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] User authorities: [ROLE_USER]
2025-05-12 09:25:21,477 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,477 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-5] JWT token validation successful
2025-05-12 09:25:21,477 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@1de23273, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,477 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-10] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,477 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-5] Extracted username from JWT token: a1234
2025-05-12 09:25:21,477 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Valid JWT token found for user: a1234
2025-05-12 09:25:21,475 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,478 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@2e7c77c7, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,478 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-6] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,477 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,478 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] RESPONSE: Status=200, Time=76ms
2025-05-12 09:25:21,479 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [27]
2025-05-12 09:25:21,478 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] User authorities: [ROLE_USER]
2025-05-12 09:25:21,480 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,481 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@5fb26894, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,481 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] REQUEST: GET /wishlist
2025-05-12 09:25:21,481 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-2] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,481 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,481 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-1] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,482 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-1] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,482 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,482 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,481 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,481 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,482 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,481 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,483 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,482 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Found Authorization header with Bearer token
2025-05-12 09:25:21,483 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,484 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,484 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-1] JWT token validation successful
2025-05-12 09:25:21,484 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,483 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [28]
2025-05-12 09:25:21,485 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-1] Extracted username from JWT token: a1234
2025-05-12 09:25:21,486 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Valid JWT token found for user: a1234
2025-05-12 09:25:21,486 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,487 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,486 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:21,488 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-6] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,488 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [28]
2025-05-12 09:25:21,488 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-6] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,489 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-6] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,489 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,489 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-6] Get wishlist request for user: 1
2025-05-12 09:25:21,489 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,490 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-10] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,490 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-2] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,490 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,490 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [29]
2025-05-12 09:25:21,489 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,490 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,491 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-2] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,491 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,491 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-10] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,491 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-2] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,491 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-10] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,492 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-10] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,492 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-10] Get wishlist request for user: 1
2025-05-12 09:25:21,492 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,491 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,493 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,493 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,494 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,493 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:21,495 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,495 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [29]
2025-05-12 09:25:21,493 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-2] Get wishlist request for user: 1
2025-05-12 09:25:21,495 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,494 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,496 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,497 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [30]
2025-05-12 09:25:21,496 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] User authorities: [ROLE_USER]
2025-05-12 09:25:21,494 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,497 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,496 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,498 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:21,497 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,498 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@1ed08de8, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,498 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,498 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-5] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,498 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [30]
2025-05-12 09:25:21,498 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,498 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,499 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,499 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,500 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@4c0b8b3b],[]>]
2025-05-12 09:25:21,500 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] Method getWishlist executed in 11 ms
2025-05-12 09:25:21,502 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-6] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,501 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,502 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,503 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,504 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,504 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,501 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,504 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,505 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] User authorities: [ROLE_USER]
2025-05-12 09:25:21,505 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [31]
2025-05-12 09:25:21,505 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,504 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,505 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@15a0f, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,504 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] RESPONSE: Status=200, Time=60ms
2025-05-12 09:25:21,506 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] REQUEST: GET /wishlist
2025-05-12 09:25:21,506 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,506 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-10] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@73622cc8],[]>]
2025-05-12 09:25:21,506 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-6] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,506 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-1] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,506 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-6] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,507 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:21,506 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-10] Method getWishlist executed in 14 ms
2025-05-12 09:25:21,506 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,507 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,508 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [31]
2025-05-12 09:25:21,508 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,508 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Found Authorization header with Bearer token
2025-05-12 09:25:21,508 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,508 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,509 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-6] JWT token validation successful
2025-05-12 09:25:21,509 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,509 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [32]
2025-05-12 09:25:21,510 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-5] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,509 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@43a90f4d],[]>]
2025-05-12 09:25:21,510 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] Method getWishlist executed in 19 ms
2025-05-12 09:25:21,511 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-5] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,510 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-6] Extracted username from JWT token: a1234
2025-05-12 09:25:21,511 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-5] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,511 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Valid JWT token found for user: a1234
2025-05-12 09:25:21,511 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-10] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,511 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] RESPONSE: Status=200, Time=45ms
2025-05-12 09:25:21,510 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,513 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,512 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:21,513 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,514 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [32]
2025-05-12 09:25:21,514 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-2] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,513 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] REQUEST: GET /wishlist
2025-05-12 09:25:21,514 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] RESPONSE: Status=200, Time=59ms
2025-05-12 09:25:21,514 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,514 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,515 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,516 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] REQUEST: GET /wishlist
2025-05-12 09:25:21,515 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-5] Get wishlist request for user: 1
2025-05-12 09:25:21,517 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,517 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-10] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,516 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,517 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-2] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,518 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-10] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,518 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,518 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,518 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,518 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Found Authorization header with Bearer token
2025-05-12 09:25:21,518 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,518 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-1] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,519 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-2] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,516 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,518 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,519 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-1] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,519 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,520 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,520 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,520 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Found Authorization header with Bearer token
2025-05-12 09:25:21,520 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,519 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [33]
2025-05-12 09:25:21,520 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-1] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,521 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,523 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,521 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:21,524 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [33]
2025-05-12 09:25:21,524 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,522 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-2] JWT token validation successful
2025-05-12 09:25:21,523 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,523 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-1] Get wishlist request for user: 1
2025-05-12 09:25:21,522 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-10] JWT token validation successful
2025-05-12 09:25:21,525 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-2] Extracted username from JWT token: a1234
2025-05-12 09:25:21,525 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Valid JWT token found for user: a1234
2025-05-12 09:25:21,526 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] User authorities: [ROLE_USER]
2025-05-12 09:25:21,527 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-10] Extracted username from JWT token: a1234
2025-05-12 09:25:21,527 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Valid JWT token found for user: a1234
2025-05-12 09:25:21,525 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,526 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,528 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [34]
2025-05-12 09:25:21,527 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,528 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,529 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,527 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,529 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@8747299, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,529 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,530 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,530 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-6] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,529 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,529 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:21,531 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,531 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [34]
2025-05-12 09:25:21,531 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,530 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@2a478efe],[]>]
2025-05-12 09:25:21,532 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,532 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] Method getWishlist executed in 18 ms
2025-05-12 09:25:21,533 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,534 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,533 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,534 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,535 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,534 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,535 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,535 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-5] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,536 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] RESPONSE: Status=200, Time=63ms
2025-05-12 09:25:21,536 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,536 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:21,538 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,537 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@2a31c85e],[]>]
2025-05-12 09:25:21,539 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] Method getWishlist executed in 18 ms
2025-05-12 09:25:21,541 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-1] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,540 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,542 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,541 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,540 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] REQUEST: GET /wishlist
2025-05-12 09:25:21,541 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,542 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] User authorities: [ROLE_USER]
2025-05-12 09:25:21,543 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,542 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] User authorities: [ROLE_USER]
2025-05-12 09:25:21,543 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@17fa01c7, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,543 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,543 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-10] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,543 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-4] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,543 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-4] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,541 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,543 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [36]
2025-05-12 09:25:21,544 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,542 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] RESPONSE: Status=200, Time=61ms
2025-05-12 09:25:21,544 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,544 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Found Authorization header with Bearer token
2025-05-12 09:25:21,544 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,543 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,545 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-4] JWT token validation successful
2025-05-12 09:25:21,547 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-4] Extracted username from JWT token: a1234
2025-05-12 09:25:21,547 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] REQUEST: GET /wishlist
2025-05-12 09:25:21,547 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Valid JWT token found for user: a1234
2025-05-12 09:25:21,545 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:21,546 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@576eab1d, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,547 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [36]
2025-05-12 09:25:21,548 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-2] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,548 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-6] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,549 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,548 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,549 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,549 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-3] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,548 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,550 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [37]
2025-05-12 09:25:21,548 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,550 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,550 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-3] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,551 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,551 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,551 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Found Authorization header with Bearer token
2025-05-12 09:25:21,552 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,552 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-3] JWT token validation successful
2025-05-12 09:25:21,551 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-6] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,552 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-3] Extracted username from JWT token: a1234
2025-05-12 09:25:21,553 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Valid JWT token found for user: a1234
2025-05-12 09:25:21,552 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,554 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,554 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-6] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,554 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,554 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-6] Get wishlist request for user: 1
2025-05-12 09:25:21,556 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-10] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,553 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,557 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,555 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:21,556 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,558 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,558 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [37]
2025-05-12 09:25:21,558 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-2] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,558 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-10] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,559 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-2] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,559 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-2] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,559 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-10] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,559 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,559 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-10] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,560 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-10] Get wishlist request for user: 1
2025-05-12 09:25:21,560 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-2] Get wishlist request for user: 1
2025-05-12 09:25:21,560 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,560 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,561 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,561 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] User authorities: [ROLE_USER]
2025-05-12 09:25:21,561 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,561 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@6126a222, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,562 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-4] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,562 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,562 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,562 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,560 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,562 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,564 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,564 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,564 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,564 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@5561b6a3],[]>]
2025-05-12 09:25:21,564 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,564 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] Method getWishlist executed in 10 ms
2025-05-12 09:25:21,565 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [38]
2025-05-12 09:25:21,566 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:21,567 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [38]
2025-05-12 09:25:21,567 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,567 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,566 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,568 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,569 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,569 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,569 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,568 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,570 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,569 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-4] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,570 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [39]
2025-05-12 09:25:21,571 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@2547e893],[]>]
2025-05-12 09:25:21,571 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-6] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,572 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-4] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,571 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,571 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] Method getWishlist executed in 12 ms
2025-05-12 09:25:21,571 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-10] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@78550e0a],[]>]
2025-05-12 09:25:21,571 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] RESPONSE: Status=200, Time=65ms
2025-05-12 09:25:21,573 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,572 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-10] Method getWishlist executed in 13 ms
2025-05-12 09:25:21,571 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:21,573 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [39]
2025-05-12 09:25:21,574 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-4] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,575 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-10] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,575 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-4] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,574 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-2] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,575 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] RESPONSE: Status=200, Time=59ms
2025-05-12 09:25:21,575 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,575 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-4] Get wishlist request for user: 1
2025-05-12 09:25:21,576 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] RESPONSE: Status=200, Time=59ms
2025-05-12 09:25:21,576 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] REQUEST: GET /wishlist
2025-05-12 09:25:21,576 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,577 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-8] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,577 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-8] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,576 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,577 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,577 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,577 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Found Authorization header with Bearer token
2025-05-12 09:25:21,577 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,577 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,576 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,578 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-8] JWT token validation successful
2025-05-12 09:25:21,578 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-8] Extracted username from JWT token: a1234
2025-05-12 09:25:21,579 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Valid JWT token found for user: a1234
2025-05-12 09:25:21,575 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,579 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [40]
2025-05-12 09:25:21,575 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] REQUEST: GET /wishlist
2025-05-12 09:25:21,579 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,580 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-7] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,580 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-7] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,580 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,580 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,580 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] REQUEST: GET /wishlist
2025-05-12 09:25:21,580 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Found Authorization header with Bearer token
2025-05-12 09:25:21,581 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,581 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,582 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-2] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,581 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:21,582 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-2] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,582 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [40]
2025-05-12 09:25:21,582 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-7] JWT token validation successful
2025-05-12 09:25:21,581 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,584 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,584 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,584 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Found Authorization header with Bearer token
2025-05-12 09:25:21,584 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,584 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,584 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,582 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,584 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [41]
2025-05-12 09:25:21,584 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,583 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,585 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] User authorities: [ROLE_USER]
2025-05-12 09:25:21,583 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-7] Extracted username from JWT token: a1234
2025-05-12 09:25:21,585 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,585 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@76634c48, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,585 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Valid JWT token found for user: a1234
2025-05-12 09:25:21,585 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-3] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,584 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-2] JWT token validation successful
2025-05-12 09:25:21,586 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-2] Extracted username from JWT token: a1234
2025-05-12 09:25:21,587 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Valid JWT token found for user: a1234
2025-05-12 09:25:21,588 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,586 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,588 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,588 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,587 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:21,587 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,589 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [41]
2025-05-12 09:25:21,589 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,589 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,590 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,591 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,591 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [42]
2025-05-12 09:25:21,591 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,593 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,593 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-4] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@5e6f0304],[]>]
2025-05-12 09:25:21,593 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-4] Method getWishlist executed in 18 ms
2025-05-12 09:25:21,595 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-4] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,595 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] RESPONSE: Status=200, Time=52ms
2025-05-12 09:25:21,596 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,596 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] User authorities: [ROLE_USER]
2025-05-12 09:25:21,596 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,596 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@49b53d15, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,596 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-3] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,597 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-8] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,597 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-3] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,597 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-3] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,596 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:21,598 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,598 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [42]
2025-05-12 09:25:21,599 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,597 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,599 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] User authorities: [ROLE_USER]
2025-05-12 09:25:21,599 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,599 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@531a7fe6, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,599 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-7] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,599 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,600 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-3] Get wishlist request for user: 1
2025-05-12 09:25:21,598 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,601 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] REQUEST: GET /wishlist
2025-05-12 09:25:21,601 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,601 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,602 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-5] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,602 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-5] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,602 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,601 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,602 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,602 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [43]
2025-05-12 09:25:21,602 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,604 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,604 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-8] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,604 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-8] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,603 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,601 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,604 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Found Authorization header with Bearer token
2025-05-12 09:25:21,605 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,605 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-8] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,605 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,605 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,605 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,606 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-8] Get wishlist request for user: 1
2025-05-12 09:25:21,606 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:21,606 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-5] JWT token validation successful
2025-05-12 09:25:21,608 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [43]
2025-05-12 09:25:21,609 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-7] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,607 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,609 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-5] Extracted username from JWT token: a1234
2025-05-12 09:25:21,610 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-7] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,611 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-7] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,611 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,612 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [44]
2025-05-12 09:25:21,612 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,612 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,610 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,610 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Valid JWT token found for user: a1234
2025-05-12 09:25:21,613 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] User authorities: [ROLE_USER]
2025-05-12 09:25:21,611 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-7] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,613 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,613 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@7dad9643, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,613 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-7] Get wishlist request for user: 1
2025-05-12 09:25:21,613 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,613 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-2] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,614 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:21,614 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,615 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,616 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [44]
2025-05-12 09:25:21,615 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,617 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,615 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,617 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,618 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [45]
2025-05-12 09:25:21,617 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,618 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,618 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,618 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,619 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,620 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@23e221b4],[]>]
2025-05-12 09:25:21,621 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] Method getWishlist executed in 22 ms
2025-05-12 09:25:21,622 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-3] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,620 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,620 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,620 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:21,623 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,621 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,623 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [45]
2025-05-12 09:25:21,623 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,623 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,623 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] RESPONSE: Status=200, Time=74ms
2025-05-12 09:25:21,624 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-7] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@1415ffc5],[]>]
2025-05-12 09:25:21,626 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] REQUEST: GET /wishlist
2025-05-12 09:25:21,625 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@14e0e16d],[]>]
2025-05-12 09:25:21,627 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] Method getWishlist executed in 22 ms
2025-05-12 09:25:21,627 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-7] Method getWishlist executed in 16 ms
2025-05-12 09:25:21,625 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,628 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,628 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-8] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,628 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] RESPONSE: Status=200, Time=52ms
2025-05-12 09:25:21,629 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,626 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,629 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-1] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,629 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-1] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,630 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,630 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,630 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Found Authorization header with Bearer token
2025-05-12 09:25:21,630 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,629 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [46]
2025-05-12 09:25:21,630 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,630 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] User authorities: [ROLE_USER]
2025-05-12 09:25:21,631 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-7] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,630 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-1] JWT token validation successful
2025-05-12 09:25:21,631 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] RESPONSE: Status=200, Time=51ms
2025-05-12 09:25:21,631 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,631 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@5305c0e2, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,631 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-1] Extracted username from JWT token: a1234
2025-05-12 09:25:21,631 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Valid JWT token found for user: a1234
2025-05-12 09:25:21,632 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-5] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,632 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] REQUEST: GET /wishlist
2025-05-12 09:25:21,632 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,632 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,633 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,634 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-7] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,634 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-2] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,634 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-7] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,632 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        reviews0_.product_id as product_8_15_0_,
        reviews0_.id as id1_15_0_,
        reviews0_.id as id1_15_1_,
        reviews0_.anonymous as anonymou2_15_1_,
        reviews0_.comment as comment3_15_1_,
        reviews0_.created_at as created_4_15_1_,
        reviews0_.product_id as product_8_15_1_,
        reviews0_.rating as rating5_15_1_,
        reviews0_.title as title6_15_1_,
        reviews0_.updated_at as updated_7_15_1_,
        reviews0_.user_id as user_id9_15_1_ 
    from
        reviews reviews0_ 
    where
        reviews0_.product_id=?
2025-05-12 09:25:21,635 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [46]
2025-05-12 09:25:21,634 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] REQUEST: GET /wishlist
2025-05-12 09:25:21,634 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,635 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-2] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,636 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,637 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-9] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,637 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-2] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,635 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,635 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,638 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-10] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,638 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,639 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-10] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,636 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,639 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,639 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Found Authorization header with Bearer token
2025-05-12 09:25:21,639 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,639 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] RESPONSE: Status=200, Time=263ms
2025-05-12 09:25:21,640 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-7] JWT token validation successful
2025-05-12 09:25:21,639 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,640 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,640 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Found Authorization header with Bearer token
2025-05-12 09:25:21,640 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,640 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,640 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-2] Get wishlist request for user: 1
2025-05-12 09:25:21,641 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-10] JWT token validation successful
2025-05-12 09:25:21,641 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-10] Extracted username from JWT token: a1234
2025-05-12 09:25:21,641 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Valid JWT token found for user: a1234
2025-05-12 09:25:21,641 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-7] Extracted username from JWT token: a1234
2025-05-12 09:25:21,642 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Valid JWT token found for user: a1234
2025-05-12 09:25:21,642 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,643 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] REQUEST: GET /wishlist
2025-05-12 09:25:21,643 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:21,643 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,643 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,644 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,644 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-4] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:21,645 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-5] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,644 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,645 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] User authorities: [ROLE_USER]
2025-05-12 09:25:21,645 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,645 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@671dfa3e, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,646 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-5] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,646 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-1] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,646 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-4] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:21,647 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-5] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,647 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,647 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-5] Get wishlist request for user: 1
2025-05-12 09:25:21,647 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,648 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,649 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,646 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,647 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:21,649 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,649 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,649 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,649 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,650 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,650 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,652 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,650 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Found Authorization header with Bearer token
2025-05-12 09:25:21,651 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,652 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:21,652 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,653 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-4] JWT token validation successful
2025-05-12 09:25:21,651 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,654 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@2a67f450],[]>]
2025-05-12 09:25:21,656 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,656 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] User authorities: [ROLE_USER]
2025-05-12 09:25:21,656 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] Method getWishlist executed in 16 ms
2025-05-12 09:25:21,656 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,656 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@53d919be, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,657 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-10] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,652 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,657 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,658 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,655 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-4] Extracted username from JWT token: a1234
2025-05-12 09:25:21,660 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-1] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,659 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Valid JWT token found for user: a1234
2025-05-12 09:25:21,660 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,661 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-2] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,661 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,661 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,661 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] RESPONSE: Status=200, Time=80ms
2025-05-12 09:25:21,662 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,662 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:21,663 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:21,661 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-1] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,663 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-1] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,663 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@49ee51fe],[]>]
2025-05-12 09:25:21,664 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,664 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] Method getWishlist executed in 17 ms
2025-05-12 09:25:21,664 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:21,664 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,664 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-1] Get wishlist request for user: 1
2025-05-12 09:25:21,664 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,666 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] User authorities: [ROLE_USER]
2025-05-12 09:25:21,666 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,666 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@2af6ee7e, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,666 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-7] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,666 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,668 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-10] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,668 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,668 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-5] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,669 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] RESPONSE: Status=200, Time=68ms
2025-05-12 09:25:21,669 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,670 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-10] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,670 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,672 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-10] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,671 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,670 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,672 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,673 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-10] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,673 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-10] Get wishlist request for user: 1
2025-05-12 09:25:21,672 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] User authorities: [ROLE_USER]
2025-05-12 09:25:21,673 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:21,674 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@75560f52, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:21,674 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,675 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,675 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-4] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:21,675 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,675 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-7] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,676 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,677 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-7] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,677 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,678 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-7] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,678 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,678 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@64b611a4],[]>]
2025-05-12 09:25:21,679 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] Method getWishlist executed in 15 ms
2025-05-12 09:25:21,679 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-7] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,680 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-7] Get wishlist request for user: 1
2025-05-12 09:25:21,679 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:21,680 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,681 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-1] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,681 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,681 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] RESPONSE: Status=200, Time=52ms
2025-05-12 09:25:21,682 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,682 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,683 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,684 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-4] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,684 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-10] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@955c2f0],[]>]
2025-05-12 09:25:21,684 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-10] Method getWishlist executed in 11 ms
2025-05-12 09:25:21,684 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-4] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:21,685 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-4] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:21,685 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-4] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:21,685 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-4] Get wishlist request for user: 1
2025-05-12 09:25:21,685 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,685 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,686 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-10] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,686 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] RESPONSE: Status=200, Time=48ms
2025-05-12 09:25:21,686 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:21,687 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:21,689 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:21,688 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,691 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,691 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,693 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-7] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@71c334cb],[]>]
2025-05-12 09:25:21,693 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-7] Method getWishlist executed in 14 ms
2025-05-12 09:25:21,693 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:21,694 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-7] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,694 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] RESPONSE: Status=200, Time=61ms
2025-05-12 09:25:21,694 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:21,696 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-4] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@3c146307],[]>]
2025-05-12 09:25:21,696 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-4] Method getWishlist executed in 11 ms
2025-05-12 09:25:21,698 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-4] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:21,698 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] RESPONSE: Status=200, Time=54ms
2025-05-12 09:25:22,108 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] REQUEST: GET /wishlist
2025-05-12 09:25:22,109 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,109 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-3] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,109 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-3] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,110 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] REQUEST: GET /wishlist
2025-05-12 09:25:22,110 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,110 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] REQUEST: GET /wishlist
2025-05-12 09:25:22,110 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-6] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,110 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,110 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-6] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,110 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,111 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,111 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Found Authorization header with Bearer token
2025-05-12 09:25:22,111 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,111 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-9] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,111 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-9] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,110 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] REQUEST: GET /wishlist
2025-05-12 09:25:22,111 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,111 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,111 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-3] JWT token validation successful
2025-05-12 09:25:22,111 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-8] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,111 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-8] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,111 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-3] Extracted username from JWT token: a1234
2025-05-12 09:25:22,111 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] REQUEST: GET /wishlist
2025-05-12 09:25:22,111 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,111 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,111 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,112 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Found Authorization header with Bearer token
2025-05-12 09:25:22,112 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,112 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,112 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Found Authorization header with Bearer token
2025-05-12 09:25:22,112 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,111 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,112 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-9] JWT token validation successful
2025-05-12 09:25:22,111 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Valid JWT token found for user: a1234
2025-05-12 09:25:22,112 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-6] JWT token validation successful
2025-05-12 09:25:22,112 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Found Authorization header with Bearer token
2025-05-12 09:25:22,112 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-9] Extracted username from JWT token: a1234
2025-05-12 09:25:22,111 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,112 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Valid JWT token found for user: a1234
2025-05-12 09:25:22,112 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,112 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-6] Extracted username from JWT token: a1234
2025-05-12 09:25:22,112 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Valid JWT token found for user: a1234
2025-05-12 09:25:22,112 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-8] JWT token validation successful
2025-05-12 09:25:22,113 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-2] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,113 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] REQUEST: GET /wishlist
2025-05-12 09:25:22,113 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,113 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-2] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,113 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-5] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,113 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-5] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,113 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-8] Extracted username from JWT token: a1234
2025-05-12 09:25:22,114 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,114 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,114 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Valid JWT token found for user: a1234
2025-05-12 09:25:22,114 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,114 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Found Authorization header with Bearer token
2025-05-12 09:25:22,114 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,114 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,114 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,114 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,114 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Found Authorization header with Bearer token
2025-05-12 09:25:22,114 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,114 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-5] JWT token validation successful
2025-05-12 09:25:22,115 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-5] Extracted username from JWT token: a1234
2025-05-12 09:25:22,115 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,115 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Valid JWT token found for user: a1234
2025-05-12 09:25:22,115 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,115 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,116 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,116 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,116 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,116 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,116 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,117 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-2] JWT token validation successful
2025-05-12 09:25:22,117 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,118 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,117 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-2] Extracted username from JWT token: a1234
2025-05-12 09:25:22,118 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Valid JWT token found for user: a1234
2025-05-12 09:25:22,118 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,118 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,118 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,117 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,119 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,120 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,121 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,121 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] User authorities: [ROLE_USER]
2025-05-12 09:25:22,122 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,121 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,122 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@5ae4f3c, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,122 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-3] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,122 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,124 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,124 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,125 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,125 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] User authorities: [ROLE_USER]
2025-05-12 09:25:22,125 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] User authorities: [ROLE_USER]
2025-05-12 09:25:22,125 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,125 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,125 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,125 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] User authorities: [ROLE_USER]
2025-05-12 09:25:22,125 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@5322e84b, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,125 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,125 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@5401e924, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,125 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-8] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,125 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-9] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,125 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,125 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,126 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] User authorities: [ROLE_USER]
2025-05-12 09:25:22,126 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,125 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@294f8fea, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,126 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-6] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,126 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@34991568, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,127 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-5] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,127 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,127 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,129 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,129 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,127 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,129 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,128 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,130 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,131 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,132 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,135 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-8] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,136 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-3] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,136 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-5] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,136 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-9] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,137 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-8] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,137 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-9] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,137 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-3] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,137 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-5] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,137 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,138 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] User authorities: [ROLE_USER]
2025-05-12 09:25:22,138 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,138 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@7f57e91b, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,138 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-5] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,138 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-2] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,138 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,138 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,138 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-8] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,138 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,139 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,139 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-8] Get wishlist request for user: 1
2025-05-12 09:25:22,139 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-9] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,139 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-3] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,139 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,139 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-3] Get wishlist request for user: 1
2025-05-12 09:25:22,139 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-9] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,140 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-9] Get wishlist request for user: 1
2025-05-12 09:25:22,138 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-5] Get wishlist request for user: 1
2025-05-12 09:25:22,142 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,142 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,142 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,142 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,141 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,143 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,143 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,143 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,145 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,146 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,147 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,145 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,147 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-6] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,147 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,147 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,146 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,148 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-6] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,148 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,149 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-6] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,149 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,149 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,150 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,150 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,150 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,151 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,149 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,151 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-6] Get wishlist request for user: 1
2025-05-12 09:25:22,152 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,152 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@4b7c16e0],[]>]
2025-05-12 09:25:22,152 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,152 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] Method getWishlist executed in 14 ms
2025-05-12 09:25:22,152 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,152 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@38a05668],[]>]
2025-05-12 09:25:22,153 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] Method getWishlist executed in 14 ms
2025-05-12 09:25:22,152 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,154 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@6ee333b9],[]>]
2025-05-12 09:25:22,154 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] Method getWishlist executed in 15 ms
2025-05-12 09:25:22,154 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-5] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,154 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] RESPONSE: Status=200, Time=41ms
2025-05-12 09:25:22,154 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-9] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@228a5e1d],[]>]
2025-05-12 09:25:22,155 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-9] Method getWishlist executed in 16 ms
2025-05-12 09:25:22,155 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,156 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-3] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,156 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-9] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,156 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-8] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,156 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,156 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] RESPONSE: Status=200, Time=47ms
2025-05-12 09:25:22,157 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] RESPONSE: Status=200, Time=46ms
2025-05-12 09:25:22,157 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,158 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,157 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] RESPONSE: Status=200, Time=47ms
2025-05-12 09:25:22,159 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,160 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,160 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] REQUEST: GET /wishlist
2025-05-12 09:25:22,162 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] REQUEST: GET /wishlist
2025-05-12 09:25:22,160 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] REQUEST: GET /wishlist
2025-05-12 09:25:22,162 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,163 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] REQUEST: GET /wishlist
2025-05-12 09:25:22,163 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-1] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,163 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-1] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,163 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,164 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-7] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,165 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-7] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,165 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-2] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,165 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,163 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,163 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,164 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@83a43e2],[]>]
2025-05-12 09:25:22,165 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-10] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,165 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] Method getWishlist executed in 16 ms
2025-05-12 09:25:22,165 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-2] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,165 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-10] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,166 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-2] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,166 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,166 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-2] Get wishlist request for user: 1
2025-05-12 09:25:22,166 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,164 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,166 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-6] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,166 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] RESPONSE: Status=200, Time=56ms
2025-05-12 09:25:22,166 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,166 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Found Authorization header with Bearer token
2025-05-12 09:25:22,166 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,165 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-4] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,167 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-4] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,167 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,167 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,167 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-10] JWT token validation successful
2025-05-12 09:25:22,167 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] REQUEST: GET /wishlist
2025-05-12 09:25:22,167 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,167 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-5] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,168 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-5] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,167 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-10] Extracted username from JWT token: a1234
2025-05-12 09:25:22,168 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Valid JWT token found for user: a1234
2025-05-12 09:25:22,168 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,168 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,168 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Found Authorization header with Bearer token
2025-05-12 09:25:22,168 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,166 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,168 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Found Authorization header with Bearer token
2025-05-12 09:25:22,168 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,167 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,165 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,169 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,169 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Found Authorization header with Bearer token
2025-05-12 09:25:22,170 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,167 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Found Authorization header with Bearer token
2025-05-12 09:25:22,169 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-1] JWT token validation successful
2025-05-12 09:25:22,170 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,169 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-5] JWT token validation successful
2025-05-12 09:25:22,171 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-5] Extracted username from JWT token: a1234
2025-05-12 09:25:22,171 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Valid JWT token found for user: a1234
2025-05-12 09:25:22,171 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-1] Extracted username from JWT token: a1234
2025-05-12 09:25:22,171 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Valid JWT token found for user: a1234
2025-05-12 09:25:22,170 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,172 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,171 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-7] JWT token validation successful
2025-05-12 09:25:22,174 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,174 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,171 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-4] JWT token validation successful
2025-05-12 09:25:22,175 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-7] Extracted username from JWT token: a1234
2025-05-12 09:25:22,175 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Valid JWT token found for user: a1234
2025-05-12 09:25:22,174 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,175 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-4] Extracted username from JWT token: a1234
2025-05-12 09:25:22,176 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,176 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,176 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,176 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Valid JWT token found for user: a1234
2025-05-12 09:25:22,178 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,178 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,176 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,178 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,179 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,179 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,181 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,181 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,181 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,182 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,182 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,182 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,184 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,185 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,185 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] User authorities: [ROLE_USER]
2025-05-12 09:25:22,186 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,186 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@4bc1a133, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,186 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-10] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,185 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] User authorities: [ROLE_USER]
2025-05-12 09:25:22,186 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,187 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] User authorities: [ROLE_USER]
2025-05-12 09:25:22,187 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,187 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@73f95c37, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,187 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,187 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@17a02481, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,187 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-5] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,187 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-7] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,185 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@481b10bd],[]>]
2025-05-12 09:25:22,187 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] Method getWishlist executed in 21 ms
2025-05-12 09:25:22,188 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,188 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] User authorities: [ROLE_USER]
2025-05-12 09:25:22,188 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,188 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,188 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@254e1878, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,188 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-1] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,188 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,190 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,191 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,192 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,193 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,193 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,194 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-2] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,193 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,195 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] RESPONSE: Status=200, Time=83ms
2025-05-12 09:25:22,195 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-10] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,195 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,197 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-10] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,198 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-7] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,198 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,196 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,198 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,198 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-10] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,198 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-7] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,198 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] REQUEST: GET /wishlist
2025-05-12 09:25:22,200 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-1] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,202 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-5] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,199 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-10] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,200 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,204 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-7] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,204 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-2] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,202 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,205 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-1] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,205 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] User authorities: [ROLE_USER]
2025-05-12 09:25:22,205 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,205 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-7] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,205 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-1] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,205 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@1a329060, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,205 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-7] Get wishlist request for user: 1
2025-05-12 09:25:22,205 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,205 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-1] Get wishlist request for user: 1
2025-05-12 09:25:22,205 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-4] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,204 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-10] Get wishlist request for user: 1
2025-05-12 09:25:22,206 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-2] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,205 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-5] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,206 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,206 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,206 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,207 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,208 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,208 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-5] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,207 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,208 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,209 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Found Authorization header with Bearer token
2025-05-12 09:25:22,209 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,209 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,209 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,209 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,210 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-2] JWT token validation successful
2025-05-12 09:25:22,210 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,210 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-5] Get wishlist request for user: 1
2025-05-12 09:25:22,211 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-2] Extracted username from JWT token: a1234
2025-05-12 09:25:22,211 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Valid JWT token found for user: a1234
2025-05-12 09:25:22,210 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,212 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,211 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,212 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,213 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,213 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,212 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,214 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,214 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,214 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,214 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,214 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,215 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-10] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@20f8ef2a],[]>]
2025-05-12 09:25:22,215 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,216 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-10] Method getWishlist executed in 17 ms
2025-05-12 09:25:22,216 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,216 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,216 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,215 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,217 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-4] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,217 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,218 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-7] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@2dc68858],[]>]
2025-05-12 09:25:22,218 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@1401032e],[]>]
2025-05-12 09:25:22,218 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] Method getWishlist executed in 13 ms
2025-05-12 09:25:22,219 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-10] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,219 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] RESPONSE: Status=200, Time=54ms
2025-05-12 09:25:22,219 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@2b3d6552],[]>]
2025-05-12 09:25:22,219 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] Method getWishlist executed in 10 ms
2025-05-12 09:25:22,219 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-1] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,218 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-7] Method getWishlist executed in 13 ms
2025-05-12 09:25:22,220 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-4] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,220 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-5] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,220 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] RESPONSE: Status=200, Time=58ms
2025-05-12 09:25:22,220 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,221 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,220 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-7] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,221 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] REQUEST: GET /wishlist
2025-05-12 09:25:22,221 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] RESPONSE: Status=200, Time=57ms
2025-05-12 09:25:22,222 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-4] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,222 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-4] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,223 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-4] Get wishlist request for user: 1
2025-05-12 09:25:22,223 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,223 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,220 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] RESPONSE: Status=200, Time=53ms
2025-05-12 09:25:22,222 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,224 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-1] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,225 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-1] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,226 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,226 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,226 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Found Authorization header with Bearer token
2025-05-12 09:25:22,222 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] REQUEST: GET /wishlist
2025-05-12 09:25:22,227 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,225 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] REQUEST: GET /wishlist
2025-05-12 09:25:22,225 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,227 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-7] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,227 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,228 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,228 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-5] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,228 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] User authorities: [ROLE_USER]
2025-05-12 09:25:22,228 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-5] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,227 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,228 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,226 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] REQUEST: GET /wishlist
2025-05-12 09:25:22,228 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@30cd189e, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,228 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,228 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-2] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,228 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-6] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,229 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-6] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,226 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,229 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,229 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-7] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,229 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,229 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Found Authorization header with Bearer token
2025-05-12 09:25:22,229 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,229 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,229 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,229 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,230 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-6] JWT token validation successful
2025-05-12 09:25:22,229 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Found Authorization header with Bearer token
2025-05-12 09:25:22,230 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,229 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,231 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Found Authorization header with Bearer token
2025-05-12 09:25:22,230 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-6] Extracted username from JWT token: a1234
2025-05-12 09:25:22,230 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-1] JWT token validation successful
2025-05-12 09:25:22,231 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-5] JWT token validation successful
2025-05-12 09:25:22,231 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-1] Extracted username from JWT token: a1234
2025-05-12 09:25:22,231 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,231 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Valid JWT token found for user: a1234
2025-05-12 09:25:22,231 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,231 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Valid JWT token found for user: a1234
2025-05-12 09:25:22,232 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,232 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-7] JWT token validation successful
2025-05-12 09:25:22,232 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-5] Extracted username from JWT token: a1234
2025-05-12 09:25:22,233 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Valid JWT token found for user: a1234
2025-05-12 09:25:22,232 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,233 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-7] Extracted username from JWT token: a1234
2025-05-12 09:25:22,233 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,234 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Valid JWT token found for user: a1234
2025-05-12 09:25:22,233 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,235 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,235 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,234 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,235 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,235 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,236 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,237 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,237 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,237 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,237 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-2] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,237 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,238 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,236 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,239 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-2] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,238 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,241 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,241 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] User authorities: [ROLE_USER]
2025-05-12 09:25:22,241 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,241 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,242 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-2] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,241 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] User authorities: [ROLE_USER]
2025-05-12 09:25:22,241 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@b6d5f57, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,241 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-4] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@41961992],[]>]
2025-05-12 09:25:22,242 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-4] Method getWishlist executed in 20 ms
2025-05-12 09:25:22,242 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-1] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,243 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,244 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,244 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@67b477f6, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,244 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-5] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,244 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,246 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-4] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,247 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] RESPONSE: Status=200, Time=82ms
2025-05-12 09:25:22,246 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,247 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-2] Get wishlist request for user: 1
2025-05-12 09:25:22,247 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,247 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,248 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,248 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,248 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,247 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,248 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,248 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,249 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,249 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] User authorities: [ROLE_USER]
2025-05-12 09:25:22,249 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] REQUEST: GET /wishlist
2025-05-12 09:25:22,250 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,250 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,250 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@341c1a17, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,251 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-10] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,251 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-6] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,251 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-10] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,251 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,252 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-5] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,252 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,252 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,252 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,252 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-1] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,252 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Found Authorization header with Bearer token
2025-05-12 09:25:22,252 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,253 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-1] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,253 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-5] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,253 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-1] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,253 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-5] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,253 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-10] JWT token validation successful
2025-05-12 09:25:22,253 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,253 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-1] Get wishlist request for user: 1
2025-05-12 09:25:22,254 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-10] Extracted username from JWT token: a1234
2025-05-12 09:25:22,254 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Valid JWT token found for user: a1234
2025-05-12 09:25:22,254 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,254 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] User authorities: [ROLE_USER]
2025-05-12 09:25:22,254 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,254 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@796a2887, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,255 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,255 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,254 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,255 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-7] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,256 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,255 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,255 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-5] Get wishlist request for user: 1
2025-05-12 09:25:22,255 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,256 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,256 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,257 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,257 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,257 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,258 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,258 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@4d60e39a],[]>]
2025-05-12 09:25:22,258 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,259 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] Method getWishlist executed in 13 ms
2025-05-12 09:25:22,260 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-6] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,261 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-2] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,260 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,261 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-6] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,260 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,262 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,262 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] RESPONSE: Status=200, Time=58ms
2025-05-12 09:25:22,262 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,262 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,263 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] User authorities: [ROLE_USER]
2025-05-12 09:25:22,262 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-6] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,263 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,263 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,263 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@7312aa0e, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,263 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-10] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,263 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,263 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,264 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-6] Get wishlist request for user: 1
2025-05-12 09:25:22,264 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] REQUEST: GET /wishlist
2025-05-12 09:25:22,264 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,265 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-3] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,265 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-3] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,265 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,265 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,267 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,265 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,265 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,267 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,267 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,267 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,267 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Found Authorization header with Bearer token
2025-05-12 09:25:22,267 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,267 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,267 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,268 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@4c2c8e36],[]>]
2025-05-12 09:25:22,269 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-3] JWT token validation successful
2025-05-12 09:25:22,269 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] Method getWishlist executed in 16 ms
2025-05-12 09:25:22,269 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,268 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@274b8d03],[]>]
2025-05-12 09:25:22,271 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-1] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,272 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-10] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,272 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,270 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-3] Extracted username from JWT token: a1234
2025-05-12 09:25:22,273 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Valid JWT token found for user: a1234
2025-05-12 09:25:22,273 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-7] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,273 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-7] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,273 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-10] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,273 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-7] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,271 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] Method getWishlist executed in 18 ms
2025-05-12 09:25:22,274 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-7] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,273 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] RESPONSE: Status=200, Time=49ms
2025-05-12 09:25:22,274 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-7] Get wishlist request for user: 1
2025-05-12 09:25:22,274 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-10] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,275 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-10] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,276 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-5] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,276 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-10] Get wishlist request for user: 1
2025-05-12 09:25:22,276 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,277 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,277 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,275 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] REQUEST: GET /wishlist
2025-05-12 09:25:22,276 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,277 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,277 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] RESPONSE: Status=200, Time=50ms
2025-05-12 09:25:22,278 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-8] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,278 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-8] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,277 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,277 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,277 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,279 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,279 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,279 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,279 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Found Authorization header with Bearer token
2025-05-12 09:25:22,280 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,280 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,280 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,280 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@40f1914e],[]>]
2025-05-12 09:25:22,280 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] REQUEST: GET /wishlist
2025-05-12 09:25:22,280 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] Method getWishlist executed in 17 ms
2025-05-12 09:25:22,281 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,281 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-9] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,281 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-9] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,281 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-8] JWT token validation successful
2025-05-12 09:25:22,281 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,282 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-6] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,282 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,282 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-8] Extracted username from JWT token: a1234
2025-05-12 09:25:22,283 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,283 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] RESPONSE: Status=200, Time=55ms
2025-05-12 09:25:22,283 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,283 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Valid JWT token found for user: a1234
2025-05-12 09:25:22,283 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,285 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Found Authorization header with Bearer token
2025-05-12 09:25:22,285 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,285 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,285 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,286 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,286 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,286 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] User authorities: [ROLE_USER]
2025-05-12 09:25:22,286 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,286 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-9] JWT token validation successful
2025-05-12 09:25:22,286 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@781e8295, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,287 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-3] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,288 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] REQUEST: GET /wishlist
2025-05-12 09:25:22,288 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,288 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-7] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@54fc2319],[]>]
2025-05-12 09:25:22,288 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,289 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-7] Method getWishlist executed in 15 ms
2025-05-12 09:25:22,289 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,289 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,289 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,289 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-4] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,289 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-4] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,290 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,290 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,290 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Found Authorization header with Bearer token
2025-05-12 09:25:22,290 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,290 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-9] Extracted username from JWT token: a1234
2025-05-12 09:25:22,290 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Valid JWT token found for user: a1234
2025-05-12 09:25:22,290 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-7] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,290 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] RESPONSE: Status=200, Time=63ms
2025-05-12 09:25:22,290 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,291 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,291 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,291 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,290 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,291 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-10] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@2044a747],[]>]
2025-05-12 09:25:22,292 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,292 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-10] Method getWishlist executed in 17 ms
2025-05-12 09:25:22,291 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-4] JWT token validation successful
2025-05-12 09:25:22,292 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-4] Extracted username from JWT token: a1234
2025-05-12 09:25:22,293 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Valid JWT token found for user: a1234
2025-05-12 09:25:22,293 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-10] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,293 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] RESPONSE: Status=200, Time=42ms
2025-05-12 09:25:22,293 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,293 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,294 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,294 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] REQUEST: GET /wishlist
2025-05-12 09:25:22,295 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] User authorities: [ROLE_USER]
2025-05-12 09:25:22,295 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,295 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,295 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,295 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-2] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,295 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-2] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,295 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,295 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@7291911a, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,295 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-8] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,296 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] REQUEST: GET /wishlist
2025-05-12 09:25:22,296 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,296 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-1] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,296 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,296 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-1] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,296 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,297 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,297 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,297 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,297 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Found Authorization header with Bearer token
2025-05-12 09:25:22,297 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,298 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-3] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,298 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-3] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,298 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-1] JWT token validation successful
2025-05-12 09:25:22,297 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,301 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] User authorities: [ROLE_USER]
2025-05-12 09:25:22,296 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,300 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-1] Extracted username from JWT token: a1234
2025-05-12 09:25:22,302 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-3] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,299 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,301 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,303 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@1be40c3a, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,303 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,304 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-9] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,305 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,305 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] User authorities: [ROLE_USER]
2025-05-12 09:25:22,305 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,306 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@78853177, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,306 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-4] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,302 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Valid JWT token found for user: a1234
2025-05-12 09:25:22,302 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Found Authorization header with Bearer token
2025-05-12 09:25:22,306 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,307 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,307 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-3] Get wishlist request for user: 1
2025-05-12 09:25:22,308 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-2] JWT token validation successful
2025-05-12 09:25:22,309 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-8] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,308 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,308 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,308 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,310 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,310 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,309 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-2] Extracted username from JWT token: a1234
2025-05-12 09:25:22,310 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,309 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,310 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Valid JWT token found for user: a1234
2025-05-12 09:25:22,310 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-8] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,310 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,311 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-8] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,311 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,311 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,311 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-8] Get wishlist request for user: 1
2025-05-12 09:25:22,312 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,313 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-4] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,313 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-9] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,313 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,314 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-4] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,313 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,314 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,314 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,314 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-4] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,315 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-9] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,315 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-4] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,315 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-4] Get wishlist request for user: 1
2025-05-12 09:25:22,315 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-9] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,315 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-9] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,315 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,316 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,316 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,316 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,316 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-9] Get wishlist request for user: 1
2025-05-12 09:25:22,316 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,316 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] User authorities: [ROLE_USER]
2025-05-12 09:25:22,316 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,316 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@23f28c5f, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,317 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-1] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,317 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,317 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,316 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,318 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,318 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,319 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,321 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@324cbf9b],[]>]
2025-05-12 09:25:22,320 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,320 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,322 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,321 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,322 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] Method getWishlist executed in 15 ms
2025-05-12 09:25:22,323 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,323 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,323 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,323 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,325 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@752e0ce8],[]>]
2025-05-12 09:25:22,325 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-3] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,325 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,326 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,325 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,326 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,326 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] RESPONSE: Status=200, Time=61ms
2025-05-12 09:25:22,325 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] Method getWishlist executed in 14 ms
2025-05-12 09:25:22,327 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-4] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@178a482],[]>]
2025-05-12 09:25:22,327 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-4] Method getWishlist executed in 12 ms
2025-05-12 09:25:22,327 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-9] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@111c8e1b],[]>]
2025-05-12 09:25:22,328 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,328 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-9] Method getWishlist executed in 13 ms
2025-05-12 09:25:22,328 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] User authorities: [ROLE_USER]
2025-05-12 09:25:22,328 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-4] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,328 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-8] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,328 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,328 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] RESPONSE: Status=200, Time=40ms
2025-05-12 09:25:22,328 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@2206e400, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,329 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-2] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,329 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-9] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,328 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] RESPONSE: Status=200, Time=51ms
2025-05-12 09:25:22,329 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] RESPONSE: Status=200, Time=48ms
2025-05-12 09:25:22,329 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,329 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,330 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] REQUEST: GET /wishlist
2025-05-12 09:25:22,330 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] REQUEST: GET /wishlist
2025-05-12 09:25:22,330 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,330 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] REQUEST: GET /wishlist
2025-05-12 09:25:22,331 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,331 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-5] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,330 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,332 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-6] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,332 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-7] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,333 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-1] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,335 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-5] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,335 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-7] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,332 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] REQUEST: GET /wishlist
2025-05-12 09:25:22,335 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-6] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,335 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-1] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,334 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,336 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,336 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,336 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,335 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,336 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Found Authorization header with Bearer token
2025-05-12 09:25:22,336 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,337 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-8] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,336 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-1] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,337 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-8] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,337 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,337 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,337 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-7] JWT token validation successful
2025-05-12 09:25:22,337 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,337 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Found Authorization header with Bearer token
2025-05-12 09:25:22,337 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,337 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,337 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Found Authorization header with Bearer token
2025-05-12 09:25:22,337 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,337 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,337 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-7] Extracted username from JWT token: a1234
2025-05-12 09:25:22,337 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,338 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-6] JWT token validation successful
2025-05-12 09:25:22,338 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-8] JWT token validation successful
2025-05-12 09:25:22,338 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Valid JWT token found for user: a1234
2025-05-12 09:25:22,338 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,337 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-1] Get wishlist request for user: 1
2025-05-12 09:25:22,338 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Found Authorization header with Bearer token
2025-05-12 09:25:22,338 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,338 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-6] Extracted username from JWT token: a1234
2025-05-12 09:25:22,338 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-5] JWT token validation successful
2025-05-12 09:25:22,339 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Valid JWT token found for user: a1234
2025-05-12 09:25:22,339 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-2] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,339 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-8] Extracted username from JWT token: a1234
2025-05-12 09:25:22,339 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Valid JWT token found for user: a1234
2025-05-12 09:25:22,339 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-2] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,339 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,340 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,339 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-5] Extracted username from JWT token: a1234
2025-05-12 09:25:22,339 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,341 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,341 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,341 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,341 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,341 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-2] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,342 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,341 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Valid JWT token found for user: a1234
2025-05-12 09:25:22,342 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,342 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-2] Get wishlist request for user: 1
2025-05-12 09:25:22,342 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,342 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,343 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,343 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,343 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,343 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,343 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,342 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,343 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,344 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,345 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,346 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,346 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,347 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,347 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,347 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,347 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] User authorities: [ROLE_USER]
2025-05-12 09:25:22,348 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,348 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@1ac2064e, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,349 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-8] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,349 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,350 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,348 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,350 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,350 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,347 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] User authorities: [ROLE_USER]
2025-05-12 09:25:22,347 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] User authorities: [ROLE_USER]
2025-05-12 09:25:22,350 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,350 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,351 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@7ea4ba93, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,351 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@4fa1415, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,351 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-7] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,352 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-6] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,351 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,351 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@4d30e96],[]>]
2025-05-12 09:25:22,352 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,352 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] Method getWishlist executed in 10 ms
2025-05-12 09:25:22,352 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,352 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@f0bf412],[]>]
2025-05-12 09:25:22,353 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] Method getWishlist executed in 16 ms
2025-05-12 09:25:22,353 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,353 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,354 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-2] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,354 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,355 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] RESPONSE: Status=200, Time=60ms
2025-05-12 09:25:22,356 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-1] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,355 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,356 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,356 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] RESPONSE: Status=200, Time=60ms
2025-05-12 09:25:22,357 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] REQUEST: GET /wishlist
2025-05-12 09:25:22,357 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,358 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-10] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,358 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,358 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] User authorities: [ROLE_USER]
2025-05-12 09:25:22,358 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-10] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,358 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,358 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@1ce9f3af, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,358 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,358 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,358 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-5] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,358 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Found Authorization header with Bearer token
2025-05-12 09:25:22,359 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,359 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-8] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,358 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-7] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,359 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-7] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,359 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-8] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,359 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-10] JWT token validation successful
2025-05-12 09:25:22,360 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-7] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,360 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-8] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,360 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-10] Extracted username from JWT token: a1234
2025-05-12 09:25:22,360 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Valid JWT token found for user: a1234
2025-05-12 09:25:22,360 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,360 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-7] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,360 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] REQUEST: GET /wishlist
2025-05-12 09:25:22,360 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-8] Get wishlist request for user: 1
2025-05-12 09:25:22,360 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-7] Get wishlist request for user: 1
2025-05-12 09:25:22,360 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,361 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-6] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,361 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-3] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,361 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-3] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,361 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-6] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,361 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,361 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-6] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,361 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,361 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,362 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,362 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,362 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-6] Get wishlist request for user: 1
2025-05-12 09:25:22,361 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,361 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,362 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,362 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,362 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Found Authorization header with Bearer token
2025-05-12 09:25:22,362 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,362 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,363 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-3] JWT token validation successful
2025-05-12 09:25:22,362 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,363 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-3] Extracted username from JWT token: a1234
2025-05-12 09:25:22,363 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Valid JWT token found for user: a1234
2025-05-12 09:25:22,363 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,363 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,363 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,364 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,363 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,364 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,365 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,365 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,365 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,365 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,366 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,366 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-5] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,367 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,367 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-5] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,367 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@226d94b8],[]>]
2025-05-12 09:25:22,367 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] Method getWishlist executed in 7 ms
2025-05-12 09:25:22,367 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-5] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,368 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,368 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-5] Get wishlist request for user: 1
2025-05-12 09:25:22,368 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,369 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-8] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,368 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,369 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] RESPONSE: Status=200, Time=33ms
2025-05-12 09:25:22,370 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,370 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,372 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,370 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,375 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,375 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,378 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,378 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] REQUEST: GET /wishlist
2025-05-12 09:25:22,378 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,379 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,379 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-4] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,371 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,372 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,379 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] User authorities: [ROLE_USER]
2025-05-12 09:25:22,380 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,380 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,380 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@3bb698a4, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,380 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-4] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,380 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-10] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,381 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,381 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,381 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Found Authorization header with Bearer token
2025-05-12 09:25:22,382 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,381 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,383 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,381 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-7] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@63c7ae1],[]>]
2025-05-12 09:25:22,381 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@49895fbb],[]>]
2025-05-12 09:25:22,384 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] Method getWishlist executed in 22 ms
2025-05-12 09:25:22,385 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@7245ab02],[]>]
2025-05-12 09:25:22,386 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] Method getWishlist executed in 18 ms
2025-05-12 09:25:22,386 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-6] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,382 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-4] JWT token validation successful
2025-05-12 09:25:22,387 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] RESPONSE: Status=200, Time=56ms
2025-05-12 09:25:22,384 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-7] Method getWishlist executed in 24 ms
2025-05-12 09:25:22,387 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,387 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-4] Extracted username from JWT token: a1234
2025-05-12 09:25:22,387 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Valid JWT token found for user: a1234
2025-05-12 09:25:22,387 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] User authorities: [ROLE_USER]
2025-05-12 09:25:22,387 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,388 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@64a00fc1, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,389 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-3] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,388 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] REQUEST: GET /wishlist
2025-05-12 09:25:22,389 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,390 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-6] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,393 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-5] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,393 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-6] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,393 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] RESPONSE: Status=200, Time=62ms
2025-05-12 09:25:22,389 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,389 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,394 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,394 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,394 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,395 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,396 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] REQUEST: GET /wishlist
2025-05-12 09:25:22,395 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Found Authorization header with Bearer token
2025-05-12 09:25:22,397 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-7] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,396 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,399 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,396 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,396 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,399 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,400 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-9] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,400 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-9] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,400 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,400 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,400 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Found Authorization header with Bearer token
2025-05-12 09:25:22,400 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,400 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-10] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,401 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-10] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,401 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-10] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,401 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-10] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,401 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-10] Get wishlist request for user: 1
2025-05-12 09:25:22,396 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,402 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,403 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-6] JWT token validation successful
2025-05-12 09:25:22,403 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-9] JWT token validation successful
2025-05-12 09:25:22,403 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,403 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-9] Extracted username from JWT token: a1234
2025-05-12 09:25:22,403 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Valid JWT token found for user: a1234
2025-05-12 09:25:22,405 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] RESPONSE: Status=200, Time=74ms
2025-05-12 09:25:22,405 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,406 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] User authorities: [ROLE_USER]
2025-05-12 09:25:22,406 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,406 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@20e00a5a, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,406 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-6] Extracted username from JWT token: a1234
2025-05-12 09:25:22,406 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Valid JWT token found for user: a1234
2025-05-12 09:25:22,406 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-4] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,407 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,408 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-3] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,408 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,408 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-3] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,408 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-3] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,409 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,409 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-3] Get wishlist request for user: 1
2025-05-12 09:25:22,410 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,410 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,410 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,410 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,411 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,412 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,413 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] REQUEST: GET /wishlist
2025-05-12 09:25:22,414 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,414 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-2] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,413 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,415 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,415 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-2] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,411 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,414 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,414 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,416 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,418 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,418 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] User authorities: [ROLE_USER]
2025-05-12 09:25:22,417 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,418 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,418 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@7821fe71, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,418 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-6] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,418 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,420 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-4] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,418 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,421 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,421 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,421 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,422 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,422 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,416 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,422 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,422 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Found Authorization header with Bearer token
2025-05-12 09:25:22,423 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,423 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-2] JWT token validation successful
2025-05-12 09:25:22,423 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-2] Extracted username from JWT token: a1234
2025-05-12 09:25:22,423 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Valid JWT token found for user: a1234
2025-05-12 09:25:22,422 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-10] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@4b67154c],[]>]
2025-05-12 09:25:22,424 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-4] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,424 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-10] Method getWishlist executed in 23 ms
2025-05-12 09:25:22,424 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-4] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,424 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-4] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,424 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-4] Get wishlist request for user: 1
2025-05-12 09:25:22,425 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,425 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,426 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-10] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,427 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-6] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,427 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] RESPONSE: Status=200, Time=70ms
2025-05-12 09:25:22,428 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-6] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,427 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@10146339],[]>]
2025-05-12 09:25:22,429 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,430 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] User authorities: [ROLE_USER]
2025-05-12 09:25:22,430 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-6] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,429 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] REQUEST: GET /wishlist
2025-05-12 09:25:22,429 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,430 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,430 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,430 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@5e15a310, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,430 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-9] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,430 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,430 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-10] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,428 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] Method getWishlist executed in 19 ms
2025-05-12 09:25:22,431 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,432 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-6] Get wishlist request for user: 1
2025-05-12 09:25:22,432 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-3] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,432 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] RESPONSE: Status=200, Time=71ms
2025-05-12 09:25:22,432 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,432 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,429 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,433 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,433 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,434 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,433 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] REQUEST: GET /wishlist
2025-05-12 09:25:22,435 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,435 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-10] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,435 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-1] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,435 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-1] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,435 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,433 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,435 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,435 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,436 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Found Authorization header with Bearer token
2025-05-12 09:25:22,436 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,436 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,437 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Found Authorization header with Bearer token
2025-05-12 09:25:22,437 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,437 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-10] JWT token validation successful
2025-05-12 09:25:22,437 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-1] JWT token validation successful
2025-05-12 09:25:22,437 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-10] Extracted username from JWT token: a1234
2025-05-12 09:25:22,437 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Valid JWT token found for user: a1234
2025-05-12 09:25:22,437 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-1] Extracted username from JWT token: a1234
2025-05-12 09:25:22,437 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Valid JWT token found for user: a1234
2025-05-12 09:25:22,436 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,438 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,438 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] User authorities: [ROLE_USER]
2025-05-12 09:25:22,439 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,439 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@1f335faa, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,439 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,439 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-2] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,438 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,439 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,439 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,439 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,439 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,440 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,440 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,440 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-9] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,440 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,441 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,441 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-9] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,441 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-9] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,441 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-4] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@e31facc],[]>]
2025-05-12 09:25:22,441 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-9] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,441 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,441 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-4] Method getWishlist executed in 17 ms
2025-05-12 09:25:22,441 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-9] Get wishlist request for user: 1
2025-05-12 09:25:22,441 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,443 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-4] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,442 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,443 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,442 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,442 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,444 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] User authorities: [ROLE_USER]
2025-05-12 09:25:22,443 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,444 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,444 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,445 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] User authorities: [ROLE_USER]
2025-05-12 09:25:22,444 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] RESPONSE: Status=200, Time=65ms
2025-05-12 09:25:22,445 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,445 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@178cb679, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,444 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,444 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,445 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-1] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,445 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@1d9d653, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,445 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-10] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,446 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] REQUEST: GET /wishlist
2025-05-12 09:25:22,446 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,446 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,446 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-8] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,446 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-8] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,447 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,447 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,447 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,446 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@44332b54],[]>]
2025-05-12 09:25:22,447 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Found Authorization header with Bearer token
2025-05-12 09:25:22,447 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,447 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,447 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] Method getWishlist executed in 16 ms
2025-05-12 09:25:22,447 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,448 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-2] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,448 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-8] JWT token validation successful
2025-05-12 09:25:22,448 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-2] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,448 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-8] Extracted username from JWT token: a1234
2025-05-12 09:25:22,448 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Valid JWT token found for user: a1234
2025-05-12 09:25:22,448 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-2] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,448 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,448 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,449 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-6] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,449 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,450 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] RESPONSE: Status=200, Time=60ms
2025-05-12 09:25:22,450 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-2] Get wishlist request for user: 1
2025-05-12 09:25:22,450 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,450 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,450 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,450 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,450 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,449 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,453 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-1] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,454 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-1] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,454 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,457 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,453 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-9] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@618890d],[]>]
2025-05-12 09:25:22,452 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] REQUEST: GET /wishlist
2025-05-12 09:25:22,458 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,458 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-5] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,459 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-5] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,459 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-10] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,455 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,459 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-1] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,459 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,459 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,457 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-9] Method getWishlist executed in 16 ms
2025-05-12 09:25:22,460 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,461 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Found Authorization header with Bearer token
2025-05-12 09:25:22,461 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,461 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-10] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,461 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-10] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,461 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-10] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,461 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-10] Get wishlist request for user: 1
2025-05-12 09:25:22,460 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-9] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,464 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-5] JWT token validation successful
2025-05-12 09:25:22,464 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,460 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,462 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,464 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-1] Get wishlist request for user: 1
2025-05-12 09:25:22,464 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-5] Extracted username from JWT token: a1234
2025-05-12 09:25:22,465 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] RESPONSE: Status=200, Time=66ms
2025-05-12 09:25:22,465 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Valid JWT token found for user: a1234
2025-05-12 09:25:22,465 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,465 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,465 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,466 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,466 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] REQUEST: GET /wishlist
2025-05-12 09:25:22,466 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,467 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,466 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,467 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@3f6d3d2b],[]>]
2025-05-12 09:25:22,467 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] Method getWishlist executed in 18 ms
2025-05-12 09:25:22,467 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,467 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,468 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,468 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,468 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] User authorities: [ROLE_USER]
2025-05-12 09:25:22,468 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,467 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-7] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,467 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,468 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,468 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-2] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,468 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@6016449b, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,468 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] RESPONSE: Status=200, Time=54ms
2025-05-12 09:25:22,468 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,468 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-7] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,470 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-8] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,469 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,469 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,470 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,469 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] REQUEST: GET /wishlist
2025-05-12 09:25:22,469 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,470 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,470 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,470 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Found Authorization header with Bearer token
2025-05-12 09:25:22,471 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,471 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,471 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] User authorities: [ROLE_USER]
2025-05-12 09:25:22,471 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,471 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@4b1707c0, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,471 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-5] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,470 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,471 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-2] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,471 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-7] JWT token validation successful
2025-05-12 09:25:22,471 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-10] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@5614f854],[]>]
2025-05-12 09:25:22,472 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-10] Method getWishlist executed in 11 ms
2025-05-12 09:25:22,472 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@3fbe413f],[]>]
2025-05-12 09:25:22,472 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-2] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,473 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,473 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,473 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-7] Extracted username from JWT token: a1234
2025-05-12 09:25:22,473 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,473 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Valid JWT token found for user: a1234
2025-05-12 09:25:22,473 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,473 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-10] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,472 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] Method getWishlist executed in 8 ms
2025-05-12 09:25:22,473 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,474 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] RESPONSE: Status=200, Time=43ms
2025-05-12 09:25:22,474 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-1] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,473 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,476 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-8] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,476 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-5] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,474 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Found Authorization header with Bearer token
2025-05-12 09:25:22,475 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] REQUEST: GET /wishlist
2025-05-12 09:25:22,477 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,477 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,477 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-3] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,477 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-3] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,477 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-2] JWT token validation successful
2025-05-12 09:25:22,478 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,478 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,478 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-5] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,476 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,478 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-8] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,478 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,478 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-8] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,477 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] RESPONSE: Status=200, Time=42ms
2025-05-12 09:25:22,478 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-2] Extracted username from JWT token: a1234
2025-05-12 09:25:22,478 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Found Authorization header with Bearer token
2025-05-12 09:25:22,479 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Valid JWT token found for user: a1234
2025-05-12 09:25:22,479 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,479 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,479 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-5] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,479 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-8] Get wishlist request for user: 1
2025-05-12 09:25:22,479 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,479 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-5] Get wishlist request for user: 1
2025-05-12 09:25:22,479 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-3] JWT token validation successful
2025-05-12 09:25:22,479 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,479 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,480 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-3] Extracted username from JWT token: a1234
2025-05-12 09:25:22,480 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Valid JWT token found for user: a1234
2025-05-12 09:25:22,480 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,480 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,480 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,481 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,480 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,481 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,481 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,482 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,482 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,482 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,482 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,482 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,481 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] REQUEST: GET /wishlist
2025-05-12 09:25:22,483 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,483 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,483 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,483 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,483 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,482 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,483 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,484 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-4] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,484 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-4] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,484 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,484 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@2c572aaf],[]>]
2025-05-12 09:25:22,485 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,485 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,485 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] User authorities: [ROLE_USER]
2025-05-12 09:25:22,485 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Found Authorization header with Bearer token
2025-05-12 09:25:22,486 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,485 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,486 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,486 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,486 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,485 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] Method getWishlist executed in 6 ms
2025-05-12 09:25:22,493 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] User authorities: [ROLE_USER]
2025-05-12 09:25:22,492 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@1a27454a, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,493 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,493 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] User authorities: [ROLE_USER]
2025-05-12 09:25:22,493 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,493 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@4ee1a73b, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,493 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-7] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,493 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-4] JWT token validation successful
2025-05-12 09:25:22,493 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,493 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@48223c17, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,493 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-3] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,493 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-2] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,493 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-4] Extracted username from JWT token: a1234
2025-05-12 09:25:22,493 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Valid JWT token found for user: a1234
2025-05-12 09:25:22,493 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-8] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,493 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] RESPONSE: Status=200, Time=47ms
2025-05-12 09:25:22,494 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@132b2b81],[]>]
2025-05-12 09:25:22,494 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,494 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,495 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,494 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,495 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,495 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,494 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,495 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] Method getWishlist executed in 16 ms
2025-05-12 09:25:22,495 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] REQUEST: GET /wishlist
2025-05-12 09:25:22,496 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,496 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,496 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-6] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,496 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-6] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,497 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,497 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,497 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Found Authorization header with Bearer token
2025-05-12 09:25:22,497 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,497 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-5] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,497 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-6] JWT token validation successful
2025-05-12 09:25:22,497 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,498 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-6] Extracted username from JWT token: a1234
2025-05-12 09:25:22,498 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,498 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-2] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,498 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-3] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,498 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Valid JWT token found for user: a1234
2025-05-12 09:25:22,498 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] RESPONSE: Status=200, Time=40ms
2025-05-12 09:25:22,498 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-3] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,498 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-3] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,498 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-2] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,498 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,499 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-3] Get wishlist request for user: 1
2025-05-12 09:25:22,499 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-7] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,499 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,499 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,499 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] REQUEST: GET /wishlist
2025-05-12 09:25:22,499 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-2] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,500 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,499 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,500 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,500 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-9] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,500 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-2] Get wishlist request for user: 1
2025-05-12 09:25:22,500 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,500 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-7] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,500 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,501 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-7] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,501 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-9] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,501 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,501 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-7] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,501 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-7] Get wishlist request for user: 1
2025-05-12 09:25:22,501 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,502 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,501 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,502 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,502 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,502 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,503 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,502 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,503 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,502 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] User authorities: [ROLE_USER]
2025-05-12 09:25:22,502 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,503 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,503 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@6b6df492, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,503 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,503 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Found Authorization header with Bearer token
2025-05-12 09:25:22,503 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,503 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-4] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,504 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-9] JWT token validation successful
2025-05-12 09:25:22,504 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-9] Extracted username from JWT token: a1234
2025-05-12 09:25:22,504 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Valid JWT token found for user: a1234
2025-05-12 09:25:22,504 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,504 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,504 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,505 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,505 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,505 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@21fc3e61],[]>]
2025-05-12 09:25:22,505 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,505 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] Method getWishlist executed in 7 ms
2025-05-12 09:25:22,505 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@7273af],[]>]
2025-05-12 09:25:22,506 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] Method getWishlist executed in 6 ms
2025-05-12 09:25:22,506 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,506 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,506 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,506 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] User authorities: [ROLE_USER]
2025-05-12 09:25:22,507 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,507 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@2217474a, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,507 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-3] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,507 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] RESPONSE: Status=200, Time=30ms
2025-05-12 09:25:22,507 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-6] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,507 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-2] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,507 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] RESPONSE: Status=200, Time=36ms
2025-05-12 09:25:22,508 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,508 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,508 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,508 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,509 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] REQUEST: GET /wishlist
2025-05-12 09:25:22,509 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,510 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-10] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,510 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-10] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,510 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-4] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,510 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,510 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-7] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@64efb4bd],[]>]
2025-05-12 09:25:22,510 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-7] Method getWishlist executed in 9 ms
2025-05-12 09:25:22,510 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,510 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-4] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,510 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,510 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,510 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Found Authorization header with Bearer token
2025-05-12 09:25:22,510 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-4] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,510 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-4] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,511 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-4] Get wishlist request for user: 1
2025-05-12 09:25:22,511 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] REQUEST: GET /wishlist
2025-05-12 09:25:22,511 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,510 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,511 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-1] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,511 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-1] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,511 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-10] JWT token validation successful
2025-05-12 09:25:22,512 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,512 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,511 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,512 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-10] Extracted username from JWT token: a1234
2025-05-12 09:25:22,512 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Found Authorization header with Bearer token
2025-05-12 09:25:22,512 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Valid JWT token found for user: a1234
2025-05-12 09:25:22,512 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,512 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,512 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-1] JWT token validation successful
2025-05-12 09:25:22,512 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-1] Extracted username from JWT token: a1234
2025-05-12 09:25:22,512 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,512 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Valid JWT token found for user: a1234
2025-05-12 09:25:22,513 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,513 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,513 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-7] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,514 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,514 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] RESPONSE: Status=200, Time=47ms
2025-05-12 09:25:22,514 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,514 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,514 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,514 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-6] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,515 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,515 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-6] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,515 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] REQUEST: GET /wishlist
2025-05-12 09:25:22,515 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,515 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,516 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-6] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,516 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,516 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,515 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:22,516 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,516 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,516 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-8] Securing GET /wishlist?currentUserId=1
2025-05-12 09:25:22,516 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,517 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-6] Get wishlist request for user: 1
2025-05-12 09:25:22,518 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-8] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:22,518 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,518 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] User authorities: [ROLE_USER]
2025-05-12 09:25:22,518 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,518 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@44f9b62d, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,519 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-4] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@3d0680fb],[]>]
2025-05-12 09:25:22,519 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-9] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,519 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Processing request to URL: /wishlist, Method: GET
2025-05-12 09:25:22,519 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-4] Method getWishlist executed in 9 ms
2025-05-12 09:25:22,519 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,519 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Found Authorization header with Bearer token
2025-05-12 09:25:22,519 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:22,518 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,520 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-4] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,519 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-8] JWT token validation successful
2025-05-12 09:25:22,520 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,521 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,520 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] RESPONSE: Status=200, Time=36ms
2025-05-12 09:25:22,521 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] User authorities: [ROLE_USER]
2025-05-12 09:25:22,521 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,521 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-8] Extracted username from JWT token: a1234
2025-05-12 09:25:22,521 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@455bc6db, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,521 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Valid JWT token found for user: a1234
2025-05-12 09:25:22,521 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-10] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,521 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,522 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] User authorities: [ROLE_USER]
2025-05-12 09:25:22,522 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,522 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@308cf744, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,522 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-1] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,522 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:22,522 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,523 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:22,522 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,523 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,523 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,523 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,524 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,525 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,525 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:22,525 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,525 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,527 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-10] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,527 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@5b339b12],[]>]
2025-05-12 09:25:22,527 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] Method getWishlist executed in 11 ms
2025-05-12 09:25:22,527 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-9] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,527 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,527 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-9] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,527 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-10] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,527 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,528 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-9] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,528 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-10] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,528 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-9] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,528 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-6] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,528 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-10] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,528 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-10] Get wishlist request for user: 1
2025-05-12 09:25:22,528 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-9] Get wishlist request for user: 1
2025-05-12 09:25:22,528 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] RESPONSE: Status=200, Time=32ms
2025-05-12 09:25:22,529 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,529 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,529 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,529 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] User authorities: [ROLE_USER]
2025-05-12 09:25:22,530 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:22,530 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@2593faba, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:22,530 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,530 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-8] Secured GET /wishlist?currentUserId=1
2025-05-12 09:25:22,530 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,533 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,533 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,533 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:22,534 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,534 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,534 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,535 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-1] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,535 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,536 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,537 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-10] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@7e5bb6d],[]>]
2025-05-12 09:25:22,537 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-1] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,537 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-10] Method getWishlist executed in 9 ms
2025-05-12 09:25:22,537 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,537 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-1] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,537 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-8] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,538 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-8] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController]
2025-05-12 09:25:22,538 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,538 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,538 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-8] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.WishlistController.getWishlist(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.WishlistController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:22,538 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-1] Get wishlist request for user: 1
2025-05-12 09:25:22,538 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] ENTERING getWishlist with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:22,538 INFO com.example.tmdt.controller.WishlistController [http-nio-8080-exec-8] Get wishlist request for user: 1
2025-05-12 09:25:22,538 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-10] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,538 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] RESPONSE: Status=200, Time=28ms
2025-05-12 09:25:22,538 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,538 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        wishlist0_.id as id1_24_,
        wishlist0_.created_at as created_2_24_,
        wishlist0_.product_id as product_3_24_,
        wishlist0_.user_id as user_id4_24_ 
    from
        wishlists wishlist0_ 
    where
        wishlist0_.user_id=?
2025-05-12 09:25:22,539 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,539 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:22,540 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-9] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@6887064c],[]>]
2025-05-12 09:25:22,540 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,540 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-9] Method getWishlist executed in 12 ms
2025-05-12 09:25:22,540 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,541 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-9] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,542 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] RESPONSE: Status=200, Time=42ms
2025-05-12 09:25:22,542 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,542 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        product0_.id as id1_11_0_,
        product0_.average_rating as average_2_11_0_,
        product0_.category_id as categor14_11_0_,
        product0_.created_at as created_3_11_0_,
        product0_.description as descript4_11_0_,
        product0_.discount_percentage as discount5_11_0_,
        product0_.image_url as image_ur6_11_0_,
        product0_.is_featured as is_featu7_11_0_,
        product0_.name as name8_11_0_,
        product0_.price as price9_11_0_,
        product0_.review_count as review_10_11_0_,
        product0_.sold_count as sold_co11_11_0_,
        product0_.stock as stock12_11_0_,
        product0_.updated_at as updated13_11_0_,
        category1_.id as id1_1_1_,
        category1_.created_at as created_2_1_1_,
        category1_.description as descript3_1_1_,
        category1_.display_order as display_4_1_1_,
        category1_.image_url as image_ur5_1_1_,
        category1_.is_active as is_activ6_1_1_,
        category1_.name as name7_1_1_,
        category1_.parent_id as parent_i9_1_1_,
        category1_.updated_at as updated_8_1_1_ 
    from
        products product0_ 
    left outer join
        categories category1_ 
            on product0_.category_id=category1_.id 
    where
        product0_.id=?
2025-05-12 09:25:22,542 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,543 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,543 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@1258d51b],[]>]
2025-05-12 09:25:22,544 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] Method getWishlist executed in 6 ms
2025-05-12 09:25:22,545 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-8] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,545 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] RESPONSE: Status=200, Time=29ms
2025-05-12 09:25:22,547 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        images0_.product_id as product_5_9_0_,
        images0_.id as id1_9_0_,
        images0_.id as id1_9_1_,
        images0_.created_at as created_2_9_1_,
        images0_.display_order as display_3_9_1_,
        images0_.url as url4_9_1_,
        images0_.product_id as product_5_9_1_ 
    from
        product_images images0_ 
    where
        images0_.product_id=?
2025-05-12 09:25:22,548 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [35]
2025-05-12 09:25:22,549 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] EXITING getWishlist with result: [<200 OK OK,[com.example.tmdt.payload.response.ProductResponse@11b6143e],[]>]
2025-05-12 09:25:22,550 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] Method getWishlist executed in 12 ms
2025-05-12 09:25:22,551 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-1] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:22,551 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] RESPONSE: Status=200, Time=40ms
2025-05-12 09:25:27,248 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2025-05-12 09:25:27,249 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2025-05-12 09:25:27,249 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-05-12 09:25:38,619 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] REQUEST: GET /notifications
2025-05-12 09:25:38,619 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:38,619 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-5] Securing GET /notifications?currentUserId=1
2025-05-12 09:25:38,620 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-5] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:38,620 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Processing request to URL: /notifications, Method: GET
2025-05-12 09:25:38,620 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:38,620 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Found Authorization header with Bearer token
2025-05-12 09:25:38,620 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:38,620 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-5] JWT token validation successful
2025-05-12 09:25:38,621 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-5] Extracted username from JWT token: a1234
2025-05-12 09:25:38,621 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Valid JWT token found for user: a1234
2025-05-12 09:25:38,623 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:38,624 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:38,625 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:38,625 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:38,627 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:38,628 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] User authorities: [ROLE_USER]
2025-05-12 09:25:38,628 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:38,628 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@5b464f19, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:38,628 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-5] Secured GET /notifications?currentUserId=1
2025-05-12 09:25:38,630 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:38,630 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:38,633 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-5] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:25:38,633 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-5] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:25:38,633 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-5] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:38,633 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] ENTERING getAllNotifications with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:38,634 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        notificati0_.id as id1_6_,
        notificati0_.created_at as created_2_6_,
        notificati0_.is_read as is_read3_6_,
        notificati0_.message as message4_6_,
        notificati0_.reference_id as referenc5_6_,
        notificati0_.title as title6_6_,
        notificati0_.type as type7_6_,
        notificati0_.user_id as user_id8_6_ 
    from
        notifications notificati0_ 
    where
        notificati0_.user_id=?
2025-05-12 09:25:38,634 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:38,637 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] EXITING getAllNotifications with result: [<200 OK OK,[Notification(id=1, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #1 của bạn đã được xác nhận. Tổng tiền: 19990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=1, isRead=true, createdAt=2025-04-19T19:20:21), Notification(id=2, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #2 của bạn đã được xác nhận. Tổng tiền: 19990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=2, isRead=true, createdAt=2025-04-19T19:22:05), Notification(id=3, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #2 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=2, isRead=true, createdAt=2025-04-19T19:22:16), Notification(id=4, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:09), Notification(id=5, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:13), Notification(id=6, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:25), Notification(id=7, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #3 của bạn đã được xác nhận. Tổng tiền: 17990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:12), Notification(id=8, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #3 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:16), Notification(id=9, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Hoàn tiền thành công, message=Đơn hàng #3 đã được hoàn tiền thành công. Số tiền 17990000.00 đã được hoàn vào tài khoản của bạn., type=SYSTEM_ANNOUNCEMENT, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:16), Notification(id=10, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #4 của bạn đã được xác nhận. Tổng tiền: 16011000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=4, isRead=true, createdAt=2025-04-19T19:39:07), Notification(id=11, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #5 của bạn đã được xác nhận. Tổng tiền: 62291000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=5, isRead=true, createdAt=2025-04-22T21:58:23), Notification(id=12, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:42), Notification(id=13, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:46), Notification(id=14, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:50), Notification(id=15, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #6 của bạn đã được xác nhận. Tổng tiền: 62291000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=6, isRead=true, createdAt=2025-04-22T22:59:45), Notification(id=17, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #5 has been approved., type=SYSTEM_ANNOUNCEMENT, referenceId=5, isRead=true, createdAt=2025-05-01T12:01:36), Notification(id=18, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #7 của bạn đã được xác nhận. Tổng tiền: 26720000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=7, isRead=true, createdAt=2025-05-01T12:46:55), Notification(id=19, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #8 của bạn đã được xác nhận. Tổng tiền: 17810000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=8, isRead=true, createdAt=2025-05-01T12:48:51), Notification(id=20, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #8 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=8, isRead=true, createdAt=2025-05-01T12:49:50), Notification(id=21, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Hoàn tiền thành công, message=Đơn hàng #8 đã được hoàn tiền thành công. Số tiền 17810000.00 đã được hoàn vào tài khoản của bạn., type=SYSTEM_ANNOUNCEMENT, referenceId=8, isRead=true, createdAt=2025-05-01T12:49:50), Notification(id=22, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #9 của bạn đã được xác nhận. Tổng tiền: 32660000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=9, isRead=true, createdAt=2025-05-01T12:51:55), Notification(id=23, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Product Update, message=Một người nào đó đã đánh giá bài review của bạn, type=PRODUCT_RESTOCK, referenceId=24, isRead=true, createdAt=2025-05-01T12:57:07), Notification(id=24, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:27), Notification(id=25, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:28), Notification(id=26, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:30), Notification(id=27, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #4 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:31), Notification(id=28, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:44), Notification(id=29, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:47), Notification(id=30, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:49), Notification(id=31, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:51), Notification(id=32, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:55), Notification(id=33, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:56), Notification(id=34, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T13:00:01), Notification(id=35, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T13:00:03), Notification(id=38, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #7 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=7, isRead=false, createdAt=2025-05-01T13:03:19), Notification(id=39, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #9 has been approved. The refund amount of 32660000.00 has been credited to your account., type=SYSTEM_ANNOUNCEMENT, referenceId=9, isRead=false, createdAt=2025-05-01T13:03:27), Notification(id=41, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #1 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=1, isRead=false, createdAt=2025-05-02T21:02:18), Notification(id=42, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #10 của bạn đã được xác nhận. Tổng tiền: 61360000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=10, isRead=false, createdAt=2025-05-02T22:33:52), Notification(id=43, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #11 của bạn đã được xác nhận. Tổng tiền: 9890000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=11, isRead=false, createdAt=2025-05-02T22:34:19), Notification(id=44, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:30), Notification(id=45, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:31), Notification(id=46, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:33), Notification(id=47, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:34), Notification(id=48, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:34), Notification(id=49, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:36), Notification(id=51, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #11 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=11, isRead=false, createdAt=2025-05-02T22:36:22), Notification(id=53, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #10 has been approved. The refund amount of 61360000.00 has been credited to your account., type=SYSTEM_ANNOUNCEMENT, referenceId=10, isRead=false, createdAt=2025-05-02T22:36:59)],[]>]
2025-05-12 09:25:38,639 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] Method getAllNotifications executed in 6 ms
2025-05-12 09:25:38,640 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-5] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:38,640 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] RESPONSE: Status=200, Time=21ms
2025-05-12 09:25:38,684 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] REQUEST: GET /notifications/unread-count
2025-05-12 09:25:38,684 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:25:38,685 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-3] Securing GET /notifications/unread-count?currentUserId=1
2025-05-12 09:25:38,685 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-3] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:25:38,685 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Processing request to URL: /notifications/unread-count, Method: GET
2025-05-12 09:25:38,685 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:38,685 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Found Authorization header with Bearer token
2025-05-12 09:25:38,685 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:25:38,686 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-3] JWT token validation successful
2025-05-12 09:25:38,686 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-3] Extracted username from JWT token: a1234
2025-05-12 09:25:38,686 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Valid JWT token found for user: a1234
2025-05-12 09:25:38,688 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:25:38,689 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:25:38,690 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:25:38,690 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:38,692 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:38,692 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] User authorities: [ROLE_USER]
2025-05-12 09:25:38,692 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:25:38,692 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@7cf1a12e, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:25:38,693 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-3] Secured GET /notifications/unread-count?currentUserId=1
2025-05-12 09:25:38,694 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:25:38,694 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:38,697 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-3] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:25:38,697 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-3] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:25:38,697 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-3] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:25:38,697 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] ENTERING getUnreadCount with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:25:38,698 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        count(notificati0_.id) as col_0_0_ 
    from
        notifications notificati0_ 
    where
        notificati0_.user_id=? 
        and notificati0_.is_read=0
2025-05-12 09:25:38,698 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:25:38,700 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] EXITING getUnreadCount with result: [<200 OK OK,25,[]>]
2025-05-12 09:25:38,700 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] Method getUnreadCount executed in 3 ms
2025-05-12 09:25:38,701 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-3] Cleared SecurityContextHolder to complete request
2025-05-12 09:25:38,701 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] RESPONSE: Status=200, Time=16ms
2025-05-12 09:25:57,250 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2025-05-12 09:25:57,251 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2025-05-12 09:25:57,251 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-05-12 09:26:00,231 INFO org.springframework.web.socket.config.WebSocketMessageBrokerStats [MessageBroker-1] WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2025-05-12 09:26:08,821 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] REQUEST: GET /notifications
2025-05-12 09:26:08,822 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:26:08,822 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] REQUEST: GET /notifications/unread-count
2025-05-12 09:26:08,822 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-2] Securing GET /notifications?currentUserId=1
2025-05-12 09:26:08,822 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:26:08,822 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-2] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:26:08,822 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-7] Securing GET /notifications/unread-count?currentUserId=1
2025-05-12 09:26:08,823 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-7] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:26:08,823 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Processing request to URL: /notifications, Method: GET
2025-05-12 09:26:08,823 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:26:08,823 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Found Authorization header with Bearer token
2025-05-12 09:26:08,823 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Processing request to URL: /notifications/unread-count, Method: GET
2025-05-12 09:26:08,823 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:26:08,823 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:26:08,823 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Found Authorization header with Bearer token
2025-05-12 09:26:08,823 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:26:08,823 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-2] JWT token validation successful
2025-05-12 09:26:08,823 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-7] JWT token validation successful
2025-05-12 09:26:08,823 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-7] Extracted username from JWT token: a1234
2025-05-12 09:26:08,823 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-2] Extracted username from JWT token: a1234
2025-05-12 09:26:08,824 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Valid JWT token found for user: a1234
2025-05-12 09:26:08,823 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Valid JWT token found for user: a1234
2025-05-12 09:26:08,826 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:26:08,826 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:26:08,827 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:26:08,827 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:26:08,829 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:26:08,829 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:26:08,830 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:26:08,830 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:26:08,833 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:26:08,833 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:26:08,833 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] User authorities: [ROLE_USER]
2025-05-12 09:26:08,833 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] User authorities: [ROLE_USER]
2025-05-12 09:26:08,833 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:26:08,833 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:26:08,833 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@663f4327, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:26:08,833 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@3083ead8, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:26:08,833 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-7] Secured GET /notifications/unread-count?currentUserId=1
2025-05-12 09:26:08,834 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-2] Secured GET /notifications?currentUserId=1
2025-05-12 09:26:08,835 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:26:08,835 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:26:08,836 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:26:08,836 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:26:08,839 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-2] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:26:08,839 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-7] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:26:08,840 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-2] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:26:08,840 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-7] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:26:08,840 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-7] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:26:08,840 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-2] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:26:08,840 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-7] ENTERING getUnreadCount with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:26:08,841 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] ENTERING getAllNotifications with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:26:08,841 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        count(notificati0_.id) as col_0_0_ 
    from
        notifications notificati0_ 
    where
        notificati0_.user_id=? 
        and notificati0_.is_read=0
2025-05-12 09:26:08,841 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        notificati0_.id as id1_6_,
        notificati0_.created_at as created_2_6_,
        notificati0_.is_read as is_read3_6_,
        notificati0_.message as message4_6_,
        notificati0_.reference_id as referenc5_6_,
        notificati0_.title as title6_6_,
        notificati0_.type as type7_6_,
        notificati0_.user_id as user_id8_6_ 
    from
        notifications notificati0_ 
    where
        notificati0_.user_id=?
2025-05-12 09:26:08,841 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:26:08,841 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:26:08,843 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-7] EXITING getUnreadCount with result: [<200 OK OK,25,[]>]
2025-05-12 09:26:08,843 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-7] Method getUnreadCount executed in 3 ms
2025-05-12 09:26:08,845 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-7] Cleared SecurityContextHolder to complete request
2025-05-12 09:26:08,844 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] EXITING getAllNotifications with result: [<200 OK OK,[Notification(id=1, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #1 của bạn đã được xác nhận. Tổng tiền: 19990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=1, isRead=true, createdAt=2025-04-19T19:20:21), Notification(id=2, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #2 của bạn đã được xác nhận. Tổng tiền: 19990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=2, isRead=true, createdAt=2025-04-19T19:22:05), Notification(id=3, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #2 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=2, isRead=true, createdAt=2025-04-19T19:22:16), Notification(id=4, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:09), Notification(id=5, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:13), Notification(id=6, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:25), Notification(id=7, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #3 của bạn đã được xác nhận. Tổng tiền: 17990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:12), Notification(id=8, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #3 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:16), Notification(id=9, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Hoàn tiền thành công, message=Đơn hàng #3 đã được hoàn tiền thành công. Số tiền 17990000.00 đã được hoàn vào tài khoản của bạn., type=SYSTEM_ANNOUNCEMENT, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:16), Notification(id=10, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #4 của bạn đã được xác nhận. Tổng tiền: 16011000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=4, isRead=true, createdAt=2025-04-19T19:39:07), Notification(id=11, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #5 của bạn đã được xác nhận. Tổng tiền: 62291000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=5, isRead=true, createdAt=2025-04-22T21:58:23), Notification(id=12, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:42), Notification(id=13, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:46), Notification(id=14, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:50), Notification(id=15, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #6 của bạn đã được xác nhận. Tổng tiền: 62291000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=6, isRead=true, createdAt=2025-04-22T22:59:45), Notification(id=17, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #5 has been approved., type=SYSTEM_ANNOUNCEMENT, referenceId=5, isRead=true, createdAt=2025-05-01T12:01:36), Notification(id=18, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #7 của bạn đã được xác nhận. Tổng tiền: 26720000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=7, isRead=true, createdAt=2025-05-01T12:46:55), Notification(id=19, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #8 của bạn đã được xác nhận. Tổng tiền: 17810000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=8, isRead=true, createdAt=2025-05-01T12:48:51), Notification(id=20, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #8 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=8, isRead=true, createdAt=2025-05-01T12:49:50), Notification(id=21, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Hoàn tiền thành công, message=Đơn hàng #8 đã được hoàn tiền thành công. Số tiền 17810000.00 đã được hoàn vào tài khoản của bạn., type=SYSTEM_ANNOUNCEMENT, referenceId=8, isRead=true, createdAt=2025-05-01T12:49:50), Notification(id=22, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #9 của bạn đã được xác nhận. Tổng tiền: 32660000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=9, isRead=true, createdAt=2025-05-01T12:51:55), Notification(id=23, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Product Update, message=Một người nào đó đã đánh giá bài review của bạn, type=PRODUCT_RESTOCK, referenceId=24, isRead=true, createdAt=2025-05-01T12:57:07), Notification(id=24, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:27), Notification(id=25, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:28), Notification(id=26, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:30), Notification(id=27, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #4 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:31), Notification(id=28, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:44), Notification(id=29, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:47), Notification(id=30, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:49), Notification(id=31, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:51), Notification(id=32, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:55), Notification(id=33, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:56), Notification(id=34, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T13:00:01), Notification(id=35, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T13:00:03), Notification(id=38, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #7 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=7, isRead=false, createdAt=2025-05-01T13:03:19), Notification(id=39, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #9 has been approved. The refund amount of 32660000.00 has been credited to your account., type=SYSTEM_ANNOUNCEMENT, referenceId=9, isRead=false, createdAt=2025-05-01T13:03:27), Notification(id=41, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #1 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=1, isRead=false, createdAt=2025-05-02T21:02:18), Notification(id=42, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #10 của bạn đã được xác nhận. Tổng tiền: 61360000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=10, isRead=false, createdAt=2025-05-02T22:33:52), Notification(id=43, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #11 của bạn đã được xác nhận. Tổng tiền: 9890000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=11, isRead=false, createdAt=2025-05-02T22:34:19), Notification(id=44, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:30), Notification(id=45, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:31), Notification(id=46, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:33), Notification(id=47, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:34), Notification(id=48, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:34), Notification(id=49, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:36), Notification(id=51, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #11 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=11, isRead=false, createdAt=2025-05-02T22:36:22), Notification(id=53, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #10 has been approved. The refund amount of 61360000.00 has been credited to your account., type=SYSTEM_ANNOUNCEMENT, referenceId=10, isRead=false, createdAt=2025-05-02T22:36:59)],[]>]
2025-05-12 09:26:08,846 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] RESPONSE: Status=200, Time=24ms
2025-05-12 09:26:08,847 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] Method getAllNotifications executed in 6 ms
2025-05-12 09:26:08,848 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-2] Cleared SecurityContextHolder to complete request
2025-05-12 09:26:08,848 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] RESPONSE: Status=200, Time=26ms
2025-05-12 09:26:27,252 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2025-05-12 09:26:27,252 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2025-05-12 09:26:27,252 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-05-12 09:26:39,148 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] REQUEST: GET /notifications
2025-05-12 09:26:39,149 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] REQUEST: GET /notifications/unread-count
2025-05-12 09:26:39,149 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:26:39,149 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:26:39,149 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-1] Securing GET /notifications/unread-count?currentUserId=1
2025-05-12 09:26:39,149 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-1] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:26:39,149 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-8] Securing GET /notifications?currentUserId=1
2025-05-12 09:26:39,149 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-8] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:26:39,150 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Processing request to URL: /notifications/unread-count, Method: GET
2025-05-12 09:26:39,150 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Processing request to URL: /notifications, Method: GET
2025-05-12 09:26:39,150 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:26:39,150 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Found Authorization header with Bearer token
2025-05-12 09:26:39,150 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:26:39,150 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:26:39,150 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Found Authorization header with Bearer token
2025-05-12 09:26:39,150 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:26:39,150 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-1] JWT token validation successful
2025-05-12 09:26:39,150 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-8] JWT token validation successful
2025-05-12 09:26:39,150 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-8] Extracted username from JWT token: a1234
2025-05-12 09:26:39,151 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Valid JWT token found for user: a1234
2025-05-12 09:26:39,151 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-1] Extracted username from JWT token: a1234
2025-05-12 09:26:39,151 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Valid JWT token found for user: a1234
2025-05-12 09:26:39,153 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:26:39,153 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:26:39,153 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:26:39,153 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:26:39,155 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:26:39,155 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:26:39,155 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:26:39,155 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:26:39,157 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:26:39,157 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:26:39,158 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] User authorities: [ROLE_USER]
2025-05-12 09:26:39,158 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] User authorities: [ROLE_USER]
2025-05-12 09:26:39,158 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:26:39,158 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:26:39,158 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@27c6e8b, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:26:39,158 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@6f4faa15, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:26:39,158 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-1] Secured GET /notifications/unread-count?currentUserId=1
2025-05-12 09:26:39,158 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-8] Secured GET /notifications?currentUserId=1
2025-05-12 09:26:39,160 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:26:39,160 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:26:39,160 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:26:39,160 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:26:39,163 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-1] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:26:39,163 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-8] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:26:39,163 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-1] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:26:39,163 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-8] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:26:39,163 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-1] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:26:39,163 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-8] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:26:39,163 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] ENTERING getUnreadCount with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:26:39,163 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] ENTERING getAllNotifications with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:26:39,164 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        notificati0_.id as id1_6_,
        notificati0_.created_at as created_2_6_,
        notificati0_.is_read as is_read3_6_,
        notificati0_.message as message4_6_,
        notificati0_.reference_id as referenc5_6_,
        notificati0_.title as title6_6_,
        notificati0_.type as type7_6_,
        notificati0_.user_id as user_id8_6_ 
    from
        notifications notificati0_ 
    where
        notificati0_.user_id=?
2025-05-12 09:26:39,164 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        count(notificati0_.id) as col_0_0_ 
    from
        notifications notificati0_ 
    where
        notificati0_.user_id=? 
        and notificati0_.is_read=0
2025-05-12 09:26:39,164 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:26:39,164 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:26:39,166 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] EXITING getUnreadCount with result: [<200 OK OK,25,[]>]
2025-05-12 09:26:39,166 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] Method getUnreadCount executed in 3 ms
2025-05-12 09:26:39,167 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-1] Cleared SecurityContextHolder to complete request
2025-05-12 09:26:39,167 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] RESPONSE: Status=200, Time=18ms
2025-05-12 09:26:39,167 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] EXITING getAllNotifications with result: [<200 OK OK,[Notification(id=1, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #1 của bạn đã được xác nhận. Tổng tiền: 19990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=1, isRead=true, createdAt=2025-04-19T19:20:21), Notification(id=2, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #2 của bạn đã được xác nhận. Tổng tiền: 19990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=2, isRead=true, createdAt=2025-04-19T19:22:05), Notification(id=3, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #2 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=2, isRead=true, createdAt=2025-04-19T19:22:16), Notification(id=4, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:09), Notification(id=5, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:13), Notification(id=6, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:25), Notification(id=7, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #3 của bạn đã được xác nhận. Tổng tiền: 17990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:12), Notification(id=8, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #3 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:16), Notification(id=9, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Hoàn tiền thành công, message=Đơn hàng #3 đã được hoàn tiền thành công. Số tiền 17990000.00 đã được hoàn vào tài khoản của bạn., type=SYSTEM_ANNOUNCEMENT, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:16), Notification(id=10, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #4 của bạn đã được xác nhận. Tổng tiền: 16011000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=4, isRead=true, createdAt=2025-04-19T19:39:07), Notification(id=11, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #5 của bạn đã được xác nhận. Tổng tiền: 62291000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=5, isRead=true, createdAt=2025-04-22T21:58:23), Notification(id=12, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:42), Notification(id=13, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:46), Notification(id=14, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:50), Notification(id=15, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #6 của bạn đã được xác nhận. Tổng tiền: 62291000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=6, isRead=true, createdAt=2025-04-22T22:59:45), Notification(id=17, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #5 has been approved., type=SYSTEM_ANNOUNCEMENT, referenceId=5, isRead=true, createdAt=2025-05-01T12:01:36), Notification(id=18, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #7 của bạn đã được xác nhận. Tổng tiền: 26720000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=7, isRead=true, createdAt=2025-05-01T12:46:55), Notification(id=19, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #8 của bạn đã được xác nhận. Tổng tiền: 17810000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=8, isRead=true, createdAt=2025-05-01T12:48:51), Notification(id=20, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #8 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=8, isRead=true, createdAt=2025-05-01T12:49:50), Notification(id=21, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Hoàn tiền thành công, message=Đơn hàng #8 đã được hoàn tiền thành công. Số tiền 17810000.00 đã được hoàn vào tài khoản của bạn., type=SYSTEM_ANNOUNCEMENT, referenceId=8, isRead=true, createdAt=2025-05-01T12:49:50), Notification(id=22, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #9 của bạn đã được xác nhận. Tổng tiền: 32660000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=9, isRead=true, createdAt=2025-05-01T12:51:55), Notification(id=23, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Product Update, message=Một người nào đó đã đánh giá bài review của bạn, type=PRODUCT_RESTOCK, referenceId=24, isRead=true, createdAt=2025-05-01T12:57:07), Notification(id=24, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:27), Notification(id=25, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:28), Notification(id=26, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:30), Notification(id=27, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #4 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:31), Notification(id=28, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:44), Notification(id=29, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:47), Notification(id=30, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:49), Notification(id=31, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:51), Notification(id=32, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:55), Notification(id=33, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:56), Notification(id=34, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T13:00:01), Notification(id=35, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T13:00:03), Notification(id=38, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #7 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=7, isRead=false, createdAt=2025-05-01T13:03:19), Notification(id=39, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #9 has been approved. The refund amount of 32660000.00 has been credited to your account., type=SYSTEM_ANNOUNCEMENT, referenceId=9, isRead=false, createdAt=2025-05-01T13:03:27), Notification(id=41, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #1 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=1, isRead=false, createdAt=2025-05-02T21:02:18), Notification(id=42, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #10 của bạn đã được xác nhận. Tổng tiền: 61360000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=10, isRead=false, createdAt=2025-05-02T22:33:52), Notification(id=43, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #11 của bạn đã được xác nhận. Tổng tiền: 9890000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=11, isRead=false, createdAt=2025-05-02T22:34:19), Notification(id=44, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:30), Notification(id=45, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:31), Notification(id=46, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:33), Notification(id=47, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:34), Notification(id=48, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:34), Notification(id=49, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:36), Notification(id=51, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #11 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=11, isRead=false, createdAt=2025-05-02T22:36:22), Notification(id=53, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #10 has been approved. The refund amount of 61360000.00 has been credited to your account., type=SYSTEM_ANNOUNCEMENT, referenceId=10, isRead=false, createdAt=2025-05-02T22:36:59)],[]>]
2025-05-12 09:26:39,168 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] Method getAllNotifications executed in 5 ms
2025-05-12 09:26:39,172 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-8] Cleared SecurityContextHolder to complete request
2025-05-12 09:26:39,172 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] RESPONSE: Status=200, Time=23ms
2025-05-12 09:26:57,253 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2025-05-12 09:26:57,253 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2025-05-12 09:26:57,253 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-05-12 09:27:09,264 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] REQUEST: GET /notifications
2025-05-12 09:27:09,265 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:27:09,265 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-5] Securing GET /notifications?currentUserId=1
2025-05-12 09:27:09,265 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-5] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:27:09,265 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] REQUEST: GET /notifications/unread-count
2025-05-12 09:27:09,266 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Processing request to URL: /notifications, Method: GET
2025-05-12 09:27:09,266 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:27:09,266 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Found Authorization header with Bearer token
2025-05-12 09:27:09,266 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:27:09,266 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:27:09,266 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-3] Securing GET /notifications/unread-count?currentUserId=1
2025-05-12 09:27:09,266 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-5] JWT token validation successful
2025-05-12 09:27:09,266 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-5] Extracted username from JWT token: a1234
2025-05-12 09:27:09,267 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Valid JWT token found for user: a1234
2025-05-12 09:27:09,267 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-3] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:27:09,267 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Processing request to URL: /notifications/unread-count, Method: GET
2025-05-12 09:27:09,267 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:27:09,268 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Found Authorization header with Bearer token
2025-05-12 09:27:09,268 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:27:09,268 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-3] JWT token validation successful
2025-05-12 09:27:09,269 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-3] Extracted username from JWT token: a1234
2025-05-12 09:27:09,269 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Valid JWT token found for user: a1234
2025-05-12 09:27:09,269 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:27:09,269 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:27:09,271 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:27:09,271 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:27:09,271 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:27:09,272 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:27:09,273 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:27:09,274 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:27:09,275 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:27:09,275 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] User authorities: [ROLE_USER]
2025-05-12 09:27:09,275 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:27:09,275 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@1a1d19e3, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:27:09,276 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-5] Secured GET /notifications?currentUserId=1
2025-05-12 09:27:09,276 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:27:09,276 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] User authorities: [ROLE_USER]
2025-05-12 09:27:09,276 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:27:09,276 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@5a837f44, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:27:09,277 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-3] Secured GET /notifications/unread-count?currentUserId=1
2025-05-12 09:27:09,278 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:27:09,278 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:27:09,278 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:27:09,279 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:27:09,281 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-3] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:27:09,281 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-5] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:27:09,282 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-5] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:27:09,282 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-3] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:27:09,282 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-5] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:27:09,282 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-3] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:27:09,282 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] ENTERING getAllNotifications with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:27:09,282 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] ENTERING getUnreadCount with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:27:09,282 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        notificati0_.id as id1_6_,
        notificati0_.created_at as created_2_6_,
        notificati0_.is_read as is_read3_6_,
        notificati0_.message as message4_6_,
        notificati0_.reference_id as referenc5_6_,
        notificati0_.title as title6_6_,
        notificati0_.type as type7_6_,
        notificati0_.user_id as user_id8_6_ 
    from
        notifications notificati0_ 
    where
        notificati0_.user_id=?
2025-05-12 09:27:09,282 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        count(notificati0_.id) as col_0_0_ 
    from
        notifications notificati0_ 
    where
        notificati0_.user_id=? 
        and notificati0_.is_read=0
2025-05-12 09:27:09,283 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:27:09,283 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:27:09,284 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] EXITING getUnreadCount with result: [<200 OK OK,25,[]>]
2025-05-12 09:27:09,284 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] Method getUnreadCount executed in 2 ms
2025-05-12 09:27:09,285 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] EXITING getAllNotifications with result: [<200 OK OK,[Notification(id=1, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #1 của bạn đã được xác nhận. Tổng tiền: 19990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=1, isRead=true, createdAt=2025-04-19T19:20:21), Notification(id=2, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #2 của bạn đã được xác nhận. Tổng tiền: 19990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=2, isRead=true, createdAt=2025-04-19T19:22:05), Notification(id=3, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #2 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=2, isRead=true, createdAt=2025-04-19T19:22:16), Notification(id=4, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:09), Notification(id=5, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:13), Notification(id=6, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:25), Notification(id=7, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #3 của bạn đã được xác nhận. Tổng tiền: 17990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:12), Notification(id=8, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #3 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:16), Notification(id=9, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Hoàn tiền thành công, message=Đơn hàng #3 đã được hoàn tiền thành công. Số tiền 17990000.00 đã được hoàn vào tài khoản của bạn., type=SYSTEM_ANNOUNCEMENT, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:16), Notification(id=10, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #4 của bạn đã được xác nhận. Tổng tiền: 16011000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=4, isRead=true, createdAt=2025-04-19T19:39:07), Notification(id=11, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #5 của bạn đã được xác nhận. Tổng tiền: 62291000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=5, isRead=true, createdAt=2025-04-22T21:58:23), Notification(id=12, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:42), Notification(id=13, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:46), Notification(id=14, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:50), Notification(id=15, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #6 của bạn đã được xác nhận. Tổng tiền: 62291000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=6, isRead=true, createdAt=2025-04-22T22:59:45), Notification(id=17, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #5 has been approved., type=SYSTEM_ANNOUNCEMENT, referenceId=5, isRead=true, createdAt=2025-05-01T12:01:36), Notification(id=18, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #7 của bạn đã được xác nhận. Tổng tiền: 26720000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=7, isRead=true, createdAt=2025-05-01T12:46:55), Notification(id=19, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #8 của bạn đã được xác nhận. Tổng tiền: 17810000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=8, isRead=true, createdAt=2025-05-01T12:48:51), Notification(id=20, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #8 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=8, isRead=true, createdAt=2025-05-01T12:49:50), Notification(id=21, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Hoàn tiền thành công, message=Đơn hàng #8 đã được hoàn tiền thành công. Số tiền 17810000.00 đã được hoàn vào tài khoản của bạn., type=SYSTEM_ANNOUNCEMENT, referenceId=8, isRead=true, createdAt=2025-05-01T12:49:50), Notification(id=22, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #9 của bạn đã được xác nhận. Tổng tiền: 32660000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=9, isRead=true, createdAt=2025-05-01T12:51:55), Notification(id=23, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Product Update, message=Một người nào đó đã đánh giá bài review của bạn, type=PRODUCT_RESTOCK, referenceId=24, isRead=true, createdAt=2025-05-01T12:57:07), Notification(id=24, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:27), Notification(id=25, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:28), Notification(id=26, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:30), Notification(id=27, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #4 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:31), Notification(id=28, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:44), Notification(id=29, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:47), Notification(id=30, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:49), Notification(id=31, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:51), Notification(id=32, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:55), Notification(id=33, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:56), Notification(id=34, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T13:00:01), Notification(id=35, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T13:00:03), Notification(id=38, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #7 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=7, isRead=false, createdAt=2025-05-01T13:03:19), Notification(id=39, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #9 has been approved. The refund amount of 32660000.00 has been credited to your account., type=SYSTEM_ANNOUNCEMENT, referenceId=9, isRead=false, createdAt=2025-05-01T13:03:27), Notification(id=41, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #1 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=1, isRead=false, createdAt=2025-05-02T21:02:18), Notification(id=42, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #10 của bạn đã được xác nhận. Tổng tiền: 61360000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=10, isRead=false, createdAt=2025-05-02T22:33:52), Notification(id=43, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #11 của bạn đã được xác nhận. Tổng tiền: 9890000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=11, isRead=false, createdAt=2025-05-02T22:34:19), Notification(id=44, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:30), Notification(id=45, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:31), Notification(id=46, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:33), Notification(id=47, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:34), Notification(id=48, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:34), Notification(id=49, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:36), Notification(id=51, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #11 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=11, isRead=false, createdAt=2025-05-02T22:36:22), Notification(id=53, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #10 has been approved. The refund amount of 61360000.00 has been credited to your account., type=SYSTEM_ANNOUNCEMENT, referenceId=10, isRead=false, createdAt=2025-05-02T22:36:59)],[]>]
2025-05-12 09:27:09,285 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] Method getAllNotifications executed in 3 ms
2025-05-12 09:27:09,286 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-3] Cleared SecurityContextHolder to complete request
2025-05-12 09:27:09,286 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] RESPONSE: Status=200, Time=20ms
2025-05-12 09:27:09,287 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-5] Cleared SecurityContextHolder to complete request
2025-05-12 09:27:09,287 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] RESPONSE: Status=200, Time=22ms
2025-05-12 09:27:27,253 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2025-05-12 09:27:27,254 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2025-05-12 09:27:27,254 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-05-12 09:27:39,400 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] REQUEST: GET /notifications
2025-05-12 09:27:39,400 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:27:39,400 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-7] Securing GET /notifications?currentUserId=1
2025-05-12 09:27:39,400 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-7] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:27:39,401 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Processing request to URL: /notifications, Method: GET
2025-05-12 09:27:39,401 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:27:39,401 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Found Authorization header with Bearer token
2025-05-12 09:27:39,401 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:27:39,401 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-7] JWT token validation successful
2025-05-12 09:27:39,402 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-7] Extracted username from JWT token: a1234
2025-05-12 09:27:39,402 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Valid JWT token found for user: a1234
2025-05-12 09:27:39,405 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:27:39,406 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:27:39,406 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] REQUEST: GET /notifications/unread-count
2025-05-12 09:27:39,407 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:27:39,407 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-2] Securing GET /notifications/unread-count?currentUserId=1
2025-05-12 09:27:39,407 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-2] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:27:39,407 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Processing request to URL: /notifications/unread-count, Method: GET
2025-05-12 09:27:39,407 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:27:39,407 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Found Authorization header with Bearer token
2025-05-12 09:27:39,407 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:27:39,407 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:27:39,408 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:27:39,408 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-2] JWT token validation successful
2025-05-12 09:27:39,408 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-2] Extracted username from JWT token: a1234
2025-05-12 09:27:39,408 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Valid JWT token found for user: a1234
2025-05-12 09:27:39,410 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:27:39,411 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:27:39,411 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:27:39,412 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] User authorities: [ROLE_USER]
2025-05-12 09:27:39,412 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:27:39,412 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@2c0e2a02, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:27:39,412 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-7] Secured GET /notifications?currentUserId=1
2025-05-12 09:27:39,412 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:27:39,412 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:27:39,414 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:27:39,415 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:27:39,415 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] User authorities: [ROLE_USER]
2025-05-12 09:27:39,415 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:27:39,415 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:27:39,415 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@4341f317, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:27:39,415 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-2] Secured GET /notifications/unread-count?currentUserId=1
2025-05-12 09:27:39,417 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:27:39,417 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:27:39,418 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-7] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:27:39,419 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-7] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:27:39,421 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-2] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:27:39,421 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-7] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:27:39,421 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-2] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:27:39,421 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-7] ENTERING getAllNotifications with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:27:39,421 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-2] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:27:39,421 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] ENTERING getUnreadCount with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:27:39,422 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        count(notificati0_.id) as col_0_0_ 
    from
        notifications notificati0_ 
    where
        notificati0_.user_id=? 
        and notificati0_.is_read=0
2025-05-12 09:27:39,422 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        notificati0_.id as id1_6_,
        notificati0_.created_at as created_2_6_,
        notificati0_.is_read as is_read3_6_,
        notificati0_.message as message4_6_,
        notificati0_.reference_id as referenc5_6_,
        notificati0_.title as title6_6_,
        notificati0_.type as type7_6_,
        notificati0_.user_id as user_id8_6_ 
    from
        notifications notificati0_ 
    where
        notificati0_.user_id=?
2025-05-12 09:27:39,422 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:27:39,422 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:27:39,423 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] EXITING getUnreadCount with result: [<200 OK OK,25,[]>]
2025-05-12 09:27:39,424 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] Method getUnreadCount executed in 3 ms
2025-05-12 09:27:39,425 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-2] Cleared SecurityContextHolder to complete request
2025-05-12 09:27:39,424 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-7] EXITING getAllNotifications with result: [<200 OK OK,[Notification(id=1, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #1 của bạn đã được xác nhận. Tổng tiền: 19990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=1, isRead=true, createdAt=2025-04-19T19:20:21), Notification(id=2, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #2 của bạn đã được xác nhận. Tổng tiền: 19990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=2, isRead=true, createdAt=2025-04-19T19:22:05), Notification(id=3, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #2 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=2, isRead=true, createdAt=2025-04-19T19:22:16), Notification(id=4, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:09), Notification(id=5, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:13), Notification(id=6, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:25), Notification(id=7, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #3 của bạn đã được xác nhận. Tổng tiền: 17990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:12), Notification(id=8, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #3 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:16), Notification(id=9, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Hoàn tiền thành công, message=Đơn hàng #3 đã được hoàn tiền thành công. Số tiền 17990000.00 đã được hoàn vào tài khoản của bạn., type=SYSTEM_ANNOUNCEMENT, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:16), Notification(id=10, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #4 của bạn đã được xác nhận. Tổng tiền: 16011000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=4, isRead=true, createdAt=2025-04-19T19:39:07), Notification(id=11, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #5 của bạn đã được xác nhận. Tổng tiền: 62291000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=5, isRead=true, createdAt=2025-04-22T21:58:23), Notification(id=12, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:42), Notification(id=13, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:46), Notification(id=14, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:50), Notification(id=15, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #6 của bạn đã được xác nhận. Tổng tiền: 62291000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=6, isRead=true, createdAt=2025-04-22T22:59:45), Notification(id=17, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #5 has been approved., type=SYSTEM_ANNOUNCEMENT, referenceId=5, isRead=true, createdAt=2025-05-01T12:01:36), Notification(id=18, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #7 của bạn đã được xác nhận. Tổng tiền: 26720000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=7, isRead=true, createdAt=2025-05-01T12:46:55), Notification(id=19, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #8 của bạn đã được xác nhận. Tổng tiền: 17810000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=8, isRead=true, createdAt=2025-05-01T12:48:51), Notification(id=20, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #8 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=8, isRead=true, createdAt=2025-05-01T12:49:50), Notification(id=21, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Hoàn tiền thành công, message=Đơn hàng #8 đã được hoàn tiền thành công. Số tiền 17810000.00 đã được hoàn vào tài khoản của bạn., type=SYSTEM_ANNOUNCEMENT, referenceId=8, isRead=true, createdAt=2025-05-01T12:49:50), Notification(id=22, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #9 của bạn đã được xác nhận. Tổng tiền: 32660000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=9, isRead=true, createdAt=2025-05-01T12:51:55), Notification(id=23, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Product Update, message=Một người nào đó đã đánh giá bài review của bạn, type=PRODUCT_RESTOCK, referenceId=24, isRead=true, createdAt=2025-05-01T12:57:07), Notification(id=24, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:27), Notification(id=25, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:28), Notification(id=26, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:30), Notification(id=27, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #4 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:31), Notification(id=28, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:44), Notification(id=29, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:47), Notification(id=30, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:49), Notification(id=31, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:51), Notification(id=32, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:55), Notification(id=33, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:56), Notification(id=34, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T13:00:01), Notification(id=35, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T13:00:03), Notification(id=38, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #7 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=7, isRead=false, createdAt=2025-05-01T13:03:19), Notification(id=39, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #9 has been approved. The refund amount of 32660000.00 has been credited to your account., type=SYSTEM_ANNOUNCEMENT, referenceId=9, isRead=false, createdAt=2025-05-01T13:03:27), Notification(id=41, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #1 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=1, isRead=false, createdAt=2025-05-02T21:02:18), Notification(id=42, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #10 của bạn đã được xác nhận. Tổng tiền: 61360000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=10, isRead=false, createdAt=2025-05-02T22:33:52), Notification(id=43, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #11 của bạn đã được xác nhận. Tổng tiền: 9890000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=11, isRead=false, createdAt=2025-05-02T22:34:19), Notification(id=44, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:30), Notification(id=45, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:31), Notification(id=46, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:33), Notification(id=47, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:34), Notification(id=48, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:34), Notification(id=49, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:36), Notification(id=51, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #11 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=11, isRead=false, createdAt=2025-05-02T22:36:22), Notification(id=53, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #10 has been approved. The refund amount of 61360000.00 has been credited to your account., type=SYSTEM_ANNOUNCEMENT, referenceId=10, isRead=false, createdAt=2025-05-02T22:36:59)],[]>]
2025-05-12 09:27:39,425 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] RESPONSE: Status=200, Time=18ms
2025-05-12 09:27:39,425 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-7] Method getAllNotifications executed in 4 ms
2025-05-12 09:27:39,426 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-7] Cleared SecurityContextHolder to complete request
2025-05-12 09:27:39,426 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] RESPONSE: Status=200, Time=26ms
2025-05-12 09:27:57,255 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2025-05-12 09:27:57,255 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2025-05-12 09:27:57,256 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-05-12 09:28:09,402 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] REQUEST: GET /notifications
2025-05-12 09:28:09,402 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:28:09,402 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-10] Securing GET /notifications?currentUserId=1
2025-05-12 09:28:09,403 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-10] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:28:09,403 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Processing request to URL: /notifications, Method: GET
2025-05-12 09:28:09,403 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:28:09,403 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Found Authorization header with Bearer token
2025-05-12 09:28:09,403 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:28:09,403 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-10] JWT token validation successful
2025-05-12 09:28:09,404 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-10] Extracted username from JWT token: a1234
2025-05-12 09:28:09,404 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Valid JWT token found for user: a1234
2025-05-12 09:28:09,406 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] REQUEST: GET /notifications/unread-count
2025-05-12 09:28:09,406 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:28:09,406 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-6] Securing GET /notifications/unread-count?currentUserId=1
2025-05-12 09:28:09,406 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-6] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:28:09,406 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:28:09,406 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Processing request to URL: /notifications/unread-count, Method: GET
2025-05-12 09:28:09,407 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:28:09,407 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:28:09,407 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Found Authorization header with Bearer token
2025-05-12 09:28:09,407 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:28:09,407 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-6] JWT token validation successful
2025-05-12 09:28:09,407 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-6] Extracted username from JWT token: a1234
2025-05-12 09:28:09,407 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Valid JWT token found for user: a1234
2025-05-12 09:28:09,408 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:28:09,408 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:28:09,409 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:28:09,410 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:28:09,411 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:28:09,411 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:28:09,411 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:28:09,411 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] User authorities: [ROLE_USER]
2025-05-12 09:28:09,411 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:28:09,411 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@9a2b5cc, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:28:09,411 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-10] Secured GET /notifications?currentUserId=1
2025-05-12 09:28:09,413 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:28:09,413 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:28:09,413 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] User authorities: [ROLE_USER]
2025-05-12 09:28:09,413 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:28:09,413 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:28:09,414 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@32e983eb, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:28:09,414 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-6] Secured GET /notifications/unread-count?currentUserId=1
2025-05-12 09:28:09,415 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:28:09,416 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:28:09,416 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-10] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:28:09,417 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-10] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:28:09,417 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-10] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:28:09,417 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-10] ENTERING getAllNotifications with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:28:09,418 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        notificati0_.id as id1_6_,
        notificati0_.created_at as created_2_6_,
        notificati0_.is_read as is_read3_6_,
        notificati0_.message as message4_6_,
        notificati0_.reference_id as referenc5_6_,
        notificati0_.title as title6_6_,
        notificati0_.type as type7_6_,
        notificati0_.user_id as user_id8_6_ 
    from
        notifications notificati0_ 
    where
        notificati0_.user_id=?
2025-05-12 09:28:09,418 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:28:09,419 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-6] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:28:09,419 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-6] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:28:09,420 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-6] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:28:09,420 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] ENTERING getUnreadCount with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:28:09,420 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        count(notificati0_.id) as col_0_0_ 
    from
        notifications notificati0_ 
    where
        notificati0_.user_id=? 
        and notificati0_.is_read=0
2025-05-12 09:28:09,420 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-10] EXITING getAllNotifications with result: [<200 OK OK,[Notification(id=1, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #1 của bạn đã được xác nhận. Tổng tiền: 19990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=1, isRead=true, createdAt=2025-04-19T19:20:21), Notification(id=2, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #2 của bạn đã được xác nhận. Tổng tiền: 19990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=2, isRead=true, createdAt=2025-04-19T19:22:05), Notification(id=3, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #2 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=2, isRead=true, createdAt=2025-04-19T19:22:16), Notification(id=4, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:09), Notification(id=5, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:13), Notification(id=6, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:25), Notification(id=7, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #3 của bạn đã được xác nhận. Tổng tiền: 17990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:12), Notification(id=8, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #3 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:16), Notification(id=9, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Hoàn tiền thành công, message=Đơn hàng #3 đã được hoàn tiền thành công. Số tiền 17990000.00 đã được hoàn vào tài khoản của bạn., type=SYSTEM_ANNOUNCEMENT, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:16), Notification(id=10, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #4 của bạn đã được xác nhận. Tổng tiền: 16011000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=4, isRead=true, createdAt=2025-04-19T19:39:07), Notification(id=11, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #5 của bạn đã được xác nhận. Tổng tiền: 62291000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=5, isRead=true, createdAt=2025-04-22T21:58:23), Notification(id=12, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:42), Notification(id=13, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:46), Notification(id=14, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:50), Notification(id=15, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #6 của bạn đã được xác nhận. Tổng tiền: 62291000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=6, isRead=true, createdAt=2025-04-22T22:59:45), Notification(id=17, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #5 has been approved., type=SYSTEM_ANNOUNCEMENT, referenceId=5, isRead=true, createdAt=2025-05-01T12:01:36), Notification(id=18, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #7 của bạn đã được xác nhận. Tổng tiền: 26720000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=7, isRead=true, createdAt=2025-05-01T12:46:55), Notification(id=19, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #8 của bạn đã được xác nhận. Tổng tiền: 17810000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=8, isRead=true, createdAt=2025-05-01T12:48:51), Notification(id=20, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #8 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=8, isRead=true, createdAt=2025-05-01T12:49:50), Notification(id=21, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Hoàn tiền thành công, message=Đơn hàng #8 đã được hoàn tiền thành công. Số tiền 17810000.00 đã được hoàn vào tài khoản của bạn., type=SYSTEM_ANNOUNCEMENT, referenceId=8, isRead=true, createdAt=2025-05-01T12:49:50), Notification(id=22, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #9 của bạn đã được xác nhận. Tổng tiền: 32660000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=9, isRead=true, createdAt=2025-05-01T12:51:55), Notification(id=23, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Product Update, message=Một người nào đó đã đánh giá bài review của bạn, type=PRODUCT_RESTOCK, referenceId=24, isRead=true, createdAt=2025-05-01T12:57:07), Notification(id=24, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:27), Notification(id=25, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:28), Notification(id=26, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:30), Notification(id=27, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #4 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:31), Notification(id=28, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:44), Notification(id=29, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:47), Notification(id=30, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:49), Notification(id=31, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:51), Notification(id=32, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:55), Notification(id=33, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:56), Notification(id=34, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T13:00:01), Notification(id=35, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T13:00:03), Notification(id=38, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #7 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=7, isRead=false, createdAt=2025-05-01T13:03:19), Notification(id=39, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #9 has been approved. The refund amount of 32660000.00 has been credited to your account., type=SYSTEM_ANNOUNCEMENT, referenceId=9, isRead=false, createdAt=2025-05-01T13:03:27), Notification(id=41, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #1 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=1, isRead=false, createdAt=2025-05-02T21:02:18), Notification(id=42, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #10 của bạn đã được xác nhận. Tổng tiền: 61360000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=10, isRead=false, createdAt=2025-05-02T22:33:52), Notification(id=43, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #11 của bạn đã được xác nhận. Tổng tiền: 9890000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=11, isRead=false, createdAt=2025-05-02T22:34:19), Notification(id=44, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:30), Notification(id=45, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:31), Notification(id=46, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:33), Notification(id=47, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:34), Notification(id=48, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:34), Notification(id=49, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:36), Notification(id=51, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #11 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=11, isRead=false, createdAt=2025-05-02T22:36:22), Notification(id=53, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #10 has been approved. The refund amount of 61360000.00 has been credited to your account., type=SYSTEM_ANNOUNCEMENT, referenceId=10, isRead=false, createdAt=2025-05-02T22:36:59)],[]>]
2025-05-12 09:28:09,421 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-10] Method getAllNotifications executed in 4 ms
2025-05-12 09:28:09,421 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:28:09,422 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-10] Cleared SecurityContextHolder to complete request
2025-05-12 09:28:09,422 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] RESPONSE: Status=200, Time=20ms
2025-05-12 09:28:09,423 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] EXITING getUnreadCount with result: [<200 OK OK,25,[]>]
2025-05-12 09:28:09,423 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] Method getUnreadCount executed in 3 ms
2025-05-12 09:28:09,424 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-6] Cleared SecurityContextHolder to complete request
2025-05-12 09:28:09,424 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] RESPONSE: Status=200, Time=18ms
2025-05-12 09:28:27,256 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2025-05-12 09:28:27,256 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2025-05-12 09:28:27,256 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-05-12 09:28:39,692 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] REQUEST: GET /notifications/unread-count
2025-05-12 09:28:39,692 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] REQUEST: GET /notifications
2025-05-12 09:28:39,692 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:28:39,692 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:28:39,693 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-4] Securing GET /notifications/unread-count?currentUserId=1
2025-05-12 09:28:39,693 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-9] Securing GET /notifications?currentUserId=1
2025-05-12 09:28:39,693 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-9] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:28:39,693 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-4] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:28:39,693 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Processing request to URL: /notifications, Method: GET
2025-05-12 09:28:39,693 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Processing request to URL: /notifications/unread-count, Method: GET
2025-05-12 09:28:39,693 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:28:39,693 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:28:39,694 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Found Authorization header with Bearer token
2025-05-12 09:28:39,694 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Found Authorization header with Bearer token
2025-05-12 09:28:39,694 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:28:39,694 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:28:39,694 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-4] JWT token validation successful
2025-05-12 09:28:39,694 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-9] JWT token validation successful
2025-05-12 09:28:39,694 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-4] Extracted username from JWT token: a1234
2025-05-12 09:28:39,694 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Valid JWT token found for user: a1234
2025-05-12 09:28:39,694 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-9] Extracted username from JWT token: a1234
2025-05-12 09:28:39,695 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Valid JWT token found for user: a1234
2025-05-12 09:28:39,697 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:28:39,697 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:28:39,698 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:28:39,698 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:28:39,700 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:28:39,700 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:28:39,700 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:28:39,700 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:28:39,703 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:28:39,703 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:28:39,704 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] User authorities: [ROLE_USER]
2025-05-12 09:28:39,704 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] User authorities: [ROLE_USER]
2025-05-12 09:28:39,704 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:28:39,704 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:28:39,704 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@37f2d0bc, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:28:39,704 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@71cb2f4b, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:28:39,704 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-4] Secured GET /notifications/unread-count?currentUserId=1
2025-05-12 09:28:39,704 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-9] Secured GET /notifications?currentUserId=1
2025-05-12 09:28:39,706 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:28:39,706 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:28:39,706 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:28:39,706 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:28:39,709 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-4] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:28:39,709 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-9] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:28:39,709 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-4] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:28:39,709 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-9] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:28:39,709 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-4] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:28:39,709 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-9] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:28:39,709 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-4] ENTERING getUnreadCount with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:28:39,709 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-9] ENTERING getAllNotifications with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:28:39,710 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        notificati0_.id as id1_6_,
        notificati0_.created_at as created_2_6_,
        notificati0_.is_read as is_read3_6_,
        notificati0_.message as message4_6_,
        notificati0_.reference_id as referenc5_6_,
        notificati0_.title as title6_6_,
        notificati0_.type as type7_6_,
        notificati0_.user_id as user_id8_6_ 
    from
        notifications notificati0_ 
    where
        notificati0_.user_id=?
2025-05-12 09:28:39,710 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:28:39,710 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        count(notificati0_.id) as col_0_0_ 
    from
        notifications notificati0_ 
    where
        notificati0_.user_id=? 
        and notificati0_.is_read=0
2025-05-12 09:28:39,711 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:28:39,712 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-4] EXITING getUnreadCount with result: [<200 OK OK,25,[]>]
2025-05-12 09:28:39,712 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-4] Method getUnreadCount executed in 3 ms
2025-05-12 09:28:39,712 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-9] EXITING getAllNotifications with result: [<200 OK OK,[Notification(id=1, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #1 của bạn đã được xác nhận. Tổng tiền: 19990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=1, isRead=true, createdAt=2025-04-19T19:20:21), Notification(id=2, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #2 của bạn đã được xác nhận. Tổng tiền: 19990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=2, isRead=true, createdAt=2025-04-19T19:22:05), Notification(id=3, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #2 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=2, isRead=true, createdAt=2025-04-19T19:22:16), Notification(id=4, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:09), Notification(id=5, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:13), Notification(id=6, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:25), Notification(id=7, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #3 của bạn đã được xác nhận. Tổng tiền: 17990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:12), Notification(id=8, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #3 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:16), Notification(id=9, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Hoàn tiền thành công, message=Đơn hàng #3 đã được hoàn tiền thành công. Số tiền 17990000.00 đã được hoàn vào tài khoản của bạn., type=SYSTEM_ANNOUNCEMENT, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:16), Notification(id=10, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #4 của bạn đã được xác nhận. Tổng tiền: 16011000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=4, isRead=true, createdAt=2025-04-19T19:39:07), Notification(id=11, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #5 của bạn đã được xác nhận. Tổng tiền: 62291000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=5, isRead=true, createdAt=2025-04-22T21:58:23), Notification(id=12, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:42), Notification(id=13, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:46), Notification(id=14, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:50), Notification(id=15, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #6 của bạn đã được xác nhận. Tổng tiền: 62291000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=6, isRead=true, createdAt=2025-04-22T22:59:45), Notification(id=17, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #5 has been approved., type=SYSTEM_ANNOUNCEMENT, referenceId=5, isRead=true, createdAt=2025-05-01T12:01:36), Notification(id=18, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #7 của bạn đã được xác nhận. Tổng tiền: 26720000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=7, isRead=true, createdAt=2025-05-01T12:46:55), Notification(id=19, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #8 của bạn đã được xác nhận. Tổng tiền: 17810000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=8, isRead=true, createdAt=2025-05-01T12:48:51), Notification(id=20, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #8 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=8, isRead=true, createdAt=2025-05-01T12:49:50), Notification(id=21, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Hoàn tiền thành công, message=Đơn hàng #8 đã được hoàn tiền thành công. Số tiền 17810000.00 đã được hoàn vào tài khoản của bạn., type=SYSTEM_ANNOUNCEMENT, referenceId=8, isRead=true, createdAt=2025-05-01T12:49:50), Notification(id=22, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #9 của bạn đã được xác nhận. Tổng tiền: 32660000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=9, isRead=true, createdAt=2025-05-01T12:51:55), Notification(id=23, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Product Update, message=Một người nào đó đã đánh giá bài review của bạn, type=PRODUCT_RESTOCK, referenceId=24, isRead=true, createdAt=2025-05-01T12:57:07), Notification(id=24, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:27), Notification(id=25, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:28), Notification(id=26, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:30), Notification(id=27, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #4 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:31), Notification(id=28, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:44), Notification(id=29, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:47), Notification(id=30, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:49), Notification(id=31, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:51), Notification(id=32, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:55), Notification(id=33, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:56), Notification(id=34, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T13:00:01), Notification(id=35, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T13:00:03), Notification(id=38, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #7 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=7, isRead=false, createdAt=2025-05-01T13:03:19), Notification(id=39, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #9 has been approved. The refund amount of 32660000.00 has been credited to your account., type=SYSTEM_ANNOUNCEMENT, referenceId=9, isRead=false, createdAt=2025-05-01T13:03:27), Notification(id=41, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #1 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=1, isRead=false, createdAt=2025-05-02T21:02:18), Notification(id=42, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #10 của bạn đã được xác nhận. Tổng tiền: 61360000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=10, isRead=false, createdAt=2025-05-02T22:33:52), Notification(id=43, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #11 của bạn đã được xác nhận. Tổng tiền: 9890000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=11, isRead=false, createdAt=2025-05-02T22:34:19), Notification(id=44, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:30), Notification(id=45, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:31), Notification(id=46, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:33), Notification(id=47, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:34), Notification(id=48, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:34), Notification(id=49, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:36), Notification(id=51, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #11 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=11, isRead=false, createdAt=2025-05-02T22:36:22), Notification(id=53, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #10 has been approved. The refund amount of 61360000.00 has been credited to your account., type=SYSTEM_ANNOUNCEMENT, referenceId=10, isRead=false, createdAt=2025-05-02T22:36:59)],[]>]
2025-05-12 09:28:39,720 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-9] Method getAllNotifications executed in 11 ms
2025-05-12 09:28:39,720 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-4] Cleared SecurityContextHolder to complete request
2025-05-12 09:28:39,720 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] RESPONSE: Status=200, Time=28ms
2025-05-12 09:28:39,721 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-9] Cleared SecurityContextHolder to complete request
2025-05-12 09:28:39,721 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] RESPONSE: Status=200, Time=29ms
2025-05-12 09:28:57,257 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2025-05-12 09:28:57,258 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2025-05-12 09:28:57,258 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-05-12 09:29:09,836 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] REQUEST: GET /notifications
2025-05-12 09:29:09,836 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] REQUEST: GET /notifications/unread-count
2025-05-12 09:29:09,836 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:29:09,836 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:29:09,836 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-1] Securing GET /notifications?currentUserId=1
2025-05-12 09:29:09,836 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-8] Securing GET /notifications/unread-count?currentUserId=1
2025-05-12 09:29:09,836 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-1] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:29:09,836 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-8] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:29:09,836 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Processing request to URL: /notifications/unread-count, Method: GET
2025-05-12 09:29:09,836 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Processing request to URL: /notifications, Method: GET
2025-05-12 09:29:09,837 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:29:09,837 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Found Authorization header with Bearer token
2025-05-12 09:29:09,837 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:29:09,837 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:29:09,837 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Found Authorization header with Bearer token
2025-05-12 09:29:09,837 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:29:09,837 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-8] JWT token validation successful
2025-05-12 09:29:09,838 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-1] JWT token validation successful
2025-05-12 09:29:09,838 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-8] Extracted username from JWT token: a1234
2025-05-12 09:29:09,838 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Valid JWT token found for user: a1234
2025-05-12 09:29:09,838 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-1] Extracted username from JWT token: a1234
2025-05-12 09:29:09,838 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Valid JWT token found for user: a1234
2025-05-12 09:29:09,840 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:29:09,840 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:29:09,840 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:29:09,840 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:29:09,842 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:29:09,842 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:29:09,842 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:29:09,842 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:29:09,845 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:29:09,845 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:29:09,845 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] User authorities: [ROLE_USER]
2025-05-12 09:29:09,845 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] User authorities: [ROLE_USER]
2025-05-12 09:29:09,845 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:29:09,845 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:29:09,845 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@38d08477, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:29:09,845 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@43d65c27, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:29:09,845 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-1] Secured GET /notifications?currentUserId=1
2025-05-12 09:29:09,845 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-8] Secured GET /notifications/unread-count?currentUserId=1
2025-05-12 09:29:09,847 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:29:09,847 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:29:09,848 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:29:09,848 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:29:09,851 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-1] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:29:09,851 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-8] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:29:09,851 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-1] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:29:09,851 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-8] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:29:09,852 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-1] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:29:09,852 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-8] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:29:09,852 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] ENTERING getAllNotifications with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:29:09,852 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] ENTERING getUnreadCount with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:29:09,852 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        count(notificati0_.id) as col_0_0_ 
    from
        notifications notificati0_ 
    where
        notificati0_.user_id=? 
        and notificati0_.is_read=0
2025-05-12 09:29:09,852 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        notificati0_.id as id1_6_,
        notificati0_.created_at as created_2_6_,
        notificati0_.is_read as is_read3_6_,
        notificati0_.message as message4_6_,
        notificati0_.reference_id as referenc5_6_,
        notificati0_.title as title6_6_,
        notificati0_.type as type7_6_,
        notificati0_.user_id as user_id8_6_ 
    from
        notifications notificati0_ 
    where
        notificati0_.user_id=?
2025-05-12 09:29:09,852 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:29:09,852 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:29:09,854 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] EXITING getUnreadCount with result: [<200 OK OK,25,[]>]
2025-05-12 09:29:09,854 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] Method getUnreadCount executed in 2 ms
2025-05-12 09:29:09,855 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-8] Cleared SecurityContextHolder to complete request
2025-05-12 09:29:09,856 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] RESPONSE: Status=200, Time=20ms
2025-05-12 09:29:09,855 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] EXITING getAllNotifications with result: [<200 OK OK,[Notification(id=1, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #1 của bạn đã được xác nhận. Tổng tiền: 19990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=1, isRead=true, createdAt=2025-04-19T19:20:21), Notification(id=2, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #2 của bạn đã được xác nhận. Tổng tiền: 19990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=2, isRead=true, createdAt=2025-04-19T19:22:05), Notification(id=3, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #2 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=2, isRead=true, createdAt=2025-04-19T19:22:16), Notification(id=4, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:09), Notification(id=5, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:13), Notification(id=6, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:25), Notification(id=7, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #3 của bạn đã được xác nhận. Tổng tiền: 17990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:12), Notification(id=8, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #3 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:16), Notification(id=9, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Hoàn tiền thành công, message=Đơn hàng #3 đã được hoàn tiền thành công. Số tiền 17990000.00 đã được hoàn vào tài khoản của bạn., type=SYSTEM_ANNOUNCEMENT, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:16), Notification(id=10, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #4 của bạn đã được xác nhận. Tổng tiền: 16011000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=4, isRead=true, createdAt=2025-04-19T19:39:07), Notification(id=11, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #5 của bạn đã được xác nhận. Tổng tiền: 62291000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=5, isRead=true, createdAt=2025-04-22T21:58:23), Notification(id=12, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:42), Notification(id=13, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:46), Notification(id=14, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:50), Notification(id=15, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #6 của bạn đã được xác nhận. Tổng tiền: 62291000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=6, isRead=true, createdAt=2025-04-22T22:59:45), Notification(id=17, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #5 has been approved., type=SYSTEM_ANNOUNCEMENT, referenceId=5, isRead=true, createdAt=2025-05-01T12:01:36), Notification(id=18, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #7 của bạn đã được xác nhận. Tổng tiền: 26720000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=7, isRead=true, createdAt=2025-05-01T12:46:55), Notification(id=19, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #8 của bạn đã được xác nhận. Tổng tiền: 17810000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=8, isRead=true, createdAt=2025-05-01T12:48:51), Notification(id=20, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #8 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=8, isRead=true, createdAt=2025-05-01T12:49:50), Notification(id=21, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Hoàn tiền thành công, message=Đơn hàng #8 đã được hoàn tiền thành công. Số tiền 17810000.00 đã được hoàn vào tài khoản của bạn., type=SYSTEM_ANNOUNCEMENT, referenceId=8, isRead=true, createdAt=2025-05-01T12:49:50), Notification(id=22, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #9 của bạn đã được xác nhận. Tổng tiền: 32660000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=9, isRead=true, createdAt=2025-05-01T12:51:55), Notification(id=23, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Product Update, message=Một người nào đó đã đánh giá bài review của bạn, type=PRODUCT_RESTOCK, referenceId=24, isRead=true, createdAt=2025-05-01T12:57:07), Notification(id=24, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:27), Notification(id=25, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:28), Notification(id=26, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:30), Notification(id=27, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #4 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:31), Notification(id=28, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:44), Notification(id=29, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:47), Notification(id=30, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:49), Notification(id=31, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:51), Notification(id=32, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:55), Notification(id=33, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:56), Notification(id=34, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T13:00:01), Notification(id=35, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T13:00:03), Notification(id=38, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #7 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=7, isRead=false, createdAt=2025-05-01T13:03:19), Notification(id=39, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #9 has been approved. The refund amount of 32660000.00 has been credited to your account., type=SYSTEM_ANNOUNCEMENT, referenceId=9, isRead=false, createdAt=2025-05-01T13:03:27), Notification(id=41, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #1 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=1, isRead=false, createdAt=2025-05-02T21:02:18), Notification(id=42, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #10 của bạn đã được xác nhận. Tổng tiền: 61360000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=10, isRead=false, createdAt=2025-05-02T22:33:52), Notification(id=43, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #11 của bạn đã được xác nhận. Tổng tiền: 9890000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=11, isRead=false, createdAt=2025-05-02T22:34:19), Notification(id=44, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:30), Notification(id=45, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:31), Notification(id=46, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:33), Notification(id=47, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:34), Notification(id=48, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:34), Notification(id=49, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:36), Notification(id=51, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #11 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=11, isRead=false, createdAt=2025-05-02T22:36:22), Notification(id=53, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #10 has been approved. The refund amount of 61360000.00 has been credited to your account., type=SYSTEM_ANNOUNCEMENT, referenceId=10, isRead=false, createdAt=2025-05-02T22:36:59)],[]>]
2025-05-12 09:29:09,857 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] Method getAllNotifications executed in 5 ms
2025-05-12 09:29:09,859 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-1] Cleared SecurityContextHolder to complete request
2025-05-12 09:29:09,859 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] RESPONSE: Status=200, Time=23ms
2025-05-12 09:29:27,259 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2025-05-12 09:29:27,260 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2025-05-12 09:29:27,260 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-05-12 09:29:39,934 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] REQUEST: GET /notifications/unread-count
2025-05-12 09:29:39,934 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] REQUEST: GET /notifications
2025-05-12 09:29:39,934 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:29:39,934 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:29:39,934 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-5] Securing GET /notifications/unread-count?currentUserId=1
2025-05-12 09:29:39,934 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-3] Securing GET /notifications?currentUserId=1
2025-05-12 09:29:39,934 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-5] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:29:39,934 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-3] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:29:39,935 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Processing request to URL: /notifications, Method: GET
2025-05-12 09:29:39,935 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Processing request to URL: /notifications/unread-count, Method: GET
2025-05-12 09:29:39,935 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:29:39,935 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:29:39,935 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Found Authorization header with Bearer token
2025-05-12 09:29:39,935 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Found Authorization header with Bearer token
2025-05-12 09:29:39,935 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:29:39,935 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:29:39,935 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-3] JWT token validation successful
2025-05-12 09:29:39,935 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-5] JWT token validation successful
2025-05-12 09:29:39,935 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-5] Extracted username from JWT token: a1234
2025-05-12 09:29:39,936 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Valid JWT token found for user: a1234
2025-05-12 09:29:39,935 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-3] Extracted username from JWT token: a1234
2025-05-12 09:29:39,936 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Valid JWT token found for user: a1234
2025-05-12 09:29:39,938 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:29:39,938 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:29:39,938 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:29:39,938 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:29:39,939 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:29:39,940 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:29:39,940 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:29:39,940 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:29:39,942 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:29:39,942 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:29:39,943 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] User authorities: [ROLE_USER]
2025-05-12 09:29:39,943 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] User authorities: [ROLE_USER]
2025-05-12 09:29:39,943 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:29:39,943 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:29:39,943 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-5] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@49e91c9b, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:29:39,943 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-3] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@6d702979, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:29:39,943 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-3] Secured GET /notifications?currentUserId=1
2025-05-12 09:29:39,943 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-5] Secured GET /notifications/unread-count?currentUserId=1
2025-05-12 09:29:39,944 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:29:39,944 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:29:39,945 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:29:39,945 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:29:39,947 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-5] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:29:39,947 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-3] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:29:39,947 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-5] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:29:39,947 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-3] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:29:39,948 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-5] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:29:39,948 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-3] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:29:39,948 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] ENTERING getAllNotifications with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:29:39,948 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] ENTERING getUnreadCount with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:29:39,948 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        notificati0_.id as id1_6_,
        notificati0_.created_at as created_2_6_,
        notificati0_.is_read as is_read3_6_,
        notificati0_.message as message4_6_,
        notificati0_.reference_id as referenc5_6_,
        notificati0_.title as title6_6_,
        notificati0_.type as type7_6_,
        notificati0_.user_id as user_id8_6_ 
    from
        notifications notificati0_ 
    where
        notificati0_.user_id=?
2025-05-12 09:29:39,948 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        count(notificati0_.id) as col_0_0_ 
    from
        notifications notificati0_ 
    where
        notificati0_.user_id=? 
        and notificati0_.is_read=0
2025-05-12 09:29:39,948 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:29:39,948 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:29:39,950 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] EXITING getUnreadCount with result: [<200 OK OK,25,[]>]
2025-05-12 09:29:39,950 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-5] Method getUnreadCount executed in 2 ms
2025-05-12 09:29:39,951 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-5] Cleared SecurityContextHolder to complete request
2025-05-12 09:29:39,950 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] EXITING getAllNotifications with result: [<200 OK OK,[Notification(id=1, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #1 của bạn đã được xác nhận. Tổng tiền: 19990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=1, isRead=true, createdAt=2025-04-19T19:20:21), Notification(id=2, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #2 của bạn đã được xác nhận. Tổng tiền: 19990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=2, isRead=true, createdAt=2025-04-19T19:22:05), Notification(id=3, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #2 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=2, isRead=true, createdAt=2025-04-19T19:22:16), Notification(id=4, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:09), Notification(id=5, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:13), Notification(id=6, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:25), Notification(id=7, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #3 của bạn đã được xác nhận. Tổng tiền: 17990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:12), Notification(id=8, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #3 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:16), Notification(id=9, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Hoàn tiền thành công, message=Đơn hàng #3 đã được hoàn tiền thành công. Số tiền 17990000.00 đã được hoàn vào tài khoản của bạn., type=SYSTEM_ANNOUNCEMENT, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:16), Notification(id=10, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #4 của bạn đã được xác nhận. Tổng tiền: 16011000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=4, isRead=true, createdAt=2025-04-19T19:39:07), Notification(id=11, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #5 của bạn đã được xác nhận. Tổng tiền: 62291000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=5, isRead=true, createdAt=2025-04-22T21:58:23), Notification(id=12, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:42), Notification(id=13, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:46), Notification(id=14, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:50), Notification(id=15, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #6 của bạn đã được xác nhận. Tổng tiền: 62291000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=6, isRead=true, createdAt=2025-04-22T22:59:45), Notification(id=17, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #5 has been approved., type=SYSTEM_ANNOUNCEMENT, referenceId=5, isRead=true, createdAt=2025-05-01T12:01:36), Notification(id=18, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #7 của bạn đã được xác nhận. Tổng tiền: 26720000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=7, isRead=true, createdAt=2025-05-01T12:46:55), Notification(id=19, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #8 của bạn đã được xác nhận. Tổng tiền: 17810000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=8, isRead=true, createdAt=2025-05-01T12:48:51), Notification(id=20, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #8 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=8, isRead=true, createdAt=2025-05-01T12:49:50), Notification(id=21, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Hoàn tiền thành công, message=Đơn hàng #8 đã được hoàn tiền thành công. Số tiền 17810000.00 đã được hoàn vào tài khoản của bạn., type=SYSTEM_ANNOUNCEMENT, referenceId=8, isRead=true, createdAt=2025-05-01T12:49:50), Notification(id=22, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #9 của bạn đã được xác nhận. Tổng tiền: 32660000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=9, isRead=true, createdAt=2025-05-01T12:51:55), Notification(id=23, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Product Update, message=Một người nào đó đã đánh giá bài review của bạn, type=PRODUCT_RESTOCK, referenceId=24, isRead=true, createdAt=2025-05-01T12:57:07), Notification(id=24, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:27), Notification(id=25, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:28), Notification(id=26, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:30), Notification(id=27, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #4 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:31), Notification(id=28, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:44), Notification(id=29, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:47), Notification(id=30, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:49), Notification(id=31, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:51), Notification(id=32, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:55), Notification(id=33, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:56), Notification(id=34, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T13:00:01), Notification(id=35, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T13:00:03), Notification(id=38, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #7 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=7, isRead=false, createdAt=2025-05-01T13:03:19), Notification(id=39, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #9 has been approved. The refund amount of 32660000.00 has been credited to your account., type=SYSTEM_ANNOUNCEMENT, referenceId=9, isRead=false, createdAt=2025-05-01T13:03:27), Notification(id=41, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #1 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=1, isRead=false, createdAt=2025-05-02T21:02:18), Notification(id=42, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #10 của bạn đã được xác nhận. Tổng tiền: 61360000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=10, isRead=false, createdAt=2025-05-02T22:33:52), Notification(id=43, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #11 của bạn đã được xác nhận. Tổng tiền: 9890000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=11, isRead=false, createdAt=2025-05-02T22:34:19), Notification(id=44, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:30), Notification(id=45, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:31), Notification(id=46, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:33), Notification(id=47, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:34), Notification(id=48, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:34), Notification(id=49, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:36), Notification(id=51, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #11 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=11, isRead=false, createdAt=2025-05-02T22:36:22), Notification(id=53, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #10 has been approved. The refund amount of 61360000.00 has been credited to your account., type=SYSTEM_ANNOUNCEMENT, referenceId=10, isRead=false, createdAt=2025-05-02T22:36:59)],[]>]
2025-05-12 09:29:39,951 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-5] RESPONSE: Status=200, Time=17ms
2025-05-12 09:29:39,951 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-3] Method getAllNotifications executed in 3 ms
2025-05-12 09:29:39,953 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-3] Cleared SecurityContextHolder to complete request
2025-05-12 09:29:39,953 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-3] RESPONSE: Status=200, Time=19ms
2025-05-12 09:29:57,261 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2025-05-12 09:29:57,262 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2025-05-12 09:29:57,262 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-05-12 09:30:10,032 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] REQUEST: GET /notifications
2025-05-12 09:30:10,032 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] REQUEST: GET /notifications/unread-count
2025-05-12 09:30:10,032 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:30:10,032 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:30:10,033 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-2] Securing GET /notifications?currentUserId=1
2025-05-12 09:30:10,033 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-7] Securing GET /notifications/unread-count?currentUserId=1
2025-05-12 09:30:10,033 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-2] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:30:10,033 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-7] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:30:10,034 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Processing request to URL: /notifications/unread-count, Method: GET
2025-05-12 09:30:10,034 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Processing request to URL: /notifications, Method: GET
2025-05-12 09:30:10,034 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:30:10,034 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:30:10,034 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Found Authorization header with Bearer token
2025-05-12 09:30:10,034 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:30:10,034 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Found Authorization header with Bearer token
2025-05-12 09:30:10,034 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:30:10,034 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-2] JWT token validation successful
2025-05-12 09:30:10,034 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-7] JWT token validation successful
2025-05-12 09:30:10,035 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-7] Extracted username from JWT token: a1234
2025-05-12 09:30:10,035 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-2] Extracted username from JWT token: a1234
2025-05-12 09:30:10,035 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Valid JWT token found for user: a1234
2025-05-12 09:30:10,035 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Valid JWT token found for user: a1234
2025-05-12 09:30:10,037 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:30:10,037 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:30:10,037 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:30:10,037 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:30:10,039 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:30:10,039 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:30:10,039 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:30:10,039 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:30:10,042 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:30:10,042 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:30:10,042 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] User authorities: [ROLE_USER]
2025-05-12 09:30:10,042 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] User authorities: [ROLE_USER]
2025-05-12 09:30:10,042 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:30:10,042 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:30:10,042 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-2] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@7d6cbcaa, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:30:10,042 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-7] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@6a7f0a62, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:30:10,042 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-2] Secured GET /notifications?currentUserId=1
2025-05-12 09:30:10,042 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-7] Secured GET /notifications/unread-count?currentUserId=1
2025-05-12 09:30:10,044 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:30:10,044 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:30:10,044 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:30:10,044 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:30:10,047 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-7] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:30:10,047 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-2] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:30:10,047 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-7] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:30:10,047 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-2] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:30:10,048 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-7] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:30:10,048 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-2] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:30:10,048 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] ENTERING getAllNotifications with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:30:10,048 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-7] ENTERING getUnreadCount with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:30:10,048 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        notificati0_.id as id1_6_,
        notificati0_.created_at as created_2_6_,
        notificati0_.is_read as is_read3_6_,
        notificati0_.message as message4_6_,
        notificati0_.reference_id as referenc5_6_,
        notificati0_.title as title6_6_,
        notificati0_.type as type7_6_,
        notificati0_.user_id as user_id8_6_ 
    from
        notifications notificati0_ 
    where
        notificati0_.user_id=?
2025-05-12 09:30:10,048 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        count(notificati0_.id) as col_0_0_ 
    from
        notifications notificati0_ 
    where
        notificati0_.user_id=? 
        and notificati0_.is_read=0
2025-05-12 09:30:10,048 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:30:10,048 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:30:10,050 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-7] EXITING getUnreadCount with result: [<200 OK OK,25,[]>]
2025-05-12 09:30:10,050 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-7] Method getUnreadCount executed in 2 ms
2025-05-12 09:30:10,051 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-7] Cleared SecurityContextHolder to complete request
2025-05-12 09:30:10,051 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] EXITING getAllNotifications with result: [<200 OK OK,[Notification(id=1, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #1 của bạn đã được xác nhận. Tổng tiền: 19990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=1, isRead=true, createdAt=2025-04-19T19:20:21), Notification(id=2, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #2 của bạn đã được xác nhận. Tổng tiền: 19990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=2, isRead=true, createdAt=2025-04-19T19:22:05), Notification(id=3, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #2 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=2, isRead=true, createdAt=2025-04-19T19:22:16), Notification(id=4, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:09), Notification(id=5, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:13), Notification(id=6, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:25), Notification(id=7, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #3 của bạn đã được xác nhận. Tổng tiền: 17990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:12), Notification(id=8, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #3 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:16), Notification(id=9, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Hoàn tiền thành công, message=Đơn hàng #3 đã được hoàn tiền thành công. Số tiền 17990000.00 đã được hoàn vào tài khoản của bạn., type=SYSTEM_ANNOUNCEMENT, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:16), Notification(id=10, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #4 của bạn đã được xác nhận. Tổng tiền: 16011000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=4, isRead=true, createdAt=2025-04-19T19:39:07), Notification(id=11, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #5 của bạn đã được xác nhận. Tổng tiền: 62291000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=5, isRead=true, createdAt=2025-04-22T21:58:23), Notification(id=12, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:42), Notification(id=13, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:46), Notification(id=14, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:50), Notification(id=15, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #6 của bạn đã được xác nhận. Tổng tiền: 62291000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=6, isRead=true, createdAt=2025-04-22T22:59:45), Notification(id=17, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #5 has been approved., type=SYSTEM_ANNOUNCEMENT, referenceId=5, isRead=true, createdAt=2025-05-01T12:01:36), Notification(id=18, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #7 của bạn đã được xác nhận. Tổng tiền: 26720000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=7, isRead=true, createdAt=2025-05-01T12:46:55), Notification(id=19, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #8 của bạn đã được xác nhận. Tổng tiền: 17810000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=8, isRead=true, createdAt=2025-05-01T12:48:51), Notification(id=20, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #8 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=8, isRead=true, createdAt=2025-05-01T12:49:50), Notification(id=21, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Hoàn tiền thành công, message=Đơn hàng #8 đã được hoàn tiền thành công. Số tiền 17810000.00 đã được hoàn vào tài khoản của bạn., type=SYSTEM_ANNOUNCEMENT, referenceId=8, isRead=true, createdAt=2025-05-01T12:49:50), Notification(id=22, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #9 của bạn đã được xác nhận. Tổng tiền: 32660000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=9, isRead=true, createdAt=2025-05-01T12:51:55), Notification(id=23, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Product Update, message=Một người nào đó đã đánh giá bài review của bạn, type=PRODUCT_RESTOCK, referenceId=24, isRead=true, createdAt=2025-05-01T12:57:07), Notification(id=24, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:27), Notification(id=25, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:28), Notification(id=26, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:30), Notification(id=27, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #4 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:31), Notification(id=28, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:44), Notification(id=29, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:47), Notification(id=30, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:49), Notification(id=31, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:51), Notification(id=32, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:55), Notification(id=33, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:56), Notification(id=34, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T13:00:01), Notification(id=35, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T13:00:03), Notification(id=38, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #7 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=7, isRead=false, createdAt=2025-05-01T13:03:19), Notification(id=39, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #9 has been approved. The refund amount of 32660000.00 has been credited to your account., type=SYSTEM_ANNOUNCEMENT, referenceId=9, isRead=false, createdAt=2025-05-01T13:03:27), Notification(id=41, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #1 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=1, isRead=false, createdAt=2025-05-02T21:02:18), Notification(id=42, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #10 của bạn đã được xác nhận. Tổng tiền: 61360000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=10, isRead=false, createdAt=2025-05-02T22:33:52), Notification(id=43, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #11 của bạn đã được xác nhận. Tổng tiền: 9890000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=11, isRead=false, createdAt=2025-05-02T22:34:19), Notification(id=44, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:30), Notification(id=45, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:31), Notification(id=46, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:33), Notification(id=47, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:34), Notification(id=48, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:34), Notification(id=49, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:36), Notification(id=51, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #11 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=11, isRead=false, createdAt=2025-05-02T22:36:22), Notification(id=53, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #10 has been approved. The refund amount of 61360000.00 has been credited to your account., type=SYSTEM_ANNOUNCEMENT, referenceId=10, isRead=false, createdAt=2025-05-02T22:36:59)],[]>]
2025-05-12 09:30:10,051 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-7] RESPONSE: Status=200, Time=18ms
2025-05-12 09:30:10,052 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-2] Method getAllNotifications executed in 4 ms
2025-05-12 09:30:10,053 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-2] Cleared SecurityContextHolder to complete request
2025-05-12 09:30:10,053 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-2] RESPONSE: Status=200, Time=20ms
2025-05-12 09:30:27,263 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2025-05-12 09:30:27,264 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2025-05-12 09:30:27,264 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-05-12 09:30:40,157 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] REQUEST: GET /notifications/unread-count
2025-05-12 09:30:40,157 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] REQUEST: GET /notifications
2025-05-12 09:30:40,157 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:30:40,157 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:30:40,157 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-10] Securing GET /notifications?currentUserId=1
2025-05-12 09:30:40,157 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-6] Securing GET /notifications/unread-count?currentUserId=1
2025-05-12 09:30:40,157 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-10] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:30:40,157 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-6] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:30:40,158 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Processing request to URL: /notifications, Method: GET
2025-05-12 09:30:40,158 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Processing request to URL: /notifications/unread-count, Method: GET
2025-05-12 09:30:40,158 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:30:40,158 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Found Authorization header with Bearer token
2025-05-12 09:30:40,158 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:30:40,158 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:30:40,158 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Found Authorization header with Bearer token
2025-05-12 09:30:40,158 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:30:40,158 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-10] JWT token validation successful
2025-05-12 09:30:40,158 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-6] JWT token validation successful
2025-05-12 09:30:40,158 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-10] Extracted username from JWT token: a1234
2025-05-12 09:30:40,158 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-6] Extracted username from JWT token: a1234
2025-05-12 09:30:40,159 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Valid JWT token found for user: a1234
2025-05-12 09:30:40,159 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Valid JWT token found for user: a1234
2025-05-12 09:30:40,161 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:30:40,161 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:30:40,161 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:30:40,161 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:30:40,162 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:30:40,162 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:30:40,163 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:30:40,163 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:30:40,165 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:30:40,165 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:30:40,165 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] User authorities: [ROLE_USER]
2025-05-12 09:30:40,165 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] User authorities: [ROLE_USER]
2025-05-12 09:30:40,165 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:30:40,165 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:30:40,165 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-6] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@492191b1, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:30:40,165 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-10] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@621e78c, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:30:40,165 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-6] Secured GET /notifications/unread-count?currentUserId=1
2025-05-12 09:30:40,165 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-10] Secured GET /notifications?currentUserId=1
2025-05-12 09:30:40,167 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:30:40,167 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:30:40,167 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:30:40,167 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:30:40,170 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-6] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:30:40,170 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-10] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:30:40,170 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-6] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:30:40,170 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-10] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:30:40,170 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-6] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:30:40,171 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-10] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:30:40,171 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] ENTERING getUnreadCount with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:30:40,171 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-10] ENTERING getAllNotifications with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:30:40,171 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        count(notificati0_.id) as col_0_0_ 
    from
        notifications notificati0_ 
    where
        notificati0_.user_id=? 
        and notificati0_.is_read=0
2025-05-12 09:30:40,171 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        notificati0_.id as id1_6_,
        notificati0_.created_at as created_2_6_,
        notificati0_.is_read as is_read3_6_,
        notificati0_.message as message4_6_,
        notificati0_.reference_id as referenc5_6_,
        notificati0_.title as title6_6_,
        notificati0_.type as type7_6_,
        notificati0_.user_id as user_id8_6_ 
    from
        notifications notificati0_ 
    where
        notificati0_.user_id=?
2025-05-12 09:30:40,171 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:30:40,172 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:30:40,173 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] EXITING getUnreadCount with result: [<200 OK OK,25,[]>]
2025-05-12 09:30:40,173 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-6] Method getUnreadCount executed in 2 ms
2025-05-12 09:30:40,174 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-6] Cleared SecurityContextHolder to complete request
2025-05-12 09:30:40,174 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-10] EXITING getAllNotifications with result: [<200 OK OK,[Notification(id=1, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #1 của bạn đã được xác nhận. Tổng tiền: 19990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=1, isRead=true, createdAt=2025-04-19T19:20:21), Notification(id=2, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #2 của bạn đã được xác nhận. Tổng tiền: 19990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=2, isRead=true, createdAt=2025-04-19T19:22:05), Notification(id=3, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #2 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=2, isRead=true, createdAt=2025-04-19T19:22:16), Notification(id=4, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:09), Notification(id=5, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:13), Notification(id=6, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:25), Notification(id=7, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #3 của bạn đã được xác nhận. Tổng tiền: 17990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:12), Notification(id=8, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #3 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:16), Notification(id=9, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Hoàn tiền thành công, message=Đơn hàng #3 đã được hoàn tiền thành công. Số tiền 17990000.00 đã được hoàn vào tài khoản của bạn., type=SYSTEM_ANNOUNCEMENT, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:16), Notification(id=10, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #4 của bạn đã được xác nhận. Tổng tiền: 16011000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=4, isRead=true, createdAt=2025-04-19T19:39:07), Notification(id=11, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #5 của bạn đã được xác nhận. Tổng tiền: 62291000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=5, isRead=true, createdAt=2025-04-22T21:58:23), Notification(id=12, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:42), Notification(id=13, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:46), Notification(id=14, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:50), Notification(id=15, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #6 của bạn đã được xác nhận. Tổng tiền: 62291000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=6, isRead=true, createdAt=2025-04-22T22:59:45), Notification(id=17, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #5 has been approved., type=SYSTEM_ANNOUNCEMENT, referenceId=5, isRead=true, createdAt=2025-05-01T12:01:36), Notification(id=18, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #7 của bạn đã được xác nhận. Tổng tiền: 26720000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=7, isRead=true, createdAt=2025-05-01T12:46:55), Notification(id=19, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #8 của bạn đã được xác nhận. Tổng tiền: 17810000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=8, isRead=true, createdAt=2025-05-01T12:48:51), Notification(id=20, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #8 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=8, isRead=true, createdAt=2025-05-01T12:49:50), Notification(id=21, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Hoàn tiền thành công, message=Đơn hàng #8 đã được hoàn tiền thành công. Số tiền 17810000.00 đã được hoàn vào tài khoản của bạn., type=SYSTEM_ANNOUNCEMENT, referenceId=8, isRead=true, createdAt=2025-05-01T12:49:50), Notification(id=22, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #9 của bạn đã được xác nhận. Tổng tiền: 32660000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=9, isRead=true, createdAt=2025-05-01T12:51:55), Notification(id=23, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Product Update, message=Một người nào đó đã đánh giá bài review của bạn, type=PRODUCT_RESTOCK, referenceId=24, isRead=true, createdAt=2025-05-01T12:57:07), Notification(id=24, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:27), Notification(id=25, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:28), Notification(id=26, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:30), Notification(id=27, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #4 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:31), Notification(id=28, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:44), Notification(id=29, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:47), Notification(id=30, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:49), Notification(id=31, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:51), Notification(id=32, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:55), Notification(id=33, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:56), Notification(id=34, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T13:00:01), Notification(id=35, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T13:00:03), Notification(id=38, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #7 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=7, isRead=false, createdAt=2025-05-01T13:03:19), Notification(id=39, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #9 has been approved. The refund amount of 32660000.00 has been credited to your account., type=SYSTEM_ANNOUNCEMENT, referenceId=9, isRead=false, createdAt=2025-05-01T13:03:27), Notification(id=41, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #1 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=1, isRead=false, createdAt=2025-05-02T21:02:18), Notification(id=42, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #10 của bạn đã được xác nhận. Tổng tiền: 61360000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=10, isRead=false, createdAt=2025-05-02T22:33:52), Notification(id=43, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #11 của bạn đã được xác nhận. Tổng tiền: 9890000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=11, isRead=false, createdAt=2025-05-02T22:34:19), Notification(id=44, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:30), Notification(id=45, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:31), Notification(id=46, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:33), Notification(id=47, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:34), Notification(id=48, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:34), Notification(id=49, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:36), Notification(id=51, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #11 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=11, isRead=false, createdAt=2025-05-02T22:36:22), Notification(id=53, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #10 has been approved. The refund amount of 61360000.00 has been credited to your account., type=SYSTEM_ANNOUNCEMENT, referenceId=10, isRead=false, createdAt=2025-05-02T22:36:59)],[]>]
2025-05-12 09:30:40,175 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-6] RESPONSE: Status=200, Time=18ms
2025-05-12 09:30:40,175 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-10] Method getAllNotifications executed in 4 ms
2025-05-12 09:30:40,177 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-10] Cleared SecurityContextHolder to complete request
2025-05-12 09:30:40,178 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-10] RESPONSE: Status=200, Time=21ms
2025-05-12 09:30:57,265 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2025-05-12 09:30:57,266 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2025-05-12 09:30:57,266 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-05-12 09:31:10,362 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] REQUEST: GET /notifications/unread-count
2025-05-12 09:31:10,362 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] REQUEST: GET /notifications
2025-05-12 09:31:10,363 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:31:10,363 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:31:10,363 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-9] Securing GET /notifications/unread-count?currentUserId=1
2025-05-12 09:31:10,363 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-4] Securing GET /notifications?currentUserId=1
2025-05-12 09:31:10,363 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-4] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:31:10,363 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-9] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:31:10,363 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Processing request to URL: /notifications, Method: GET
2025-05-12 09:31:10,363 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Processing request to URL: /notifications/unread-count, Method: GET
2025-05-12 09:31:10,363 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:31:10,363 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:31:10,363 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Found Authorization header with Bearer token
2025-05-12 09:31:10,363 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Found Authorization header with Bearer token
2025-05-12 09:31:10,363 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:31:10,363 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:31:10,364 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-4] JWT token validation successful
2025-05-12 09:31:10,364 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-9] JWT token validation successful
2025-05-12 09:31:10,364 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-4] Extracted username from JWT token: a1234
2025-05-12 09:31:10,364 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Valid JWT token found for user: a1234
2025-05-12 09:31:10,364 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-9] Extracted username from JWT token: a1234
2025-05-12 09:31:10,364 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Valid JWT token found for user: a1234
2025-05-12 09:31:10,366 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:31:10,366 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:31:10,367 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:31:10,367 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:31:10,368 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:31:10,368 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:31:10,369 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:31:10,369 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:31:10,371 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:31:10,371 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:31:10,372 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] User authorities: [ROLE_USER]
2025-05-12 09:31:10,372 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] User authorities: [ROLE_USER]
2025-05-12 09:31:10,372 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:31:10,372 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:31:10,372 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-9] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@2c1bf69b, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:31:10,372 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-4] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@1018e88e, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:31:10,372 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-9] Secured GET /notifications/unread-count?currentUserId=1
2025-05-12 09:31:10,372 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-4] Secured GET /notifications?currentUserId=1
2025-05-12 09:31:10,373 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:31:10,373 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:31:10,374 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:31:10,374 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:31:10,377 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-4] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:31:10,377 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-9] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:31:10,377 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-4] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:31:10,377 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-9] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:31:10,377 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-4] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:31:10,377 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-9] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:31:10,377 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-4] ENTERING getAllNotifications with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:31:10,378 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-9] ENTERING getUnreadCount with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:31:10,378 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        count(notificati0_.id) as col_0_0_ 
    from
        notifications notificati0_ 
    where
        notificati0_.user_id=? 
        and notificati0_.is_read=0
2025-05-12 09:31:10,378 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        notificati0_.id as id1_6_,
        notificati0_.created_at as created_2_6_,
        notificati0_.is_read as is_read3_6_,
        notificati0_.message as message4_6_,
        notificati0_.reference_id as referenc5_6_,
        notificati0_.title as title6_6_,
        notificati0_.type as type7_6_,
        notificati0_.user_id as user_id8_6_ 
    from
        notifications notificati0_ 
    where
        notificati0_.user_id=?
2025-05-12 09:31:10,378 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:31:10,378 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:31:10,380 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-9] EXITING getUnreadCount with result: [<200 OK OK,25,[]>]
2025-05-12 09:31:10,380 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-9] Method getUnreadCount executed in 3 ms
2025-05-12 09:31:10,381 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-9] Cleared SecurityContextHolder to complete request
2025-05-12 09:31:10,380 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-4] EXITING getAllNotifications with result: [<200 OK OK,[Notification(id=1, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #1 của bạn đã được xác nhận. Tổng tiền: 19990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=1, isRead=true, createdAt=2025-04-19T19:20:21), Notification(id=2, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #2 của bạn đã được xác nhận. Tổng tiền: 19990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=2, isRead=true, createdAt=2025-04-19T19:22:05), Notification(id=3, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #2 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=2, isRead=true, createdAt=2025-04-19T19:22:16), Notification(id=4, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:09), Notification(id=5, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:13), Notification(id=6, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:25), Notification(id=7, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #3 của bạn đã được xác nhận. Tổng tiền: 17990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:12), Notification(id=8, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #3 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:16), Notification(id=9, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Hoàn tiền thành công, message=Đơn hàng #3 đã được hoàn tiền thành công. Số tiền 17990000.00 đã được hoàn vào tài khoản của bạn., type=SYSTEM_ANNOUNCEMENT, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:16), Notification(id=10, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #4 của bạn đã được xác nhận. Tổng tiền: 16011000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=4, isRead=true, createdAt=2025-04-19T19:39:07), Notification(id=11, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #5 của bạn đã được xác nhận. Tổng tiền: 62291000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=5, isRead=true, createdAt=2025-04-22T21:58:23), Notification(id=12, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:42), Notification(id=13, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:46), Notification(id=14, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:50), Notification(id=15, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #6 của bạn đã được xác nhận. Tổng tiền: 62291000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=6, isRead=true, createdAt=2025-04-22T22:59:45), Notification(id=17, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #5 has been approved., type=SYSTEM_ANNOUNCEMENT, referenceId=5, isRead=true, createdAt=2025-05-01T12:01:36), Notification(id=18, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #7 của bạn đã được xác nhận. Tổng tiền: 26720000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=7, isRead=true, createdAt=2025-05-01T12:46:55), Notification(id=19, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #8 của bạn đã được xác nhận. Tổng tiền: 17810000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=8, isRead=true, createdAt=2025-05-01T12:48:51), Notification(id=20, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #8 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=8, isRead=true, createdAt=2025-05-01T12:49:50), Notification(id=21, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Hoàn tiền thành công, message=Đơn hàng #8 đã được hoàn tiền thành công. Số tiền 17810000.00 đã được hoàn vào tài khoản của bạn., type=SYSTEM_ANNOUNCEMENT, referenceId=8, isRead=true, createdAt=2025-05-01T12:49:50), Notification(id=22, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #9 của bạn đã được xác nhận. Tổng tiền: 32660000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=9, isRead=true, createdAt=2025-05-01T12:51:55), Notification(id=23, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Product Update, message=Một người nào đó đã đánh giá bài review của bạn, type=PRODUCT_RESTOCK, referenceId=24, isRead=true, createdAt=2025-05-01T12:57:07), Notification(id=24, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:27), Notification(id=25, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:28), Notification(id=26, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:30), Notification(id=27, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #4 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:31), Notification(id=28, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:44), Notification(id=29, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:47), Notification(id=30, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:49), Notification(id=31, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:51), Notification(id=32, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:55), Notification(id=33, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:56), Notification(id=34, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T13:00:01), Notification(id=35, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T13:00:03), Notification(id=38, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #7 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=7, isRead=false, createdAt=2025-05-01T13:03:19), Notification(id=39, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #9 has been approved. The refund amount of 32660000.00 has been credited to your account., type=SYSTEM_ANNOUNCEMENT, referenceId=9, isRead=false, createdAt=2025-05-01T13:03:27), Notification(id=41, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #1 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=1, isRead=false, createdAt=2025-05-02T21:02:18), Notification(id=42, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #10 của bạn đã được xác nhận. Tổng tiền: 61360000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=10, isRead=false, createdAt=2025-05-02T22:33:52), Notification(id=43, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #11 của bạn đã được xác nhận. Tổng tiền: 9890000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=11, isRead=false, createdAt=2025-05-02T22:34:19), Notification(id=44, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:30), Notification(id=45, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:31), Notification(id=46, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:33), Notification(id=47, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:34), Notification(id=48, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:34), Notification(id=49, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:36), Notification(id=51, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #11 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=11, isRead=false, createdAt=2025-05-02T22:36:22), Notification(id=53, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #10 has been approved. The refund amount of 61360000.00 has been credited to your account., type=SYSTEM_ANNOUNCEMENT, referenceId=10, isRead=false, createdAt=2025-05-02T22:36:59)],[]>]
2025-05-12 09:31:10,382 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-9] RESPONSE: Status=200, Time=19ms
2025-05-12 09:31:10,382 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-4] Method getAllNotifications executed in 5 ms
2025-05-12 09:31:10,383 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-4] Cleared SecurityContextHolder to complete request
2025-05-12 09:31:10,383 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-4] RESPONSE: Status=200, Time=20ms
2025-05-12 09:31:27,266 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2025-05-12 09:31:27,267 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2025-05-12 09:31:27,267 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-05-12 09:31:40,450 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] REQUEST: GET /notifications
2025-05-12 09:31:40,451 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:31:40,451 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-8] Securing GET /notifications?currentUserId=1
2025-05-12 09:31:40,451 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-8] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:31:40,451 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] REQUEST: GET /notifications/unread-count
2025-05-12 09:31:40,451 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Processing request to URL: /notifications, Method: GET
2025-05-12 09:31:40,452 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] HEADERS: host=localhost:8080, user-agent=Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0, accept=application/json, text/plain, */*, accept-language=en-US,en;q=0.5, accept-encoding=gzip, deflate, br, zstd, authorization=Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA, origin=http://localhost:3000, connection=keep-alive, referer=http://localhost:3000/, sec-fetch-dest=empty, sec-fetch-mode=cors, sec-fetch-site=same-site
2025-05-12 09:31:40,452 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:31:40,452 DEBUG org.springframework.security.web.FilterChainProxy [http-nio-8080-exec-1] Securing GET /notifications/unread-count?currentUserId=1
2025-05-12 09:31:40,452 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-1] Set SecurityContextHolder to empty SecurityContext
2025-05-12 09:31:40,452 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Found Authorization header with Bearer token
2025-05-12 09:31:40,452 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:31:40,452 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Processing request to URL: /notifications/unread-count, Method: GET
2025-05-12 09:31:40,452 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Authorization header: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:31:40,452 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Found Authorization header with Bearer token
2025-05-12 09:31:40,452 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Found JWT token in request: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhMTIzNCIsImlhdCI6MTc0NzAxNjcwOCwiZXhwIjoxNzQ3MTAzMTA4fQ.JmucHGV-1LJYwjDtEorwsY1LQKBiSOyrhqHTTETdxIyfeuFgx3XOQQ68aHPx7NWeFVQ5dF8b1J3BNF_dwAWFtA
2025-05-12 09:31:40,452 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-8] JWT token validation successful
2025-05-12 09:31:40,452 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-8] Extracted username from JWT token: a1234
2025-05-12 09:31:40,452 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Valid JWT token found for user: a1234
2025-05-12 09:31:40,452 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-1] JWT token validation successful
2025-05-12 09:31:40,453 DEBUG com.example.tmdt.security.jwt.JwtUtils [http-nio-8080-exec-1] Extracted username from JWT token: a1234
2025-05-12 09:31:40,453 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Valid JWT token found for user: a1234
2025-05-12 09:31:40,455 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:31:40,455 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        user0_.id as id1_22_,
        user0_.address as address2_22_,
        user0_.email as email3_22_,
        user0_.full_name as full_nam4_22_,
        user0_.password as password5_22_,
        user0_.phone_number as phone_nu6_22_,
        user0_.username as username7_22_ 
    from
        users user0_ 
    where
        user0_.username=?
2025-05-12 09:31:40,455 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:31:40,455 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [VARCHAR] - [a1234]
2025-05-12 09:31:40,456 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:31:40,456 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        roles0_.user_id as user_id1_21_0_,
        roles0_.role_id as role_id2_21_0_,
        role1_.id as id1_16_1_,
        role1_.name as name2_16_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
2025-05-12 09:31:40,457 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:31:40,457 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:31:40,459 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:31:40,459 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] User details loaded for: a1234, User class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:31:40,459 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] User authorities: [ROLE_USER]
2025-05-12 09:31:40,460 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] User authorities: [ROLE_USER]
2025-05-12 09:31:40,460 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:31:40,460 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Set authentication for user: a1234 with authorities: [ROLE_USER]
2025-05-12 09:31:40,460 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-1] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@3703e52f, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:31:40,460 DEBUG com.example.tmdt.security.jwt.AuthTokenFilter [http-nio-8080-exec-8] Authentication set in SecurityContext: UsernamePasswordAuthenticationToken [Principal=com.example.tmdt.security.services.UserDetailsImpl@4831c6b9, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]], Principal class: com.example.tmdt.security.services.UserDetailsImpl
2025-05-12 09:31:40,460 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-1] Secured GET /notifications/unread-count?currentUserId=1
2025-05-12 09:31:40,460 DEBUG org.springframework.security.web.FilterChainProxy$VirtualFilterChain [http-nio-8080-exec-8] Secured GET /notifications?currentUserId=1
2025-05-12 09:31:40,461 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:31:40,462 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:31:40,461 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        user0_.id as id1_22_0_,
        user0_.address as address2_22_0_,
        user0_.email as email3_22_0_,
        user0_.full_name as full_nam4_22_0_,
        user0_.password as password5_22_0_,
        user0_.phone_number as phone_nu6_22_0_,
        user0_.username as username7_22_0_,
        roles1_.user_id as user_id1_21_1_,
        role2_.id as role_id2_21_1_,
        role2_.id as id1_16_2_,
        role2_.name as name2_16_2_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    left outer join
        roles role2_ 
            on roles1_.role_id=role2_.id 
    where
        user0_.id=?
2025-05-12 09:31:40,462 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:31:40,464 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-1] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:31:40,465 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-8] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:31:40,465 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-1] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:31:40,465 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [http-nio-8080-exec-8] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController]
2025-05-12 09:31:40,465 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-1] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getUnreadCount(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:31:40,465 DEBUG org.springframework.security.access.intercept.AbstractSecurityInterceptor [http-nio-8080-exec-8] Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.tmdt.controller.NotificationController.getAllNotifications(com.example.tmdt.model.User); target is of class [com.example.tmdt.controller.NotificationController] with attributes [[authorize: 'hasRole('USER') or hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-12 09:31:40,465 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] ENTERING getUnreadCount with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:31:40,465 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] ENTERING getAllNotifications with args: [User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a)]
2025-05-12 09:31:40,466 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        count(notificati0_.id) as col_0_0_ 
    from
        notifications notificati0_ 
    where
        notificati0_.user_id=? 
        and notificati0_.is_read=0
2025-05-12 09:31:40,466 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        notificati0_.id as id1_6_,
        notificati0_.created_at as created_2_6_,
        notificati0_.is_read as is_read3_6_,
        notificati0_.message as message4_6_,
        notificati0_.reference_id as referenc5_6_,
        notificati0_.title as title6_6_,
        notificati0_.type as type7_6_,
        notificati0_.user_id as user_id8_6_ 
    from
        notifications notificati0_ 
    where
        notificati0_.user_id=?
2025-05-12 09:31:40,466 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:31:40,466 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2025-05-12 09:31:40,468 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] EXITING getUnreadCount with result: [<200 OK OK,25,[]>]
2025-05-12 09:31:40,468 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-1] Method getUnreadCount executed in 3 ms
2025-05-12 09:31:40,469 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-1] Cleared SecurityContextHolder to complete request
2025-05-12 09:31:40,468 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] EXITING getAllNotifications with result: [<200 OK OK,[Notification(id=1, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #1 của bạn đã được xác nhận. Tổng tiền: 19990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=1, isRead=true, createdAt=2025-04-19T19:20:21), Notification(id=2, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #2 của bạn đã được xác nhận. Tổng tiền: 19990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=2, isRead=true, createdAt=2025-04-19T19:22:05), Notification(id=3, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #2 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=2, isRead=true, createdAt=2025-04-19T19:22:16), Notification(id=4, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:09), Notification(id=5, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:13), Notification(id=6, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #1 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-19T19:23:25), Notification(id=7, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #3 của bạn đã được xác nhận. Tổng tiền: 17990000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:12), Notification(id=8, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #3 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:16), Notification(id=9, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Hoàn tiền thành công, message=Đơn hàng #3 đã được hoàn tiền thành công. Số tiền 17990000.00 đã được hoàn vào tài khoản của bạn., type=SYSTEM_ANNOUNCEMENT, referenceId=3, isRead=true, createdAt=2025-04-19T19:37:16), Notification(id=10, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #4 của bạn đã được xác nhận. Tổng tiền: 16011000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=4, isRead=true, createdAt=2025-04-19T19:39:07), Notification(id=11, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #5 của bạn đã được xác nhận. Tổng tiền: 62291000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=5, isRead=true, createdAt=2025-04-22T21:58:23), Notification(id=12, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:42), Notification(id=13, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:46), Notification(id=14, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #5 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=true, createdAt=2025-04-22T21:58:50), Notification(id=15, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #6 của bạn đã được xác nhận. Tổng tiền: 62291000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=6, isRead=true, createdAt=2025-04-22T22:59:45), Notification(id=17, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #5 has been approved., type=SYSTEM_ANNOUNCEMENT, referenceId=5, isRead=true, createdAt=2025-05-01T12:01:36), Notification(id=18, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #7 của bạn đã được xác nhận. Tổng tiền: 26720000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=7, isRead=true, createdAt=2025-05-01T12:46:55), Notification(id=19, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #8 của bạn đã được xác nhận. Tổng tiền: 17810000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=8, isRead=true, createdAt=2025-05-01T12:48:51), Notification(id=20, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #8 của bạn đã được cập nhật trạng thái thành: CANCELLED, type=ORDER_STATUS_CHANGE, referenceId=8, isRead=true, createdAt=2025-05-01T12:49:50), Notification(id=21, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Hoàn tiền thành công, message=Đơn hàng #8 đã được hoàn tiền thành công. Số tiền 17810000.00 đã được hoàn vào tài khoản của bạn., type=SYSTEM_ANNOUNCEMENT, referenceId=8, isRead=true, createdAt=2025-05-01T12:49:50), Notification(id=22, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #9 của bạn đã được xác nhận. Tổng tiền: 32660000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=9, isRead=true, createdAt=2025-05-01T12:51:55), Notification(id=23, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Product Update, message=Một người nào đó đã đánh giá bài review của bạn, type=PRODUCT_RESTOCK, referenceId=24, isRead=true, createdAt=2025-05-01T12:57:07), Notification(id=24, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:27), Notification(id=25, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:28), Notification(id=26, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:30), Notification(id=27, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #4 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:31), Notification(id=28, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:44), Notification(id=29, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:47), Notification(id=30, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn hiện Đến trạm trung chuyển, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:49), Notification(id=31, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:51), Notification(id=32, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:55), Notification(id=33, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #6 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T12:59:56), Notification(id=34, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #9 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T13:00:01), Notification(id=35, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #7 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-01T13:00:03), Notification(id=38, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #7 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=7, isRead=false, createdAt=2025-05-01T13:03:19), Notification(id=39, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #9 has been approved. The refund amount of 32660000.00 has been credited to your account., type=SYSTEM_ANNOUNCEMENT, referenceId=9, isRead=false, createdAt=2025-05-01T13:03:27), Notification(id=41, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #1 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=1, isRead=false, createdAt=2025-05-02T21:02:18), Notification(id=42, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #10 của bạn đã được xác nhận. Tổng tiền: 61360000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=10, isRead=false, createdAt=2025-05-02T22:33:52), Notification(id=43, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Đặt hàng thành công, message=Đơn hàng #11 của bạn đã được xác nhận. Tổng tiền: 9890000.00 VND. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=11, isRead=false, createdAt=2025-05-02T22:34:19), Notification(id=44, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:30), Notification(id=45, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 của bạn đang được vận chuyển., type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:31), Notification(id=46, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:33), Notification(id=47, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 của bạn hiện Đang giao hàng, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:34), Notification(id=48, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #11 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:34), Notification(id=49, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Cập nhật trạng thái đơn hàng, message=Đơn hàng #10 đã được giao thành công. Cảm ơn bạn đã mua sắm!, type=ORDER_STATUS_CHANGE, referenceId=null, isRead=false, createdAt=2025-05-02T22:34:36), Notification(id=51, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #11 has been rejected., type=SYSTEM_ANNOUNCEMENT, referenceId=11, isRead=false, createdAt=2025-05-02T22:36:22), Notification(id=53, user=User(id=1, username=a1234, email=leloilonglon9929@gmail.com, password=$2a$10$71ZGdvwifzyKpF97OQWI6eQelfpiJL57fVoNkywu4fdiuh6q.Zg4m, fullName=sYn good72, phoneNumber=sdasd, address=a), title=Refund Request Update, message=Your refund request for order #10 has been approved. The refund amount of 61360000.00 has been credited to your account., type=SYSTEM_ANNOUNCEMENT, referenceId=10, isRead=false, createdAt=2025-05-02T22:36:59)],[]>]
2025-05-12 09:31:40,470 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-1] RESPONSE: Status=200, Time=18ms
2025-05-12 09:31:40,470 DEBUG com.example.tmdt.utils.LoggerUtil [http-nio-8080-exec-8] Method getAllNotifications executed in 5 ms
2025-05-12 09:31:40,472 DEBUG org.springframework.security.web.context.SecurityContextPersistenceFilter [http-nio-8080-exec-8] Cleared SecurityContextHolder to complete request
2025-05-12 09:31:40,472 INFO com.example.tmdt.filter.RequestLoggingFilter [http-nio-8080-exec-8] RESPONSE: Status=200, Time=21ms
2025-05-12 09:31:53,204 INFO org.springframework.core.log.CompositeLog [SpringApplicationShutdownHook] Stopping...
2025-05-12 09:31:53,204 INFO org.springframework.core.log.CompositeLog [SpringApplicationShutdownHook] BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@3597174b]]
2025-05-12 09:31:53,204 INFO org.springframework.core.log.CompositeLog [SpringApplicationShutdownHook] Stopped.
2025-05-12 09:31:53,224 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-12 09:31:53,226 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2025-05-12 09:31:53,226 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=5, active=0, idle=5, waiting=0)
2025-05-12 09:31:53,228 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2616b618: (connection evicted)
2025-05-12 09:31:53,228 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@14c05805: (connection evicted)
2025-05-12 09:31:53,229 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1d0f0a7b: (connection evicted)
2025-05-12 09:31:53,229 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@5c320040: (connection evicted)
2025-05-12 09:31:53,229 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6da49978: (connection evicted)
2025-05-12 09:31:53,229 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2025-05-12 09:31:53,229 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
